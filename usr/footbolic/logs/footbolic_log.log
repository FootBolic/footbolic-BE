INFO  24-01-21 16:56:39[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 34326 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-21 16:56:39[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-21 16:56:40[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-21 16:56:40[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
INFO  24-01-21 16:56:41[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-21 16:56:41[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 16:56:41[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-21 16:56:41[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-21 16:56:41[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-21 16:56:41[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1326 ms
INFO  24-01-21 16:56:41[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-21 16:56:41[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-21 16:56:41[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@73bb573d
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@1068176
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1068176
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7d25913
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@c14e5a5
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16f15ae9
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@77896335
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5c1b89ac
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40a1b6d4
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@175581eb
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2b79c8ff
DEBUG 24-01-21 16:56:41[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2baf72d5
INFO  24-01-21 16:56:41[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-21 16:56:41[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-21 16:56:42[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@48b2dbc4
INFO  24-01-21 16:56:42[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@279c4e3b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@334b392d)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59f7c106) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@136fece2)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56478522) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3caf5c96)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b3755f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37d3aa8c)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd747c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1bdafb01)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7aa3857b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ec769)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37806be6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bce9ce4)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d2046bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b33fff9)
DEBUG 24-01-21 16:56:42[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@fd87c22) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@fee881)
DEBUG 24-01-21 16:56:42[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-21 16:56:42[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-21 16:56:42[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-21 16:56:42[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 16:56:42[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@48af5f38
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7d25913`
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 16:56:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 16:56:42[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e93108a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34e25492]
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:42[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 16:56:43[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-21 16:56:43[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e93108a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@739be7ec]
DEBUG 24-01-21 16:56:43[main] [SQL:135] - 
    alter table authorization 
       add constraint FK9h5g5dlfd2ift1h5x1a06h23k 
       foreign key (menu_id) 
       references menu (id)
TRACE 24-01-21 16:56:43[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@739be7ec] for TypeConfiguration
INFO  24-01-21 16:56:43[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-21 16:56:43[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-21 16:56:44[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 16:56:44[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-21 16:56:44[main] [FootbolicApplication:56] - Started FootbolicApplication in 5.122 seconds (process running for 5.448)
INFO  24-01-21 16:58:39[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-21 16:58:39[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-21 16:58:39[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1163313387<open>)] for JPA transaction
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2818efa1]
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [SQL:135] - 
    select
        re1_0.id,
        re1_0.create_member_id,
        re1_0.created_at,
        re1_0.title,
        re1_0.update_member_id,
        re1_0.updated_at 
    from
        role re1_0 
    limit
        ?, ?
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [JpaTransactionManager:789] - Initiating transaction commit
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [JpaTransactionManager:556] - Committing JPA transaction on EntityManager [SessionImpl(1163313387<open>)]
DEBUG 24-01-21 16:58:39[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-21 16:59:29[http-nio-8080-exec-3] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because "this.members" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because "this.members" is null
	at com.footbolic.api.role.dto.RoleDto.toEntity(RoleDto.java:46)
	at com.footbolic.api.role.service.RoleServiceImpl.saveRole(RoleServiceImpl.java:30)
	at com.footbolic.api.role.controller.RoleController.createRole(RoleController.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-21 17:05:58[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-21 17:05:58[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@739be7ec] for TypeConfiguration
DEBUG 24-01-21 17:05:58[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@556a1b9c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@739be7ec]
INFO  24-01-21 17:05:58[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-21 17:05:58[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-21 17:06:02[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 34362 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-21 17:06:02[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-21 17:06:02[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-21 17:06:03[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 68 ms. Found 2 JPA repository interfaces.
INFO  24-01-21 17:06:03[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-21 17:06:03[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:06:03[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-21 17:06:03[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-21 17:06:03[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-21 17:06:03[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1258 ms
INFO  24-01-21 17:06:03[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-21 17:06:03[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-21 17:06:03[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@573aeab2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@573aeab2
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@71789580
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23ee2ccf
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2f04993d
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@333398f
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@103c97ff
DEBUG 24-01-21 17:06:03[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d25913
INFO  24-01-21 17:06:04[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-21 17:06:04[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-21 17:06:04[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d1cfe4
INFO  24-01-21 17:06:04[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@225e09f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bc8d68b)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fa212df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cf8a235)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e3b2dd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@238ad211)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c011855) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6591f8ea)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5273143e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@279c4e3b)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@334b392d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59f7c106)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@136fece2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56478522)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3caf5c96) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b3755f4)
DEBUG 24-01-21 17:06:04[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37d3aa8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd747c1)
DEBUG 24-01-21 17:06:04[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-21 17:06:04[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-21 17:06:04[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-21 17:06:04[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:06:04[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@35ab4260
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71789580`
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:06:04[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:06:04[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@38cb1606] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@61c4cebd]
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:04[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:05[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-21 17:06:05[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@38cb1606] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@37c762aa]
TRACE 24-01-21 17:06:05[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@37c762aa] for TypeConfiguration
INFO  24-01-21 17:06:05[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-21 17:06:05[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-21 17:06:06[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:06:06[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-21 17:06:06[main] [FootbolicApplication:56] - Started FootbolicApplication in 4.334 seconds (process running for 4.669)
INFO  24-01-21 17:06:12[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-21 17:06:12[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-21 17:06:12[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
ERROR 24-01-21 17:06:12[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because "this.members" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because "this.members" is null
	at com.footbolic.api.role.dto.RoleDto.toEntity(RoleDto.java:46)
	at com.footbolic.api.role.service.RoleServiceImpl.saveRole(RoleServiceImpl.java:30)
	at com.footbolic.api.role.controller.RoleController.createRole(RoleController.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-21 17:06:27[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-21 17:06:27[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@37c762aa] for TypeConfiguration
DEBUG 24-01-21 17:06:27[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@16c67509] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@37c762aa]
INFO  24-01-21 17:06:27[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-21 17:06:27[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-21 17:06:37[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 34383 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-21 17:06:37[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-21 17:06:38[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-21 17:06:38[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 72 ms. Found 2 JPA repository interfaces.
INFO  24-01-21 17:06:38[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-21 17:06:38[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:06:38[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-21 17:06:38[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-21 17:06:38[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-21 17:06:38[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1380 ms
INFO  24-01-21 17:06:38[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-21 17:06:39[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-21 17:06:39[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@6744707b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6744707b
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@77aea
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@73e4bb60
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@9a9aa68
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1537e43
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@573aeab2
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1304e0d7
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6ddc67d0
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7767bd4e
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7708b66a
INFO  24-01-21 17:06:39[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-21 17:06:39[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-21 17:06:39[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75452aea
INFO  24-01-21 17:06:39[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fd33f48) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75a226ea)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@986b619) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a1a20ae)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c956dda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@186481d4)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24eecabf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ffa91dc)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78d6c244) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@448086ab)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16e907b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6de610c6)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23ec2bdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@631944d4)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d132bb6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60ae7cf2)
DEBUG 24-01-21 17:06:39[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@225e09f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bc8d68b)
DEBUG 24-01-21 17:06:39[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-21 17:06:39[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-21 17:06:39[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-21 17:06:39[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:06:39[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7f53fc38
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@77aea`
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:06:39[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:06:39[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f60824e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1218e12]
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:06:40[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-21 17:06:40[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f60824e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3f31892e]
TRACE 24-01-21 17:06:41[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3f31892e] for TypeConfiguration
INFO  24-01-21 17:06:41[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-21 17:06:41[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-21 17:06:42[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:06:42[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-21 17:06:42[main] [FootbolicApplication:56] - Started FootbolicApplication in 5.703 seconds (process running for 6.052)
INFO  24-01-21 17:06:47[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-21 17:06:47[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-21 17:06:47[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
ERROR 24-01-21 17:06:47[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because "this.members" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.util.List.stream()" because "this.members" is null
	at com.footbolic.api.role.dto.RoleDto.toEntity(RoleDto.java:46)
	at com.footbolic.api.role.service.RoleServiceImpl.saveRole(RoleServiceImpl.java:30)
	at com.footbolic.api.role.controller.RoleController.createRole(RoleController.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-21 17:11:13[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 34446 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-21 17:11:13[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-21 17:11:14[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-21 17:11:14[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 91 ms. Found 2 JPA repository interfaces.
INFO  24-01-21 17:11:14[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-21 17:11:14[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:11:14[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-21 17:11:14[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-21 17:11:14[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-21 17:11:14[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1435 ms
INFO  24-01-21 17:11:14[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-21 17:11:15[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-21 17:11:15[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@3360283
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3360283
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@433ef204
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4dd2ef54
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@795b66d
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1068176
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5bf4764d
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71789580
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23ee2ccf
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6e685e6c
INFO  24-01-21 17:11:15[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-21 17:11:15[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-21 17:11:15[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58b8f9e3
INFO  24-01-21 17:11:15[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@16e907b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6de610c6)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23ec2bdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@631944d4)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d132bb6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60ae7cf2)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@225e09f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bc8d68b)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fa212df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cf8a235)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e3b2dd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@238ad211)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c011855) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6591f8ea)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5273143e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@279c4e3b)
DEBUG 24-01-21 17:11:15[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@334b392d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59f7c106)
DEBUG 24-01-21 17:11:15[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-21 17:11:15[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-21 17:11:15[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-21 17:11:15[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:11:15[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@627acb38
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@433ef204`
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:11:15[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:11:15[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@545604a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1029cf9]
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:16[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:11:17[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-21 17:11:17[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@545604a9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4a3404fa]
TRACE 24-01-21 17:11:17[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4a3404fa] for TypeConfiguration
INFO  24-01-21 17:11:17[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-21 17:11:17[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-21 17:11:18[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:11:18[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-21 17:11:18[main] [FootbolicApplication:56] - Started FootbolicApplication in 6.125 seconds (process running for 6.567)
INFO  24-01-21 17:11:36[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-21 17:11:36[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-21 17:11:36[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-01-21 17:11:57[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1486823386<open>)] for JPA transaction
DEBUG 24-01-21 17:11:57[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-21 17:11:57[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75774047]
DEBUG 24-01-21 17:11:57[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-21 17:11:57[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1486823386<open>)]
DEBUG 24-01-21 17:11:57[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-21 17:11:57[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : com.footbolic.api.role.entity.RoleEntity.createMemberId] with root cause
org.hibernate.PropertyValueException: not-null property references a null or transient value : com.footbolic.api.role.entity.RoleEntity.createMemberId
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:109)
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:54)
	at org.hibernate.action.internal.AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready(AbstractEntityInsertAction.java:124)
	at org.hibernate.action.internal.AbstractEntityInsertAction.makeEntityManaged(AbstractEntityInsertAction.java:133)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:298)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:258)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:399)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy133.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy133.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy149.save(Unknown Source)
	at com.footbolic.api.role.service.RoleServiceImpl.saveRole(RoleServiceImpl.java:30)
	at com.footbolic.api.role.controller.RoleController.createRole(RoleController.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1541461019<open>)] for JPA transaction
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@55273117]
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [JpaTransactionManager:789] - Initiating transaction commit
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [JpaTransactionManager:556] - Committing JPA transaction on EntityManager [SessionImpl(1541461019<open>)]
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [SQL:135] - 
    insert 
    into
        role
        (create_member_id, created_at, title, update_member_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
DEBUG 24-01-21 17:12:29[http-nio-8080-exec-3] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-01-21 17:13:24[http-nio-8080-exec-5] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1329937190<open>)] for JPA transaction
DEBUG 24-01-21 17:13:24[http-nio-8080-exec-5] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-01-21 17:13:24[http-nio-8080-exec-5] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@582148d6]
DEBUG 24-01-21 17:13:25[http-nio-8080-exec-5] [SQL:135] - 
    select
        re1_0.id,
        re1_0.create_member_id,
        re1_0.created_at,
        re1_0.title,
        re1_0.update_member_id,
        re1_0.updated_at 
    from
        role re1_0 
    limit
        ?, ?
DEBUG 24-01-21 17:13:25[http-nio-8080-exec-5] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-21 17:13:25[http-nio-8080-exec-5] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1329937190<open>)]
DEBUG 24-01-21 17:13:25[http-nio-8080-exec-5] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-21 17:13:25[http-nio-8080-exec-5] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: No default constructor for entity 'com.footbolic.api.role.entity.RoleEntity'] with root cause
org.hibernate.InstantiationException: No default constructor for entity 'com.footbolic.api.role.entity.RoleEntity'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4508)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1475)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.instantiateEntity(AbstractEntityInitializer.java:683)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:676)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:642)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveEntityInstance(AbstractEntityInitializer.java:533)
	at org.hibernate.sql.results.graph.entity.AbstractEntityInitializer.resolveInstance(AbstractEntityInitializer.java:397)
	at org.hibernate.sql.results.internal.InitializersList.resolveInstances(InitializersList.java:89)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:108)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:86)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:201)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:361)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$0(ConcreteSqmSelectQueryPlan.java:109)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:305)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:246)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.readPage(SimpleJpaRepository.java:697)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:449)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:426)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy149.findAll(Unknown Source)
	at com.footbolic.api.role.service.RoleServiceImpl.findAllRoles(RoleServiceImpl.java:20)
	at com.footbolic.api.role.controller.RoleController.getRoleList(RoleController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-21 17:14:07[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 34495 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-21 17:14:07[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-21 17:14:07[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-21 17:14:07[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 66 ms. Found 2 JPA repository interfaces.
INFO  24-01-21 17:14:08[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-21 17:14:08[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:14:08[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-21 17:14:08[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-21 17:14:08[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-21 17:14:08[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1250 ms
INFO  24-01-21 17:14:08[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-21 17:14:08[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-21 17:14:08[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@9a9aa68
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@9a9aa68
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@359ceb13
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1068176
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5bf4764d
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@23ee2ccf
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6e685e6c
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-01-21 17:14:08[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2f04993d
INFO  24-01-21 17:14:08[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-21 17:14:08[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-21 17:14:09[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3212bfd
INFO  24-01-21 17:14:09[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@631944d4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d132bb6)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60ae7cf2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@225e09f0)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bc8d68b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fa212df)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cf8a235) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e3b2dd3)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@238ad211) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c011855)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6591f8ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5273143e)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@279c4e3b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@334b392d)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59f7c106) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@136fece2)
DEBUG 24-01-21 17:14:09[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56478522) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3caf5c96)
DEBUG 24-01-21 17:14:09[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-21 17:14:09[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-21 17:14:09[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-21 17:14:09[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:14:09[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@165aa43a
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@359ceb13`
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:14:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-21 17:14:09[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dfd12b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4348fa35]
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-21 17:14:10[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-21 17:14:10[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dfd12b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5b78a946]
TRACE 24-01-21 17:14:10[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5b78a946] for TypeConfiguration
INFO  24-01-21 17:14:10[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-21 17:14:11[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-21 17:14:12[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-21 17:14:12[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-21 17:14:12[main] [FootbolicApplication:56] - Started FootbolicApplication in 5.464 seconds (process running for 5.842)
INFO  24-01-21 17:14:27[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-21 17:14:27[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-21 17:14:27[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1128759445<open>)] for JPA transaction
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1ec907d9]
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [SQL:135] - 
    select
        re1_0.id,
        re1_0.create_member_id,
        re1_0.created_at,
        re1_0.title,
        re1_0.update_member_id,
        re1_0.updated_at 
    from
        role re1_0 
    limit
        ?, ?
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [JpaTransactionManager:789] - Initiating transaction commit
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [JpaTransactionManager:556] - Committing JPA transaction on EntityManager [SessionImpl(1128759445<open>)]
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [SQL:135] - 
    select
        m1_0.role_id,
        m1_0.id,
        m1_0.created_at,
        m1_0.full_name,
        m1_0.nickname,
        m1_0.refresh_token,
        m1_0.updated_at 
    from
        member m1_0 
    where
        m1_0.role_id=?
DEBUG 24-01-21 17:14:27[http-nio-8080-exec-1] [SQL:135] - 
    select
        a1_0.role_id,
        a1_0.id,
        a1_0.create_member_id,
        a1_0.created_at,
        a1_0.menu_id,
        a1_0.title,
        a1_0.update_member_id,
        a1_0.updated_at 
    from
        authorization a1_0 
    where
        a1_0.role_id=?
