INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 4 ms
INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-15 00:00:02[http-nio-8080-exec-2] [MenuController:36] - createMemberId : 202401141129570000000000000012
ERROR 24-01-15 00:00:02[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:18)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-15 00:01:04[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-01-15 00:01:04[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:01:04[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-15 00:01:06[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24126 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-15 00:01:06[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-15 00:01:06[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-15 00:01:06[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interface.
INFO  24-01-15 00:01:07[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-15 00:01:07[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:01:07[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-15 00:01:07[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-15 00:01:07[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-15 00:01:07[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 971 ms
INFO  24-01-15 00:01:07[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-15 00:01:07[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-15 00:01:07[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
INFO  24-01-15 00:01:07[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-15 00:01:07[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-15 00:01:07[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bbf20d1
INFO  24-01-15 00:01:07[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:08[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-01-15 00:01:08[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-15 00:01:08[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-15 00:01:09[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:01:09[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-15 00:01:09[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.392 seconds (process running for 3.615)
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-15 00:01:13[http-nio-8080-exec-2] [MenuController:36] - createMemberId : 202401141129570000000000000012
ERROR 24-01-15 00:01:13[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:19)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-15 00:01:31[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-01-15 00:01:31[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:01:31[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-15 00:01:32[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24134 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-15 00:01:32[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-15 00:01:33[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-15 00:01:33[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interface.
INFO  24-01-15 00:01:33[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-15 00:01:33[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:01:33[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-15 00:01:33[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-15 00:01:33[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-15 00:01:33[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1024 ms
INFO  24-01-15 00:01:34[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-15 00:01:34[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-15 00:01:34[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16f7f59f
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16f7f59f
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@16f7f59f
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4ee8051c
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4ee8051c
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@53125718
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@53125718
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@53016b11
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@53016b11
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7af327e3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7af327e3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7af327e3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@743d0d44
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@743d0d44
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@743d0d44
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@35563e4c
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@35563e4c
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6dd79214
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@73bb573d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@73bb573d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@38811103
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@787d1f9c
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2becfd4c
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4cc8d70d
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5c59a0f7
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@101330ad
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@625487a6
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@682e445e
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@79e10fb4
INFO  24-01-15 00:01:34[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-15 00:01:34[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-15 00:01:34[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@618f627b
INFO  24-01-15 00:01:34[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ac417a2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64c95480)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69499c6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3451fc88)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e0294a7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3041beb3)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15cee630) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e40fdbd)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@246de37e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@19647566)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b79ff1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@527d48db)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@194037f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2335aef2)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17003497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f038d3c)
DEBUG 24-01-15 00:01:34[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@376498da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39a8e2fa)
DEBUG 24-01-15 00:01:34[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-15 00:01:34[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-15 00:01:34[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-15 00:01:34[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:01:34[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3b9c9b8b
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38811103`
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:01:34[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:01:34[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4468fda8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fc1e4fb]
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:34[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:01:35[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-15 00:01:35[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4468fda8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@496e0f9d]
TRACE 24-01-15 00:01:35[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@496e0f9d] for TypeConfiguration
INFO  24-01-15 00:01:35[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-15 00:01:35[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-15 00:01:35[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:01:35[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-15 00:01:35[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.412 seconds (process running for 3.638)
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [MenuController:33] - here1
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [MenuController:34] - title : test menu
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [MenuController:35] - path : /test/menu
INFO  24-01-15 00:01:45[http-nio-8080-exec-1] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(545415123<open>)] for JPA transaction
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@204706fc]
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [SQL:135] - 
    select
        me1_0.id,
        me1_0.create_member_id,
        me1_0.created_at,
        me1_0.icon_code_id,
        me1_0.parent_id,
        me1_0.path,
        me1_0.title,
        me1_0.update_member_id,
        me1_0.updated_at 
    from
        menu me1_0 
    where
        me1_0.id=?
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:789] - Initiating transaction commit
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:556] - Committing JPA transaction on EntityManager [SessionImpl(545415123<open>)]
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(545415123<open>)] for JPA transaction
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f239a3]
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(545415123<open>)]
DEBUG 24-01-15 00:01:45[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-15 00:01:45[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:19)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-15 00:17:43[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-15 00:17:43[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@496e0f9d] for TypeConfiguration
DEBUG 24-01-15 00:17:43[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34a841bf] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@496e0f9d]
INFO  24-01-15 00:17:43[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:17:43[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-15 00:17:45[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24254 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-15 00:17:45[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-15 00:17:45[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-15 00:17:45[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 53 ms. Found 1 JPA repository interface.
INFO  24-01-15 00:17:46[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-15 00:17:46[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:17:46[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-15 00:17:46[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-15 00:17:46[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-15 00:17:46[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1022 ms
INFO  24-01-15 00:17:46[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-15 00:17:46[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-15 00:17:46[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@36510e73
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@36510e73
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@79be91eb
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@684ce74c
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@d36c1c3
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@96abc76
INFO  24-01-15 00:17:46[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-15 00:17:46[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-15 00:17:46[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15f861ee
INFO  24-01-15 00:17:46[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c08c787)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b8d20e6)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e49437) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7645b7d)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c50cd7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea84e01)
DEBUG 24-01-15 00:17:46[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a4930cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3fd33f48)
DEBUG 24-01-15 00:17:46[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-15 00:17:46[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-15 00:17:46[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-15 00:17:46[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:17:46[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@102af1bb
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@79be91eb`
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:17:46[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:17:46[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a54638b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d8f2eec]
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:17:47[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-15 00:17:47[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a54638b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@118879d2]
TRACE 24-01-15 00:17:47[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@118879d2] for TypeConfiguration
INFO  24-01-15 00:17:47[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-15 00:17:48[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-15 00:17:48[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:17:48[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-15 00:17:48[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.663 seconds (process running for 3.955)
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-15 00:17:56[http-nio-8080-exec-2] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-15 00:17:56[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1630038238<open>)] for JPA transaction
DEBUG 24-01-15 00:17:56[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-15 00:17:56[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@277621dc]
DEBUG 24-01-15 00:17:56[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-15 00:17:56[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1630038238<open>)]
DEBUG 24-01-15 00:17:56[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-15 00:17:56[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : com.footbolic.api.menu.entity.MenuEntity.createdAt] with root cause
org.hibernate.PropertyValueException: not-null property references a null or transient value : com.footbolic.api.menu.entity.MenuEntity.createdAt
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:109)
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:54)
	at org.hibernate.action.internal.AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready(AbstractEntityInsertAction.java:124)
	at org.hibernate.action.internal.AbstractEntityInsertAction.makeEntityManaged(AbstractEntityInsertAction.java:133)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:298)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:258)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:399)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:18)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-15 00:20:30[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 24302 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-15 00:20:30[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-15 00:20:30[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-15 00:20:30[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 53 ms. Found 1 JPA repository interface.
INFO  24-01-15 00:20:31[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-15 00:20:31[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-15 00:20:31[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3ee6dc82
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3ee6dc82
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3ee6dc82
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2f86f9cf
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2f86f9cf
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@adafe19
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@adafe19
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7e2bd5e6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7e2bd5e6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76a1146d
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76a1146d
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@76a1146d
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ef1c3f7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ef1c3f7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ef1c3f7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3386c206
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3386c206
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1322b575
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6dded900
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6dded900
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@d504137
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@8432469
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@e4ca109
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@e4ca109
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@e4ca109
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@15c16f19
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@15c16f19
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@15c16f19
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1a17dd6f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1a17dd6f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1a17dd6f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@be6d228
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@be6d228
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@be6d228
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@60c96eb4
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@60c96eb4
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@60c96eb4
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7eee6c13
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7eee6c13
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5ab63a04
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5ab63a04
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@677cc4e8
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@677cc4e8
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@677cc4e8
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4c6bba7d
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@41e8d917
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@41e8d917
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2ae5bd34
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b3f7704
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b3f7704
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b3f7704
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3a16984c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3db1ce78
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3a3ad8e7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6a6d1ff3
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6a6d1ff3
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64b73e0a
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64b73e0a
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57c6feea
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3b57f915
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@39c7fb0b
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@645dc557
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@48c5698
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@17884d
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@68e24e7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@68e24e7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@c732e1c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@c732e1c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6aad919c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6aad919c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@56c42964
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@56c42964
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@211a9647
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@211a9647
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@340c5fb6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@322b09da
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45d389f2
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45d389f2
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@308e87a1
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66298fe9
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c262f2f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5563bb40
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5563bb40
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11148dc2
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3be80ece
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@60a01cb
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@60a01cb
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@4efb13f1
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4efb13f1
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7bb4ed71
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7bb4ed71
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7bb4ed71
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5112b7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5112b7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5112b7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@56835f2f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@40f1aa95
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1c72189f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1c72189f
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@14be750c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@14be750c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@14be750c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@58882a93
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@15e08615
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@19dac2d6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@19dac2d6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7e2bc2f4
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7e2bc2f4
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7e2bc2f4
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@67eeb310
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@67eeb310
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@76af51d6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@76af51d6
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@39ace1a7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@39ace1a7
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1930a804
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1930a804
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@bd4ee01
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@bd4ee01
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f93f4c
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@300bb303
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@300bb303
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@52a67293
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@793cef95
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38f502fc
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@67afe909
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@79f1e22e
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6903ed0e
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@e154848
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16ea0f22
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@60fc7f43
INFO  24-01-15 00:20:31[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-15 00:20:31[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-15 00:20:31[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@64ed18ec
INFO  24-01-15 00:20:31[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12e2f5ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e61a863)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35f01759) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fea9a7b)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa07d80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69c1ea07)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cbe72b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27fc0217)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e993715) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@686e7513)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47eae91d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c1a74d)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@472719df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cfa2ac5)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4cc89246) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@413eaf5d)
DEBUG 24-01-15 00:20:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e28af44) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33891646)
DEBUG 24-01-15 00:20:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-15 00:20:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-15 00:20:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-15 00:20:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:20:31[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3400d6fa
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@52a67293`
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:20:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:20:31[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@611a2d82] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6774f264]
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:32[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-15 00:20:32[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@611a2d82] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45bbb3e8]
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table authorization (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        menu_id varchar(30) not null,
        role_id varchar(30) not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table banner (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        ends_at DATETIME,
        image_path varchar(100) not null,
        is_linked TINYINT(1) default false not null,
        is_mobile TINYINT(1) default false not null,
        is_time_limited TINYINT(1) default false not null,
        link_address varchar(100),
        starts_at DATETIME,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table board (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        is_announceable TINYINT(1) default true not null,
        is_commentable TINYINT(1) default true not null,
        is_recommendable TINYINT(1) default true not null,
        is_secretable TINYINT(1) default true not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table comment (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        content varchar(400) not null,
        post_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table comment_recommendation (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        comment_id varchar(30) not null,
        member_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table common_code (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        code varchar(20) not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table member (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        full_name varchar(15) not null,
        nickname varchar(20) not null,
        refresh_token varchar(100),
        role_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table menu (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        icon_code_id varchar(30),
        parent_id varchar(30),
        path varchar(100),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table notification (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        content varchar(100) not null,
        member_id varchar(30) not null,
        path varchar(100),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table post (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        announcement_ends_at datetime(6),
        announcement_starts_at datetime(6),
        board_id varchar(30) not null,
        content TEXT,
        is_announcement TINYINT(1) default false not null,
        is_secret TINYINT(1) default false not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table post_recommendation (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        member_id varchar(30) not null,
        post_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table reply (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        comment_id varchar(30) not null,
        content varchar(400) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table reply_recommendation (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        member_id varchar(30) not null,
        reply_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table role (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    create table test_entity (
        id varchar(255) not null,
        val1 varchar(255),
        val2 varchar(255),
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table authorization 
       add constraint FKdadvekdw0frovvf0jdgwwqab1 
       foreign key (menu_id) 
       references member (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table authorization 
       add constraint FKasb1m6oaq8s0hljdsdb3yrxq7 
       foreign key (role_id) 
       references role (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table comment 
       add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 
       foreign key (post_id) 
       references post (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table comment_recommendation 
       add constraint FKgtxe1netvwcuwtrw4jb57ufem 
       foreign key (comment_id) 
       references comment (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table member 
       add constraint FK7cm1epoypfx0kcnrp01en2l3m 
       foreign key (role_id) 
       references role (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKgeupubdqncc1lpgf2cn4fqwbc 
       foreign key (parent_id) 
       references menu (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table notification 
       add constraint FK1xep8o2ge7if6diclyyx53v4q 
       foreign key (member_id) 
       references member (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table post 
       add constraint FK2t7katxxymxif93a9osshl0ns 
       foreign key (board_id) 
       references board (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table post_recommendation 
       add constraint FKk751muf3lqcpy8s826iiclbgp 
       foreign key (post_id) 
       references post (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table reply 
       add constraint FK6w0ns67lrq1jdiwi5xvtj1vxx 
       foreign key (comment_id) 
       references comment (id)
DEBUG 24-01-15 00:20:32[Test worker] [SQL:135] - 
    alter table reply_recommendation 
       add constraint FKm0ehn4ukqsdeg152g1pxsmok6 
       foreign key (reply_id) 
       references reply (id)
TRACE 24-01-15 00:20:32[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@45bbb3e8] for TypeConfiguration
INFO  24-01-15 00:20:32[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-15 00:20:33[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-15 00:20:33[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.694 seconds (process running for 4.581)
INFO  24-01-15 00:20:34[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-15 00:20:34[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@45bbb3e8] for TypeConfiguration
DEBUG 24-01-15 00:20:34[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75e4fb9b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45bbb3e8]
INFO  24-01-15 00:20:34[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:20:34[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-15 00:20:43[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-15 00:20:43[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@118879d2] for TypeConfiguration
DEBUG 24-01-15 00:20:43[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@9e7b131] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@118879d2]
INFO  24-01-15 00:20:43[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:20:43[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-15 00:20:46[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24314 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-15 00:20:46[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-15 00:20:46[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-15 00:20:46[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interface.
INFO  24-01-15 00:20:47[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-15 00:20:47[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:20:47[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-15 00:20:47[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-15 00:20:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-15 00:20:47[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 940 ms
INFO  24-01-15 00:20:47[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-15 00:20:47[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-15 00:20:47[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@79e10fb4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79e10fb4
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@19526f1d
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3d1c933
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@684ce74c
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4b28a7bf
INFO  24-01-15 00:20:47[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-15 00:20:47[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-15 00:20:47[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13c90c06
INFO  24-01-15 00:20:47[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ff2266c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5fbae40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51f34185) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b8d20e6)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e49437) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7645b7d)
DEBUG 24-01-15 00:20:47[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c50cd7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea84e01)
DEBUG 24-01-15 00:20:47[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-15 00:20:47[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-15 00:20:47[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-15 00:20:47[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:20:47[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@595ec862
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@19526f1d`
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:20:47[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:20:47[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4fee14b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11c3d22f]
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:20:48[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-15 00:20:48[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4fee14b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@57777c23]
TRACE 24-01-15 00:20:48[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@57777c23] for TypeConfiguration
INFO  24-01-15 00:20:48[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-15 00:20:48[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-15 00:20:49[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:20:49[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-15 00:20:49[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.351 seconds (process running for 3.566)
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 2 ms
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [MenuController:33] - here1
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [MenuController:34] - title : test_menu
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [MenuController:35] - path : /test/menu
INFO  24-01-15 00:21:49[http-nio-8080-exec-1] [MenuController:36] - createMemberId : test_member_id
DEBUG 24-01-15 00:21:49[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(588611236<open>)] for JPA transaction
DEBUG 24-01-15 00:21:49[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-15 00:21:49[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4ffe3865]
DEBUG 24-01-15 00:21:49[http-nio-8080-exec-1] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-15 00:21:49[http-nio-8080-exec-1] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(588611236<open>)]
DEBUG 24-01-15 00:21:49[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-15 00:21:49[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : com.footbolic.api.menu.entity.MenuEntity.createdAt] with root cause
org.hibernate.PropertyValueException: not-null property references a null or transient value : com.footbolic.api.menu.entity.MenuEntity.createdAt
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:109)
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:54)
	at org.hibernate.action.internal.AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready(AbstractEntityInsertAction.java:124)
	at org.hibernate.action.internal.AbstractEntityInsertAction.makeEntityManaged(AbstractEntityInsertAction.java:133)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:298)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:271)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:258)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:399)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy133.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy133.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy143.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:18)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-15 00:22:53[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-15 00:22:53[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@57777c23] for TypeConfiguration
DEBUG 24-01-15 00:22:53[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4afd2816] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@57777c23]
INFO  24-01-15 00:22:53[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:22:53[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-15 00:22:55[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24347 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-15 00:22:55[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-15 00:22:56[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-15 00:22:56[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 50 ms. Found 1 JPA repository interface.
INFO  24-01-15 00:22:56[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-15 00:22:56[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:22:56[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-15 00:22:56[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-15 00:22:56[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-15 00:22:56[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 951 ms
INFO  24-01-15 00:22:56[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-15 00:22:56[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-15 00:22:56[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2c47a053
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2c47a053
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@626c569b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@684ce74c
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@d36c1c3
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@96abc76
DEBUG 24-01-15 00:22:56[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4d69d288
INFO  24-01-15 00:22:57[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-15 00:22:57[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-15 00:22:57[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f1158ee
INFO  24-01-15 00:22:57[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c08c787) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67f591c2)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b8d20e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e49437)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7645b7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c50cd7d)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea84e01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a4930cf)
DEBUG 24-01-15 00:22:57[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fd33f48) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75a226ea)
DEBUG 24-01-15 00:22:57[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-15 00:22:57[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-15 00:22:57[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-15 00:22:57[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:22:57[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@797f97e3
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@626c569b`
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:22:57[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-15 00:22:57[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d8f2eec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e886caf]
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-15 00:22:57[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-15 00:22:57[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7d8f2eec] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b5a04b0]
TRACE 24-01-15 00:22:58[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b5a04b0] for TypeConfiguration
INFO  24-01-15 00:22:58[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-15 00:22:58[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-15 00:22:58[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-15 00:22:58[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-15 00:22:58[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.411 seconds (process running for 3.633)
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [MenuController:34] - title : test_menu
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-15 00:23:14[http-nio-8080-exec-2] [MenuController:36] - createMemberId : test_member_id
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1939179825<open>)] for JPA transaction
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@659eaeb5]
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [JpaTransactionManager:789] - Initiating transaction commit
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [JpaTransactionManager:556] - Committing JPA transaction on EntityManager [SessionImpl(1939179825<open>)]
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [SQL:135] - 
    insert 
    into
        menu
        (create_member_id, created_at, icon_code_id, parent_id, path, title, update_member_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG 24-01-15 00:23:14[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-01-15 00:24:16[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-15 00:24:16[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2b5a04b0] for TypeConfiguration
DEBUG 24-01-15 00:24:16[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@62e733c4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b5a04b0]
INFO  24-01-15 00:24:16[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-15 00:24:16[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
