INFO  24-01-09 22:46:04[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15346 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 22:46:04[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 22:46:04[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 22:46:04[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 22:46:05[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 22:46:05[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 22:46:05[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@71dd4624
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@71dd4624
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5ed31735
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2026fbff
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4fbb1144
INFO  24-01-09 22:46:05[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 22:46:05[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 22:46:05[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70697478
INFO  24-01-09 22:46:05[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b33c29) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@615ef20)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13390a96) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a8b9458)
DEBUG 24-01-09 22:46:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7497a554) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd23809)
DEBUG 24-01-09 22:46:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 22:46:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 22:46:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 22:46:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 22:46:05[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@b56c222
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5ed31735`
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 22:46:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 22:46:05[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684b26b7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2de7c84a]
INFO  24-01-09 22:46:06[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-09 22:46:06[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@684b26b7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14d6ede3]
DEBUG 24-01-09 22:46:06[Test worker] [SQL:135] - 
    create table board (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(30) not null,
        updated_member_id varchar(30),
        is_announceable TINYINT(1) default true,
        is_commentable TINYINT(1) default true,
        is_recommendable TINYINT(1) default true,
        is_secretable TINYINT(1) default true,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-09 22:46:06[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)
WARN  24-01-09 22:46:06[Test worker] [ExceptionHandlerLoggedImpl:27] - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 126 common frames omitted
TRACE 24-01-09 22:46:06[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14d6ede3] for TypeConfiguration
INFO  24-01-09 22:46:06[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-09 22:46:06[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-09 22:46:07[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.264 seconds (process running for 4.336)
INFO  24-01-09 22:46:07[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-09 22:46:07[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14d6ede3] for TypeConfiguration
DEBUG 24-01-09 22:46:07[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6ee8428f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14d6ede3]
INFO  24-01-09 22:46:07[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 22:46:07[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:06:49[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15566 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:06:49[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:06:50[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:06:50[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:06:50[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:06:50[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:06:50[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2fb082ff
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2fb082ff
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@6ef037e4
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79d63a4f
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2e2b9f53
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1b3bec6c
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53f7a906
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2154652c
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@8b670c0
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4c2ab536
DEBUG 24-01-09 23:06:50[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@22fb9a2c
INFO  24-01-09 23:06:51[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:06:51[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:06:51[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@11adab6d
INFO  24-01-09 23:06:51[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b33c29) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13390a96) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7497a554) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60ab895f)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@295f2d1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65015a49)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44e08a7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78bd02c8)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28dacf31) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47e60b71)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@795faad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17ae13d5)
DEBUG 24-01-09 23:06:51[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69f3e556) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1eb9d69a)
DEBUG 24-01-09 23:06:51[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:06:51[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:06:51[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:06:51[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:06:51[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@72e75786
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6ef037e4`
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:06:51[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:06:51[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@299cab08] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c75e3bc]
ERROR 24-01-09 23:06:51[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
WARN  24-01-09 23:06:51[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
INFO  24-01-09 23:06:51[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:06:51[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:06:51[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-09 23:06:51[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-09 23:06:51[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@720ffab4]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5fafa76d testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-09 23:08:44[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15576 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:08:44[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:08:44[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:08:45[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:08:45[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:08:45[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:08:45[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2026fbff
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2026fbff
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@749baa0c
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1b3bec6c
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@53f7a906
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@8b670c0
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c2ab536
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@22fb9a2c
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2084e65a
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1b8fa2fa
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@21527b8
INFO  24-01-09 23:08:45[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:08:45[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:08:45[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2152fde5
INFO  24-01-09 23:08:45[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7497a554)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@664f49f)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60ab895f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@295f2d1b)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65015a49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44e08a7a)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78bd02c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28dacf31)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47e60b71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@795faad)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17ae13d5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69f3e556)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1eb9d69a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36511772)
DEBUG 24-01-09 23:08:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51869ad6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27a90ce5)
DEBUG 24-01-09 23:08:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:08:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:08:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:08:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:08:45[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@733fa95c
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@749baa0c`
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:08:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:08:45[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2374452a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ffc6ea7]
ERROR 24-01-09 23:08:46[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
WARN  24-01-09 23:08:46[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
INFO  24-01-09 23:08:46[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:08:46[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:08:46[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-09 23:08:46[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-09 23:08:46[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@7c88d04f]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5ebe903a testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-09 23:09:00[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15591 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:09:00[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:09:01[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:09:01[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:09:01[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:09:01[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:09:01[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-09 23:09:01[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-09 23:09:01[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:09:01[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:09:01[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-09 23:09:01[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-09 23:09:01[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-09 23:09:02[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-09 23:09:02[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:09:02[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:09:02[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:09:02[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:09:02[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:09:02[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:09:02[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
ERROR 24-01-09 23:09:02[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
WARN  24-01-09 23:09:02[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
INFO  24-01-09 23:09:02[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:09:02[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:09:02[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-09 23:09:02[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-09 23:09:02[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@560d6d2]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@50c2ef56 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-09 23:16:16[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15652 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:16:16[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:16:17[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:16:17[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:16:17[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:16:17[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:16:17[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@baa227e
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@baa227e
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1b3bec6c
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@53f7a906
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2154652c
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c2ab536
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@22fb9a2c
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2084e65a
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b8fa2fa
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@21527b8
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7cc1f72c
INFO  24-01-09 23:16:17[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:16:17[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:16:17[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d58dc61
INFO  24-01-09 23:16:17[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7497a554) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@664f49f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60ab895f)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@295f2d1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65015a49)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44e08a7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78bd02c8)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28dacf31) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47e60b71)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@795faad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17ae13d5)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69f3e556) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1eb9d69a)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36511772) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51869ad6)
DEBUG 24-01-09 23:16:17[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27a90ce5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77f4038c)
DEBUG 24-01-09 23:16:17[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:16:17[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:16:17[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:16:17[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:16:17[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3b2c8bda
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1b3bec6c`
DEBUG 24-01-09 23:16:17[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:16:18[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:16:18[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ffc6ea7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c5708e7]
INFO  24-01-09 23:16:18[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-09 23:16:18[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ffc6ea7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@40696fc6]
DEBUG 24-01-09 23:16:18[Test worker] [SQL:135] - 
    create table post (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(30) not null,
        updated_member_id varchar(30),
        announcement_ends_at datetime(6),
        announcement_starts_at datetime(6),
        board_id varchar(30) not null,
        content TEXT,
        is_announcement TINYINT(1) default false not null,
        is_secret TINYINT(1) default false not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-09 23:16:18[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)
WARN  24-01-09 23:16:18[Test worker] [ExceptionHandlerLoggedImpl:27] - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 126 common frames omitted
TRACE 24-01-09 23:16:18[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@40696fc6] for TypeConfiguration
INFO  24-01-09 23:16:18[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-09 23:16:18[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-09 23:16:19[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.214 seconds (process running for 3.983)
INFO  24-01-09 23:16:20[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-09 23:16:20[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@40696fc6] for TypeConfiguration
DEBUG 24-01-09 23:16:20[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3cea0d4c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@40696fc6]
INFO  24-01-09 23:16:20[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:16:20[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:19:10[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15697 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:19:10[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:19:11[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:19:11[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:19:11[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:19:11[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:19:11[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@19bf47fc
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@19bf47fc
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@12e5d3e1
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2026fbff
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-09 23:19:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15586843
INFO  24-01-09 23:19:12[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:19:12[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:19:12[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@78f5cbc5
INFO  24-01-09 23:19:12[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-09 23:19:12[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-09 23:19:12[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:19:12[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:19:12[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:19:12[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:19:12[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@15a484a9
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@12e5d3e1`
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:19:12[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:19:12[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2cc34cd5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@684b26b7]
ERROR 24-01-09 23:19:12[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
WARN  24-01-09 23:19:12[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
INFO  24-01-09 23:19:12[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:19:12[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:19:12[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-09 23:19:12[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-09 23:19:12[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@3a0baec0]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7d49a1a0 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.board.entity.BoardEntity.posts' is 'mappedBy' a property named 'post' which does not exist in the target entity 'com.footbolic.api.post.entity.PostEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-09 23:22:28[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15723 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:22:28[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:22:29[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:22:29[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:22:29[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:22:29[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:22:29[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-09 23:22:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-09 23:22:29[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:22:29[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:22:30[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-09 23:22:30[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-09 23:22:30[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-09 23:22:30[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:22:30[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:22:30[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:22:30[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:22:30[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:22:30[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:22:30[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
INFO  24-01-09 23:22:30[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-09 23:22:30[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5f233f9]
DEBUG 24-01-09 23:22:30[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)
WARN  24-01-09 23:22:30[Test worker] [ExceptionHandlerLoggedImpl:27] - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 126 common frames omitted
DEBUG 24-01-09 23:22:30[Test worker] [SQL:135] - 
    alter table post 
       add constraint FKj7tpe5i0ikt9jsyriic3ylhf3 
       foreign key (id) 
       references board (id)
TRACE 24-01-09 23:22:30[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5f233f9] for TypeConfiguration
INFO  24-01-09 23:22:30[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-09 23:22:31[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-09 23:22:31[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.25 seconds (process running for 4.014)
INFO  24-01-09 23:22:32[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-09 23:22:32[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5f233f9] for TypeConfiguration
DEBUG 24-01-09 23:22:32[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@256fc5a6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5f233f9]
INFO  24-01-09 23:22:32[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:22:32[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:27:28[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15778 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:27:28[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:27:28[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:27:28[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:27:29[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:27:29[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:27:29[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@507049f2
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@507049f2
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2026fbff
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@e2b3026
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38bc5ac0
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ef037e4
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@79d63a4f
INFO  24-01-09 23:27:29[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:27:29[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:27:29[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70ee1963
INFO  24-01-09 23:27:29[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72f3acc9)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@319b1c77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@615ef20)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a8b9458)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7497a554) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd23809)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@664f49f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60ab895f)
DEBUG 24-01-09 23:27:29[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@295f2d1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65015a49)
DEBUG 24-01-09 23:27:29[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:27:29[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:27:29[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:27:29[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:27:29[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@41bd6a0f
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2026fbff`
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:27:29[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:27:29[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46de118b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55682482]
INFO  24-01-09 23:27:30[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-09 23:27:30[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46de118b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@170f0fd6]
DEBUG 24-01-09 23:27:30[Test worker] [SQL:135] - 
    create table comment (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(30) not null,
        updated_member_id varchar(30),
        content varchar(400) not null,
        post_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-09 23:27:30[Test worker] [SQL:135] - 
    alter table comment 
       add constraint FKy8t71okd2skkhqb4mm4do99 
       foreign key (id) 
       references post (id)
DEBUG 24-01-09 23:27:30[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)
WARN  24-01-09 23:27:30[Test worker] [ExceptionHandlerLoggedImpl:27] - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 126 common frames omitted
TRACE 24-01-09 23:27:30[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@170f0fd6] for TypeConfiguration
INFO  24-01-09 23:27:30[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-09 23:27:30[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-09 23:27:31[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.268 seconds (process running for 4.049)
INFO  24-01-09 23:27:31[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-09 23:27:31[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@170f0fd6] for TypeConfiguration
DEBUG 24-01-09 23:27:31[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@676ab4a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@170f0fd6]
INFO  24-01-09 23:27:31[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:27:31[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-09 23:36:14[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 15862 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-09 23:36:14[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-09 23:36:14[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-09 23:36:14[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.
INFO  24-01-09 23:36:15[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-09 23:36:15[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-09 23:36:15[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@4fbb1144
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4fbb1144
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@4c2ab536
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@22fb9a2c
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2084e65a
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@21527b8
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7cc1f72c
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7b7068d8
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d8e9d3e
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@360d41d0
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4586a8aa
INFO  24-01-09 23:36:15[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-09 23:36:15[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-09 23:36:15[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a7469ca
INFO  24-01-09 23:36:15[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@295f2d1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65015a49)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44e08a7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78bd02c8)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28dacf31) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47e60b71)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@795faad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17ae13d5)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69f3e556) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1eb9d69a)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36511772) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51869ad6)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27a90ce5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77f4038c)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49a06087) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c15034f)
DEBUG 24-01-09 23:36:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43b4ec0c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@148b6f95)
DEBUG 24-01-09 23:36:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-09 23:36:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-09 23:36:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-09 23:36:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:36:15[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@35a9e665
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4c2ab536`
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:36:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-09 23:36:15[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42238078] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5627b8eb]
INFO  24-01-09 23:36:16[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-09 23:36:16[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42238078] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c9168c3]
DEBUG 24-01-09 23:36:16[Test worker] [SQL:135] - 
    create table reply (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(30) not null,
        updated_member_id varchar(30),
        comment_id varchar(30) not null,
        content varchar(400) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-09 23:36:16[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)
WARN  24-01-09 23:36:16[Test worker] [ExceptionHandlerLoggedImpl:27] - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 126 common frames omitted
DEBUG 24-01-09 23:36:16[Test worker] [SQL:135] - 
    alter table reply 
       add constraint FKb7us8k7c8nqdb0in78vohr2sv 
       foreign key (id) 
       references comment (id)
TRACE 24-01-09 23:36:16[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c9168c3] for TypeConfiguration
INFO  24-01-09 23:36:16[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-09 23:36:16[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-09 23:36:17[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.305 seconds (process running for 4.115)
INFO  24-01-09 23:36:17[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-09 23:36:17[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c9168c3] for TypeConfiguration
DEBUG 24-01-09 23:36:17[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2619f86e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c9168c3]
INFO  24-01-09 23:36:17[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-09 23:36:17[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
