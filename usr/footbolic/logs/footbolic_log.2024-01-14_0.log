INFO  24-01-14 17:15:45[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 21657 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:15:45[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:15:46[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:15:46[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:15:46[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:15:47[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:15:47[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@53e93fb7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a861417
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c00d406
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16ac4d3d
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@20b54cfe
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2bdb5e0f
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2262f0d8
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2262f0d8
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2262f0d8
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@283a8ad6
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@283a8ad6
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@59e082f8
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@59e082f8
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7185e611
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7185e611
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@44d43cc9
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@44d43cc9
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@384472bf
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@384472bf
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@656ec00d
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@26d40c77
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@26d40c77
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5d3f99d7
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@561d88ee
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2c34402
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7e58f697
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@44384b4a
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5cc3e49b
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4239262e
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bec8cb0
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d88fa9c
INFO  24-01-14 17:15:47[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:15:47[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:15:47[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3cad24ae
INFO  24-01-14 17:15:47[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a06602f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46591e98)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b6cc344) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2110684a)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83e635f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d011e)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b56947a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1926f962)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62794582) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c82ad22)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f80d8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d3b0978)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c60c08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cb44a2f)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fe3b058) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a661215)
DEBUG 24-01-14 17:15:47[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f75fd1d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@212e39ee)
DEBUG 24-01-14 17:15:47[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:15:47[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:15:47[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:15:47[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:15:47[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@54f373d4
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5d3f99d7`
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:15:47[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:15:47[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5960f17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d1b3620]
INFO  24-01-14 17:15:48[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:15:48[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5960f17] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7712df76]
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table authorization 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table authorization 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table banner 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table banner 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table board 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table board 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table comment 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table comment 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table common_code 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table common_code 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table menu 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table menu 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table notification 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table notification 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table post 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table post 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table reply 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table reply 
       add column update_member_id varchar(30)
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table role 
       add column create_member_id varchar(30) not null
DEBUG 24-01-14 17:15:48[Test worker] [SQL:135] - 
    alter table role 
       add column update_member_id varchar(30)
TRACE 24-01-14 17:15:48[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7712df76] for TypeConfiguration
INFO  24-01-14 17:15:48[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:15:48[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:15:49[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.831 seconds (process running for 4.736)
INFO  24-01-14 17:15:50[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:15:50[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7712df76] for TypeConfiguration
DEBUG 24-01-14 17:15:50[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@58d99b87] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7712df76]
INFO  24-01-14 17:15:50[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:15:50[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 17:18:53[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 21695 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:18:53[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:18:54[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:18:54[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 23 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:18:54[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:18:54[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:18:54[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@53e93fb7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@53e93fb7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@3a861417
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3a861417
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1c00d406
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@16ac4d3d
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@20b54cfe
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@20b54cfe
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2bdb5e0f
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2bdb5e0f
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2262f0d8
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@3dc82e6a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3dc82e6a
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@49cb5030
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23c7cb18
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@30fbc23
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3e2d44f3
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@23afc725
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5d3f99d7
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@561d88ee
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2c34402
DEBUG 24-01-14 17:18:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5f883d90
INFO  24-01-14 17:18:55[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:18:55[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:18:55[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@338a4c61
INFO  24-01-14 17:18:55[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71668a67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ff26c9)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ecdcfe3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65b73689)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2047adea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5af40e45)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a06602f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46591e98)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b6cc344) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2110684a)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@83e635f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61d011e)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b56947a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1926f962)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@62794582) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c82ad22)
DEBUG 24-01-14 17:18:55[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f80d8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d3b0978)
DEBUG 24-01-14 17:18:55[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:18:55[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:18:55[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:18:55[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:18:55[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@45b27ad3
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@49cb5030`
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:18:55[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:18:55[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ef913a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@520c3dcb]
INFO  24-01-14 17:18:56[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:18:56[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ef913a4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5f7c1de0]
TRACE 24-01-14 17:18:56[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5f7c1de0] for TypeConfiguration
INFO  24-01-14 17:18:56[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:18:56[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:18:57[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.382 seconds (process running for 4.135)
INFO  24-01-14 17:18:57[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:18:57[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5f7c1de0] for TypeConfiguration
DEBUG 24-01-14 17:18:57[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@48fab79a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5f7c1de0]
INFO  24-01-14 17:18:57[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:18:57[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 17:26:53[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 21752 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:26:53[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:26:53[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:26:54[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:26:54[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:26:54[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:26:54[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53e93fb7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a861417
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c00d406
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16ac4d3d
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20b54cfe
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2bdb5e0f
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2bdb5e0f
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5c9e8a67
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2262f0d8
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@283a8ad6
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@59e082f8
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@59e082f8
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7185e611
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7185e611
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7185e611
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@44d43cc9
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@44d43cc9
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@384472bf
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@384472bf
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@656ec00d
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@656ec00d
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3b8507df
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3b8507df
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5ed25612
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5ed25612
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@451816fd
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@12365bd8
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@12365bd8
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5f883d90
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7e58f697
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@44384b4a
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4239262e
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7bec8cb0
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7d88fa9c
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3eac2e8a
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@352f6727
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2ab9e43e
INFO  24-01-14 17:26:54[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:26:54[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:26:54[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1b25d695
INFO  24-01-14 17:26:54[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2110684a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83e635f)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d011e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b56947a)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1926f962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@62794582)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c82ad22) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f80d8c)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d3b0978) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c60c08)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cb44a2f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5fe3b058)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a661215) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f75fd1d)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@212e39ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@638d2ce3)
DEBUG 24-01-14 17:26:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79617c3d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49cceb19)
DEBUG 24-01-14 17:26:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:26:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:26:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:26:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:26:54[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@d6d683e
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5f883d90`
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:26:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:26:54[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2295566b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@174e1b99]
INFO  24-01-14 17:26:55[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:26:55[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2295566b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7712df76]
TRACE 24-01-14 17:26:55[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7712df76] for TypeConfiguration
INFO  24-01-14 17:26:55[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:26:55[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:26:56[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.227 seconds (process running for 4.039)
INFO  24-01-14 17:26:56[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:26:56[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7712df76] for TypeConfiguration
DEBUG 24-01-14 17:26:56[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b56dcb1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7712df76]
INFO  24-01-14 17:26:56[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:26:56[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 17:31:10[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 21801 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:31:10[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:31:10[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:31:10[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:31:10[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:31:11[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:31:11[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@590013c7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64f32e9e
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7b211077
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3b770d07
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@62b0bf85
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1fcaea93
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6c9bf3b5
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6f07d414
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@8ac12e6
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40faff12
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@734fbae3
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@223967ea
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4a6a6a69
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5d7f1e59
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53e93fb7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a861417
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2326180c
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@68e47e7
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1c00d406
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@16ac4d3d
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@559d19c
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@719c1faf
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ba6557e
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f172892
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5409dfdd
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@45f9d394
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1c2d63f0
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3a588b5f
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@7b7068d8
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7b7068d8
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@85ab964
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6481dce5
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12365bd8
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@49cb5030
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@23c7cb18
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@30fbc23
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d74cbbd
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e2d44f3
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@23afc725
INFO  24-01-14 17:31:11[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:31:11[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:31:11[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@39f93225
INFO  24-01-14 17:31:11[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@148b6f95) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ee581db)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6efe33) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e5ebdfe)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71668a67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ff26c9)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ecdcfe3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65b73689)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2047adea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5af40e45)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a06602f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46591e98)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b6cc344) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2110684a)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83e635f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61d011e)
DEBUG 24-01-14 17:31:11[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b56947a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1926f962)
DEBUG 24-01-14 17:31:11[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:31:11[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:31:11[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:31:11[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:31:11[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@8ee03f5
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@85ab964`
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:31:11[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:31:11[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71285693] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3199a202]
INFO  24-01-14 17:31:12[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:31:12[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71285693] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@20fdaf3e]
TRACE 24-01-14 17:31:12[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@20fdaf3e] for TypeConfiguration
INFO  24-01-14 17:31:12[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:31:12[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:31:12[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.208 seconds (process running for 4.02)
INFO  24-01-14 17:31:13[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:31:13[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@20fdaf3e] for TypeConfiguration
DEBUG 24-01-14 17:31:13[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75298f4d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@20fdaf3e]
INFO  24-01-14 17:31:13[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:31:13[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 17:33:27[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 21833 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:33:27[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:33:27[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:33:27[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:33:28[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 17:33:28[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 17:33:28[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 17:33:28[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 17:33:28[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 17:33:28[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 945 ms
INFO  24-01-14 17:33:28[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:33:28[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:33:28[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@33324c05
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@40bd0f8
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@40bd0f8
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@7eb27768
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7eb27768
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6169be09
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@55a0f011
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55a0f011
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2017f6e6
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@115c946b
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79ca7bea
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4bc9ca97
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3e43f049
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@147cc940
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@755a7218
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70c29356
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5122e4bf
INFO  24-01-14 17:33:28[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:33:28[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:33:28[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6aa6c17
INFO  24-01-14 17:33:28[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee12d58) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e72fb04)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1533338c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4315fe1b)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34e990cc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d5ae78e)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f91efa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df0d9f8)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35e75f7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f7bb8df)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@269c7104) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6de84336)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@627bcd7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70543cae)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@350567f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a5b7394)
DEBUG 24-01-14 17:33:28[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26f75d9c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7717b4a0)
DEBUG 24-01-14 17:33:28[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:33:28[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:33:28[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:33:28[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:33:28[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3f9f8d23
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2017f6e6`
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:33:28[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:33:28[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@704c3bdf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37986daf]
INFO  24-01-14 17:33:29[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:33:29[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@704c3bdf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7983a5d5]
TRACE 24-01-14 17:33:29[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7983a5d5] for TypeConfiguration
INFO  24-01-14 17:33:29[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:33:29[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:33:30[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 17:33:30[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 17:33:30[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.27 seconds (process running for 3.512)
INFO  24-01-14 17:34:07[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:34:07[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7983a5d5] for TypeConfiguration
DEBUG 24-01-14 17:34:07[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4f1a3e1f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7983a5d5]
INFO  24-01-14 17:34:07[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:34:07[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 17:34:11[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 21857 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:34:11[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:34:11[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:34:11[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 18 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:34:12[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 17:34:12[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 17:34:12[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 17:34:12[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 17:34:12[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 17:34:12[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 918 ms
INFO  24-01-14 17:34:12[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:34:12[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:34:12[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@33324c05
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@27e199ce
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@27e199ce
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@61da0413
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5627cb29
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d4c1ba9
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@115c946b
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@79ca7bea
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@54f6b629
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bc9ca97
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e43f049
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@147cc940
INFO  24-01-14 17:34:12[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:34:12[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:34:12[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@698f4aa
INFO  24-01-14 17:34:12[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63326a3a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e04abc5)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1008df1e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee12d58)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e72fb04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1533338c)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4315fe1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34e990cc)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d5ae78e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f91efa)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df0d9f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35e75f7a)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f7bb8df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@269c7104)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6de84336) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@627bcd7e)
DEBUG 24-01-14 17:34:12[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70543cae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@350567f1)
DEBUG 24-01-14 17:34:12[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:34:12[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:34:12[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:34:12[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:34:12[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7ab1ad9
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@61da0413`
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:34:12[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:34:12[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11cadb32] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d3ad37a]
INFO  24-01-14 17:34:13[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:34:13[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11cadb32] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7cb38a6a]
TRACE 24-01-14 17:34:13[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7cb38a6a] for TypeConfiguration
INFO  24-01-14 17:34:13[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:34:13[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:34:14[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 17:34:14[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 17:34:14[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.385 seconds (process running for 3.623)
INFO  24-01-14 17:34:58[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:34:58[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7cb38a6a] for TypeConfiguration
DEBUG 24-01-14 17:34:58[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@320e8117] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7cb38a6a]
INFO  24-01-14 17:34:58[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:34:58[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 17:35:01[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 21884 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 17:35:01[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 17:35:02[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 17:35:02[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 17:35:02[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 17:35:02[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 17:35:02[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 17:35:02[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 17:35:02[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 17:35:02[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 918 ms
INFO  24-01-14 17:35:02[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 17:35:02[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 17:35:02[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@571a663c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@571a663c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@571a663c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a788fe0
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a788fe0
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@430df350
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@430df350
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1373e3ee
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1373e3ee
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@175c5c3a
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@175c5c3a
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@175c5c3a
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@69a5c6be
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@69a5c6be
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@69a5c6be
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@451e2fa9
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@451e2fa9
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@497ed877
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3cb6e0ee
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3cb6e0ee
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7b6141f0
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4fb64a52
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@70b48eb3
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@70b48eb3
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70b48eb3
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7b8ea1db
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@7b8ea1db
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7b8ea1db
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@723742b2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@723742b2
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@454bcbbf
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2c9fdb64
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@27e199ce
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7364f68
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@55a0f011
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7ea42c82
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@39133244
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@ceb7701
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e193ef5
INFO  24-01-14 17:35:03[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 17:35:03[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 17:35:03[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e948f1c
INFO  24-01-14 17:35:03[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ff4b223) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61554b6b)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@761f234c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@687b0ddc)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42b4df5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@9f1ca74)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67b8d45) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365e65bb)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52f43225) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55d1f065)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f9a5e3f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4aac81ca)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@393ae7a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63326a3a)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e04abc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1008df1e)
DEBUG 24-01-14 17:35:03[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee12d58) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e72fb04)
DEBUG 24-01-14 17:35:03[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 17:35:03[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 17:35:03[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 17:35:03[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:35:03[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@152e7703
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@454bcbbf`
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:35:03[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 17:35:03[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df2a206] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@61993d18]
INFO  24-01-14 17:35:04[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 17:35:04[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df2a206] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4fea9f19]
TRACE 24-01-14 17:35:04[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4fea9f19] for TypeConfiguration
INFO  24-01-14 17:35:04[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 17:35:04[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 17:35:04[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 17:35:04[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 17:35:04[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.24 seconds (process running for 3.457)
INFO  24-01-14 17:35:17[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 17:35:17[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4fea9f19] for TypeConfiguration
DEBUG 24-01-14 17:35:17[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@585a5744] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4fea9f19]
INFO  24-01-14 17:35:17[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 17:35:17[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 18:12:49[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 22374 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 18:12:49[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 18:12:50[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 18:12:50[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 19 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 18:12:50[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 18:12:50[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 18:12:50[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 18:12:50[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 18:12:50[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 18:12:50[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 913 ms
INFO  24-01-14 18:12:50[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 18:12:50[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 18:12:50[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@33324c05
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@40bd0f8
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@40bd0f8
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@7eb27768
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7eb27768
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6169be09
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@55a0f011
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55a0f011
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2017f6e6
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@115c946b
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79ca7bea
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4bc9ca97
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3e43f049
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@147cc940
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@755a7218
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70c29356
DEBUG 24-01-14 18:12:50[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5122e4bf
INFO  24-01-14 18:12:50[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 18:12:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 18:12:51[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6aa6c17
INFO  24-01-14 18:12:51[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee12d58) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e72fb04)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1533338c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4315fe1b)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34e990cc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d5ae78e)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f91efa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df0d9f8)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35e75f7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f7bb8df)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@269c7104) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6de84336)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@627bcd7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70543cae)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@350567f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a5b7394)
DEBUG 24-01-14 18:12:51[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26f75d9c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7717b4a0)
DEBUG 24-01-14 18:12:51[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 18:12:51[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 18:12:51[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 18:12:51[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 18:12:51[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3f9f8d23
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2017f6e6`
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:12:51[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:12:51[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@704c3bdf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37986daf]
ERROR 24-01-14 18:12:51[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Collection 'com.footbolic.api.member.entity.MemberEntity.commentRecommendations' is 'mappedBy' a property named 'member' which does not exist in the target entity 'com.footbolic.api.recommendation.entity.CommentRecommendationEntity'
WARN  24-01-14 18:12:51[main] [AnnotationConfigServletWebServerApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.member.entity.MemberEntity.commentRecommendations' is 'mappedBy' a property named 'member' which does not exist in the target entity 'com.footbolic.api.recommendation.entity.CommentRecommendationEntity'
INFO  24-01-14 18:12:51[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 18:12:51[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 18:12:51[main] [StandardService:173] - Stopping service [Tomcat]
INFO  24-01-14 18:12:51[main] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-14 18:12:51[main] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.member.entity.MemberEntity.commentRecommendations' is 'mappedBy' a property named 'member' which does not exist in the target entity 'com.footbolic.api.recommendation.entity.CommentRecommendationEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.footbolic.api.FootbolicApplication.main(FootbolicApplication.java:10)
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.member.entity.MemberEntity.commentRecommendations' is 'mappedBy' a property named 'member' which does not exist in the target entity 'com.footbolic.api.recommendation.entity.CommentRecommendationEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 16 common frames omitted
INFO  24-01-14 18:13:33[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 22393 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 18:13:33[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 18:13:34[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 18:13:34[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 18:13:34[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 18:13:34[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 18:13:34[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 18:13:34[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 18:13:34[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 18:13:34[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 922 ms
INFO  24-01-14 18:13:34[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 18:13:34[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 18:13:34[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@33324c05
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@27e199ce
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@27e199ce
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@61da0413
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5627cb29
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d4c1ba9
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@115c946b
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@79ca7bea
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@54f6b629
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bc9ca97
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e43f049
DEBUG 24-01-14 18:13:34[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@147cc940
INFO  24-01-14 18:13:35[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 18:13:35[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 18:13:35[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@698f4aa
INFO  24-01-14 18:13:35[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63326a3a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e04abc5)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1008df1e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee12d58)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e72fb04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1533338c)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4315fe1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34e990cc)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d5ae78e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f91efa)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df0d9f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35e75f7a)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f7bb8df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@269c7104)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6de84336) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@627bcd7e)
DEBUG 24-01-14 18:13:35[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70543cae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@350567f1)
DEBUG 24-01-14 18:13:35[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 18:13:35[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 18:13:35[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 18:13:35[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 18:13:35[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7ab1ad9
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@61da0413`
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:13:35[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:13:35[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11cadb32] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d3ad37a]
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:13:35[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 18:13:35[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11cadb32] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@30a4a111]
TRACE 24-01-14 18:13:36[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@30a4a111] for TypeConfiguration
INFO  24-01-14 18:13:36[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 18:13:36[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 18:13:36[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 18:13:36[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 18:13:36[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.291 seconds (process running for 3.51)
INFO  24-01-14 18:13:59[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 18:13:59[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@30a4a111] for TypeConfiguration
DEBUG 24-01-14 18:13:59[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7ef6e186] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@30a4a111]
INFO  24-01-14 18:13:59[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 18:13:59[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 18:14:03[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 22406 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 18:14:03[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 18:14:04[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 18:14:04[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 18:14:04[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 18:14:04[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 18:14:04[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 18:14:04[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 18:14:04[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 18:14:04[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 918 ms
INFO  24-01-14 18:14:04[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 18:14:04[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 18:14:04[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7781263c
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5fdd97c1
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3b5a19ed
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:14:04[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@15d236fd
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6b9c42bd
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@584ca390
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@33324c05
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37d3e140
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3e53c4ad
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@33eb0d4
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@224d86d2
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@a3cba3a
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2aea717c
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ca4dce5
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1291aab5
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d133fb7
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@40bd0f8
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@40bd0f8
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@7eb27768
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7eb27768
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6169be09
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@55a0f011
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55a0f011
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2017f6e6
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@115c946b
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79ca7bea
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4bc9ca97
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3e43f049
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@147cc940
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@755a7218
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@70c29356
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5122e4bf
INFO  24-01-14 18:14:05[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 18:14:05[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 18:14:05[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6aa6c17
INFO  24-01-14 18:14:05[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee12d58) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e72fb04)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1533338c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4315fe1b)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34e990cc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d5ae78e)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f91efa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4df0d9f8)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35e75f7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f7bb8df)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@269c7104) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6de84336)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@627bcd7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70543cae)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@350567f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a5b7394)
DEBUG 24-01-14 18:14:05[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26f75d9c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7717b4a0)
DEBUG 24-01-14 18:14:05[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 18:14:05[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 18:14:05[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 18:14:05[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 18:14:05[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3f9f8d23
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2017f6e6`
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:14:05[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 18:14:05[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@704c3bdf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37986daf]
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 18:14:05[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 18:14:05[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@704c3bdf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@238a7e3d]
TRACE 24-01-14 18:14:06[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@238a7e3d] for TypeConfiguration
INFO  24-01-14 18:14:06[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 18:14:06[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 18:14:06[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 18:14:06[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 18:14:06[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.214 seconds (process running for 3.475)
INFO  24-01-14 18:14:51[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 18:14:51[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 18:14:51[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 4 ms
INFO  24-01-14 18:14:52[http-nio-8080-exec-9] [AbstractOpenApiResource:371] - Init duration for springdoc-openapi is: 211 ms
WARN  24-01-14 19:30:25[HikariPool-1 housekeeper] [HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=38m19s558ms).
WARN  24-01-14 20:52:39[HikariPool-1 housekeeper] [HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h22m14s282ms).
WARN  24-01-14 21:21:16[HikariPool-1 housekeeper] [HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=28m36s432ms).
WARN  24-01-14 22:03:29[HikariPool-1 housekeeper] [HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=42m13s549ms).
INFO  24-01-14 22:07:24[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 22:07:24[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@238a7e3d] for TypeConfiguration
DEBUG 24-01-14 22:07:24[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6db7c57d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@238a7e3d]
INFO  24-01-14 22:07:24[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 22:07:24[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 22:07:28[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 22806 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 22:07:28[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 22:07:28[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 22:07:28[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 26 ms. Found 0 JPA repository interfaces.
INFO  24-01-14 22:07:29[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 22:07:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 22:07:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 22:07:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 22:07:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 22:07:29[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1306 ms
INFO  24-01-14 22:07:29[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 22:07:29[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 22:07:29[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ad6443
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ad6443
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6ad6443
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@78b03788
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@78b03788
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3f5dfe69
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3f5dfe69
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@571a663c
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@571a663c
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3a788fe0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3a788fe0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3a788fe0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@430df350
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@430df350
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@430df350
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1373e3ee
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1373e3ee
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@175c5c3a
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@69a5c6be
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@69a5c6be
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@451e2fa9
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@497ed877
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3cb6e0ee
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3cb6e0ee
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3cb6e0ee
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7b6141f0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@7b6141f0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7b6141f0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4fb64a52
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4fb64a52
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4fb64a52
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@70b48eb3
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@70b48eb3
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70b48eb3
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7b8ea1db
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7b8ea1db
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7b8ea1db
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@a91119b
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@77083e41
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@231df705
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2d130ac4
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2f0ccb34
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@194012a2
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@55296b50
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@60591e1b
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@29c53c4f
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3009eed7
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2ee4706d
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6650a6c
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@64279ab
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@794240e2
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@74a820bf
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5a30722c
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4f2ac7e0
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2484dbb7
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@111cba40
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@48e41b5d
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@51e8d066
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5333f08f
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@27898e13
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4f5f474c
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@58a3d521
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14d8e132
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f4a1cac
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a1a412e
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c568f91
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fd43e58
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70d4f672
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@68dfda77
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@50cdfafa
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e952845
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@79252c83
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6fbf5db2
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@509a6095
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@57cabdc3
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@75bd28d
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@129c4d19
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@11810917
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@13278a41
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4a31ed12
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ab595c8
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2365ea38
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@cbf1997
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@49232c6f
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5faeeb56
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5396eeb1
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@279126f5
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@7ceb6c45
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7ceb6c45
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@71531dd7
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@20256a0b
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@624b3544
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c9fdb64
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@27e199ce
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1c3b6963
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7364f68
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@55a0f011
DEBUG 24-01-14 22:07:29[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7ea42c82
INFO  24-01-14 22:07:29[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 22:07:29[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 22:07:30[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@20dd5870
INFO  24-01-14 22:07:30[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53b7bf01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@139089a4)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6e9289) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ff4b223)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61554b6b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@761f234c)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@687b0ddc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42b4df5a)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9f1ca74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67b8d45)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365e65bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52f43225)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55d1f065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f9a5e3f)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4aac81ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@393ae7a0)
DEBUG 24-01-14 22:07:30[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63326a3a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e04abc5)
DEBUG 24-01-14 22:07:30[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 22:07:30[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 22:07:30[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 22:07:30[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 22:07:30[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1073c664
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71531dd7`
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:07:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:07:30[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46894dc5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@596afb2f]
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:07:31[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 22:07:31[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46894dc5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c2ae7d7]
TRACE 24-01-14 22:07:31[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c2ae7d7] for TypeConfiguration
INFO  24-01-14 22:07:31[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 22:07:31[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 22:07:32[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 22:07:32[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 22:07:32[main] [FootbolicApplication:56] - Started FootbolicApplication in 4.569 seconds (process running for 4.945)
INFO  24-01-14 22:07:35[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 22:07:35[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 22:07:35[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 22:07:36[http-nio-8080-exec-4] [AbstractOpenApiResource:371] - Init duration for springdoc-openapi is: 219 ms
INFO  24-01-14 22:52:47[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 22:52:47[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c2ae7d7] for TypeConfiguration
DEBUG 24-01-14 22:52:47[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3bc56ea4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c2ae7d7]
INFO  24-01-14 22:52:47[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 22:52:47[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 22:52:51[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23312 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 22:52:51[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 22:52:51[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 22:52:51[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interface.
INFO  24-01-14 22:52:52[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 22:52:52[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 22:52:52[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 22:52:52[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 22:52:52[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 22:52:52[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1108 ms
INFO  24-01-14 22:52:52[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 22:52:52[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 22:52:52[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3d1c933
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@d36c1c3
INFO  24-01-14 22:52:52[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 22:52:52[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 22:52:52[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bc0b8c8
INFO  24-01-14 22:52:52[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8d20e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e49437)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7645b7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c50cd7d)
DEBUG 24-01-14 22:52:52[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea84e01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a4930cf)
DEBUG 24-01-14 22:52:52[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 22:52:52[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 22:52:52[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 22:52:52[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 22:52:52[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@63c84d31
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3d1c933`
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:52:52[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:52:52[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a54638b]
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:52:53[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 22:52:53[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
TRACE 24-01-14 22:52:53[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
INFO  24-01-14 22:52:53[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 22:52:53[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 22:52:54[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 22:52:54[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 22:52:54[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.569 seconds (process running for 3.805)
INFO  24-01-14 22:53:05[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 22:53:05[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 22:53:05[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 22:53:06[http-nio-8080-exec-4] [AbstractOpenApiResource:371] - Init duration for springdoc-openapi is: 749 ms
WARN  24-01-14 22:57:14[http-nio-8080-exec-9] [DefaultHandlerExceptionResolver:227] - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'text/plain;charset=UTF-8' is not supported]
INFO  24-01-14 22:58:54[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 22:58:54[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
DEBUG 24-01-14 22:58:54[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2042b72d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
INFO  24-01-14 22:58:54[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 22:58:54[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 22:58:58[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23467 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 22:58:58[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 22:58:58[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 22:58:58[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 56 ms. Found 1 JPA repository interface.
INFO  24-01-14 22:58:59[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 22:58:59[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 22:58:59[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 22:58:59[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 22:58:59[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 22:58:59[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1058 ms
INFO  24-01-14 22:58:59[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 22:58:59[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 22:58:59[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@36510e73
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@36510e73
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@79be91eb
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@684ce74c
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@d36c1c3
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@96abc76
INFO  24-01-14 22:58:59[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 22:58:59[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 22:58:59[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15f861ee
INFO  24-01-14 22:58:59[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c08c787)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b8d20e6)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e49437) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7645b7d)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c50cd7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea84e01)
DEBUG 24-01-14 22:58:59[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a4930cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3fd33f48)
DEBUG 24-01-14 22:58:59[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 22:58:59[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 22:58:59[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 22:58:59[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 22:58:59[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@102af1bb
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@79be91eb`
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:58:59[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 22:58:59[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a54638b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d8f2eec]
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 22:59:00[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 22:59:00[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a54638b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@118879d2]
TRACE 24-01-14 22:59:00[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@118879d2] for TypeConfiguration
INFO  24-01-14 22:59:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 22:59:01[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 22:59:01[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 22:59:01[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 22:59:01[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.795 seconds (process running for 4.08)
INFO  24-01-14 22:59:22[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 22:59:22[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 22:59:22[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
WARN  24-01-14 22:59:22[http-nio-8080-exec-1] [DefaultHandlerExceptionResolver:227] - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'text/plain;charset=UTF-8' is not supported]
WARN  24-01-14 23:00:11[http-nio-8080-exec-3] [DefaultHandlerExceptionResolver:227] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('/' (code 47)): maybe a (non-standard) comment? (not recognized as one since Feature 'ALLOW_COMMENTS' not enabled for parser)]
WARN  24-01-14 23:01:32[http-nio-8080-exec-5] [DefaultHandlerExceptionResolver:227] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('t' (code 116)): was expecting a colon to separate field name and value]
INFO  24-01-14 23:02:12[http-nio-8080-exec-7] [MenuController:33] - here1
INFO  24-01-14 23:02:12[http-nio-8080-exec-7] [MenuController:34] - title : test menu
INFO  24-01-14 23:02:12[http-nio-8080-exec-7] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:02:12[http-nio-8080-exec-7] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1882861659<open>)] for JPA transaction
DEBUG 24-01-14 23:02:12[http-nio-8080-exec-7] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:02:12[http-nio-8080-exec-7] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@492c34d1]
DEBUG 24-01-14 23:02:12[http-nio-8080-exec-7] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:02:12[http-nio-8080-exec-7] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1882861659<open>)]
DEBUG 24-01-14 23:02:12[http-nio-8080-exec-7] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:02:12[http-nio-8080-exec-7] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:05:57[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:05:57[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@118879d2] for TypeConfiguration
DEBUG 24-01-14 23:05:57[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a60101f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@118879d2]
INFO  24-01-14 23:05:57[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:05:57[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:06:07[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23539 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:06:07[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:06:07[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:06:07[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 64 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:06:08[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:06:08[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:06:08[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:06:08[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:06:08[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:06:08[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1361 ms
INFO  24-01-14 23:06:08[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:06:08[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:06:08[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6dd79214
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6dd79214
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6dd79214
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@cf01c2e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@cf01c2e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@625487a6
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@682e445e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79e10fb4
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@36510e73
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2c47a053
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5d2a86c0
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5ba1b62e
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@65bd19bf
DEBUG 24-01-14 23:06:08[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@74697863
INFO  24-01-14 23:06:09[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:06:09[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:06:09[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70d5d96b
INFO  24-01-14 23:06:09[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e40fdbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@246de37e)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19647566) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b79ff1c)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@527d48db) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@194037f9)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2335aef2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17003497)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f038d3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@376498da)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39a8e2fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f9addd4)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c43df76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ff2266c)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@83ebdc5)
DEBUG 24-01-14 23:06:09[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14dbfdb1)
DEBUG 24-01-14 23:06:09[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:06:09[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:06:09[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:06:09[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:06:09[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@4ca0b9b1
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@625487a6`
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:06:09[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:06:09[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1530d0f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7573c7b5]
INFO  24-01-14 23:06:09[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:06:10[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:06:10[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1530d0f2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5542418c]
TRACE 24-01-14 23:06:10[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5542418c] for TypeConfiguration
INFO  24-01-14 23:06:10[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:06:10[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:06:11[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:06:11[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:06:11[main] [FootbolicApplication:56] - Started FootbolicApplication in 4.545 seconds (process running for 4.837)
INFO  24-01-14 23:06:18[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:06:18[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:06:18[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 3 ms
INFO  24-01-14 23:06:33[http-nio-8080-exec-1] [MenuController:33] - here1
INFO  24-01-14 23:06:33[http-nio-8080-exec-1] [MenuController:34] - title : test menu
INFO  24-01-14 23:06:33[http-nio-8080-exec-1] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:06:33[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1065710608<open>)] for JPA transaction
DEBUG 24-01-14 23:06:33[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:06:33[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@33f9d9d6]
DEBUG 24-01-14 23:06:33[http-nio-8080-exec-1] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:06:33[http-nio-8080-exec-1] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1065710608<open>)]
DEBUG 24-01-14 23:06:33[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:06:33[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:07:06[http-nio-8080-exec-4] [MenuController:33] - here1
INFO  24-01-14 23:07:08[http-nio-8080-exec-4] [MenuController:34] - title : test menu
WARN  24-01-14 23:07:36[HikariPool-1 housekeeper] [HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=57s48ms).
INFO  24-01-14 23:07:36[http-nio-8080-exec-4] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:07:40[http-nio-8080-exec-4] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(119926129<open>)] for JPA transaction
DEBUG 24-01-14 23:07:40[http-nio-8080-exec-4] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:07:40[http-nio-8080-exec-4] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9e213e5]
DEBUG 24-01-14 23:07:40[http-nio-8080-exec-4] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:07:40[http-nio-8080-exec-4] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(119926129<open>)]
DEBUG 24-01-14 23:07:40[http-nio-8080-exec-4] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:08:40[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:08:44[http-nio-8080-exec-5] [MenuController:33] - here1
INFO  24-01-14 23:08:44[http-nio-8080-exec-5] [MenuController:34] - title : test menu
INFO  24-01-14 23:08:44[http-nio-8080-exec-5] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:08:44[http-nio-8080-exec-5] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1297404189<open>)] for JPA transaction
DEBUG 24-01-14 23:08:44[http-nio-8080-exec-5] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:08:44[http-nio-8080-exec-5] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@439326c7]
DEBUG 24-01-14 23:08:44[http-nio-8080-exec-5] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:08:44[http-nio-8080-exec-5] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1297404189<open>)]
DEBUG 24-01-14 23:08:44[http-nio-8080-exec-5] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:08:44[http-nio-8080-exec-5] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:08:50[http-nio-8080-exec-8] [MenuController:33] - here1
INFO  24-01-14 23:08:50[http-nio-8080-exec-8] [MenuController:34] - title : test menu
INFO  24-01-14 23:08:50[http-nio-8080-exec-8] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:08:56[http-nio-8080-exec-8] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1517508499<open>)] for JPA transaction
DEBUG 24-01-14 23:08:56[http-nio-8080-exec-8] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:08:56[http-nio-8080-exec-8] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e4cc805]
DEBUG 24-01-14 23:08:56[http-nio-8080-exec-8] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:08:56[http-nio-8080-exec-8] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1517508499<open>)]
DEBUG 24-01-14 23:08:56[http-nio-8080-exec-8] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:09:17[http-nio-8080-exec-8] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:09:38[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23562 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:09:38[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:09:39[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:09:39[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 56 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:09:39[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:09:39[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:09:39[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:09:39[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:09:39[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:09:39[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1110 ms
INFO  24-01-14 23:09:39[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:09:39[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:09:40[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3d1c933
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@d36c1c3
INFO  24-01-14 23:09:40[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:09:40[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:09:40[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bc0b8c8
INFO  24-01-14 23:09:40[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8d20e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e49437)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7645b7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c50cd7d)
DEBUG 24-01-14 23:09:40[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea84e01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a4930cf)
DEBUG 24-01-14 23:09:40[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:09:40[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:09:40[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:09:40[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:09:40[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@63c84d31
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3d1c933`
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:09:40[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:09:40[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a54638b]
INFO  24-01-14 23:09:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:40[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:09:41[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:09:41[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
TRACE 24-01-14 23:09:41[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
INFO  24-01-14 23:09:41[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:09:41[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:09:42[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:09:42[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:09:42[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.814 seconds (process running for 4.11)
INFO  24-01-14 23:11:00[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:11:00[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:11:00[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 23:11:00[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-14 23:11:00[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-14 23:11:00[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1814604074<open>)] for JPA transaction
DEBUG 24-01-14 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@74a27e35]
DEBUG 24-01-14 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1814604074<open>)]
DEBUG 24-01-14 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:11:00[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:12:25[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:12:25[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
DEBUG 24-01-14 23:12:25[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42614e9c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
INFO  24-01-14 23:12:25[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:12:25[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:12:32[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 23633 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:12:32[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:12:33[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:12:33[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 55 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:12:33[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:12:33[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:12:34[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40016ce1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40016ce1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40016ce1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@203765b2
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@203765b2
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7e050be1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7e050be1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b47b7f5
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b47b7f5
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@506aa618
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@506aa618
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@506aa618
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4b6b5352
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4b6b5352
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4b6b5352
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d6713dd
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d6713dd
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@3b39e79b
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3ee6dc82
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3ee6dc82
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2f86f9cf
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@adafe19
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7e2bd5e6
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7e2bd5e6
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7e2bd5e6
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@76a1146d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@76a1146d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@76a1146d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6ef1c3f7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6ef1c3f7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6ef1c3f7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@3386c206
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@3386c206
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3386c206
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@1322b575
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@1322b575
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1322b575
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6dded900
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6dded900
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@d504137
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@d504137
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@8432469
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@8432469
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@8432469
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@e4ca109
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@15c16f19
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@15c16f19
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1a17dd6f
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@be6d228
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@be6d228
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@be6d228
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@60c96eb4
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@7eee6c13
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5ab63a04
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@677cc4e8
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@677cc4e8
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c6bba7d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c6bba7d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@41e8d917
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2ae5bd34
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2b3f7704
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3a16984c
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3db1ce78
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a3ad8e7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6a6d1ff3
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6a6d1ff3
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@64b73e0a
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@64b73e0a
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@57c6feea
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@57c6feea
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3b57f915
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3b57f915
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@39c7fb0b
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@39c7fb0b
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@645dc557
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48c5698
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@17884d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@17884d
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@68e24e7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c732e1c
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6aad919c
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56c42964
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56c42964
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@211a9647
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@340c5fb6
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@322b09da
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@322b09da
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@45d389f2
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@45d389f2
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@308e87a1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@308e87a1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@308e87a1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@66298fe9
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@66298fe9
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@66298fe9
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c262f2f
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5563bb40
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@11148dc2
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@11148dc2
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be80ece
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be80ece
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be80ece
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@60a01cb
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4efb13f1
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7bb4ed71
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7bb4ed71
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5112b7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5112b7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5112b7
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@56835f2f
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@56835f2f
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@40f1aa95
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@40f1aa95
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1c72189f
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1c72189f
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@14be750c
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@14be750c
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@58882a93
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58882a93
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@15e08615
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@1a536164
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1a536164
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7e0986c9
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1377b1a0
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@48cf8414
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15d65fcf
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3b021664
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@f59da34
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@752973de
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@52a67293
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@793cef95
INFO  24-01-14 23:12:34[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:12:34[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:12:34[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@11d1735e
INFO  24-01-14 23:12:34[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3dfc59c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cff5aa3)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b6136eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cce10bc)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73234691) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25df2014)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270b8c2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b9c2387)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12e2f5ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e61a863)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35f01759) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fea9a7b)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa07d80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69c1ea07)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cbe72b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27fc0217)
DEBUG 24-01-14 23:12:34[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e993715) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@686e7513)
DEBUG 24-01-14 23:12:34[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:12:34[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:12:34[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:12:34[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:12:34[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@539ee811
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7e0986c9`
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:12:34[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:12:34[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@199806aa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@300aa927]
INFO  24-01-14 23:12:34[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:34[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:34[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:12:35[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:12:35[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@199806aa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5ed463b7]
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table authorization (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        menu_id varchar(30) not null,
        role_id varchar(30) not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table banner (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        ends_at DATETIME,
        image_path varchar(100) not null,
        is_linked TINYINT(1) default false not null,
        is_mobile TINYINT(1) default false not null,
        is_time_limited TINYINT(1) default false not null,
        link_address varchar(100),
        starts_at DATETIME,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table board (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        is_announceable TINYINT(1) default true not null,
        is_commentable TINYINT(1) default true not null,
        is_recommendable TINYINT(1) default true not null,
        is_secretable TINYINT(1) default true not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table comment (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        content varchar(400) not null,
        post_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table comment_recommendation (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        comment_id varchar(30) not null,
        member_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table common_code (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        code varchar(20) not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table member (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        full_name varchar(15) not null,
        nickname varchar(20) not null,
        refresh_token varchar(100),
        role_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table menu (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        icon_code_id varchar(30),
        parent_id varchar(30),
        path varchar(100),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table notification (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        content varchar(100) not null,
        member_id varchar(30) not null,
        path varchar(100),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table post (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        announcement_ends_at datetime(6),
        announcement_starts_at datetime(6),
        board_id varchar(30) not null,
        content TEXT,
        is_announcement TINYINT(1) default false not null,
        is_secret TINYINT(1) default false not null,
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table post_recommendation (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        member_id varchar(30) not null,
        post_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table reply (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        comment_id varchar(30) not null,
        content varchar(400) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table reply_recommendation (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        member_id varchar(30) not null,
        reply_id varchar(30) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table role (
        id varchar(30) not null,
        created_at DATETIME DEFAULT NOW() not null,
        updated_at DATETIME ON UPDATE NOW(),
        create_member_id varchar(30) not null,
        update_member_id varchar(30),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    create table test_entity (
        id varchar(255) not null,
        val1 varchar(255),
        val2 varchar(255),
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table authorization 
       add constraint FKdadvekdw0frovvf0jdgwwqab1 
       foreign key (menu_id) 
       references member (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table authorization 
       add constraint FKasb1m6oaq8s0hljdsdb3yrxq7 
       foreign key (role_id) 
       references role (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table comment 
       add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 
       foreign key (post_id) 
       references post (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table comment_recommendation 
       add constraint FKgtxe1netvwcuwtrw4jb57ufem 
       foreign key (comment_id) 
       references comment (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table member 
       add constraint FK7cm1epoypfx0kcnrp01en2l3m 
       foreign key (role_id) 
       references role (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKgeupubdqncc1lpgf2cn4fqwbc 
       foreign key (parent_id) 
       references menu (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table notification 
       add constraint FK1xep8o2ge7if6diclyyx53v4q 
       foreign key (member_id) 
       references member (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table post 
       add constraint FK2t7katxxymxif93a9osshl0ns 
       foreign key (board_id) 
       references board (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table post_recommendation 
       add constraint FKk751muf3lqcpy8s826iiclbgp 
       foreign key (post_id) 
       references post (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table reply 
       add constraint FK6w0ns67lrq1jdiwi5xvtj1vxx 
       foreign key (comment_id) 
       references comment (id)
DEBUG 24-01-14 23:12:35[Test worker] [SQL:135] - 
    alter table reply_recommendation 
       add constraint FKm0ehn4ukqsdeg152g1pxsmok6 
       foreign key (reply_id) 
       references reply (id)
TRACE 24-01-14 23:12:35[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5ed463b7] for TypeConfiguration
INFO  24-01-14 23:12:35[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:12:35[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:12:36[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.801 seconds (process running for 4.743)
INFO  24-01-14 23:12:36[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:12:36[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5ed463b7] for TypeConfiguration
DEBUG 24-01-14 23:12:36[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d7f8be0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5ed463b7]
INFO  24-01-14 23:12:36[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:12:36[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:13:40[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23659 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:13:40[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:13:41[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:13:41[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 59 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:13:42[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:13:42[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:13:42[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:13:42[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:13:42[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:13:42[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1202 ms
INFO  24-01-14 23:13:42[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:13:42[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:13:42[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3d1c933
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@d36c1c3
INFO  24-01-14 23:13:42[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:13:42[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:13:42[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bc0b8c8
INFO  24-01-14 23:13:42[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8d20e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e49437)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7645b7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c50cd7d)
DEBUG 24-01-14 23:13:42[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea84e01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a4930cf)
DEBUG 24-01-14 23:13:42[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:13:42[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:13:42[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:13:42[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:13:42[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@63c84d31
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3d1c933`
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:13:42[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:13:42[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a54638b]
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:13:43[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:13:43[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
TRACE 24-01-14 23:13:44[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
INFO  24-01-14 23:13:44[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:13:44[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:13:44[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:13:44[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:13:44[main] [FootbolicApplication:56] - Started FootbolicApplication in 4.38 seconds (process running for 4.68)
INFO  24-01-14 23:13:51[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:13:51[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:13:51[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 23:13:52[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-14 23:13:52[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-14 23:13:52[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
DEBUG 24-01-14 23:13:52[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1021381709<open>)] for JPA transaction
DEBUG 24-01-14 23:13:52[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:13:52[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1ccee7ab]
DEBUG 24-01-14 23:13:52[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:13:52[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1021381709<open>)]
DEBUG 24-01-14 23:13:52[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:13:52[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:36)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:16:56[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:16:56[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
DEBUG 24-01-14 23:16:56[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@52047201] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
INFO  24-01-14 23:16:56[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:16:56[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:16:58[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23700 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:16:58[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:16:59[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:16:59[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:17:00[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:17:00[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:17:00[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:17:00[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:17:00[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:17:00[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1090 ms
INFO  24-01-14 23:17:00[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:17:00[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:17:00[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@6f15f52a
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6f15f52a
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@682e445e
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79e10fb4
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@70fede7d
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c47a053
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d2a86c0
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ba1b62e
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@65bd19bf
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@74697863
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d7ceca8
INFO  24-01-14 23:17:00[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:17:00[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:17:00[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23469199
INFO  24-01-14 23:17:00[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@246de37e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19647566)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b79ff1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@527d48db)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@194037f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2335aef2)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17003497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f038d3c)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@376498da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39a8e2fa)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f9addd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c43df76)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ff2266c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71b3ba5a)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a047bdb)
DEBUG 24-01-14 23:17:00[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7856f41a)
DEBUG 24-01-14 23:17:00[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:17:00[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:17:00[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:17:00[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:17:00[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5d800a56
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@682e445e`
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:17:00[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:17:00[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7573c7b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73da7f08]
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:17:01[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:17:01[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7573c7b5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@10f384a2]
TRACE 24-01-14 23:17:01[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@10f384a2] for TypeConfiguration
INFO  24-01-14 23:17:01[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:17:02[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:17:02[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:17:02[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:17:02[main] [FootbolicApplication:56] - Started FootbolicApplication in 4.128 seconds (process running for 4.409)
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 2 ms
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:19:24[http-nio-8080-exec-2] [MenuController:36] - createMemberId : null
DEBUG 24-01-14 23:19:24[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1019443234<open>)] for JPA transaction
DEBUG 24-01-14 23:19:24[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:19:24[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16297117]
DEBUG 24-01-14 23:19:24[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:19:24[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1019443234<open>)]
DEBUG 24-01-14 23:19:24[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:19:24[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:19:56[http-nio-8080-exec-3] [MenuController:33] - here1
INFO  24-01-14 23:19:56[http-nio-8080-exec-3] [MenuController:34] - title : test menu
INFO  24-01-14 23:19:56[http-nio-8080-exec-3] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:19:56[http-nio-8080-exec-3] [MenuController:36] - createMemberId : testMemberId
DEBUG 24-01-14 23:19:56[http-nio-8080-exec-3] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1660221764<open>)] for JPA transaction
DEBUG 24-01-14 23:19:56[http-nio-8080-exec-3] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:19:56[http-nio-8080-exec-3] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6c331b6a]
DEBUG 24-01-14 23:19:56[http-nio-8080-exec-3] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:19:56[http-nio-8080-exec-3] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1660221764<open>)]
DEBUG 24-01-14 23:19:56[http-nio-8080-exec-3] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:19:56[http-nio-8080-exec-3] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:20:01[http-nio-8080-exec-6] [MenuController:33] - here1
INFO  24-01-14 23:20:01[http-nio-8080-exec-6] [MenuController:34] - title : test menu
INFO  24-01-14 23:20:01[http-nio-8080-exec-6] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:20:01[http-nio-8080-exec-6] [MenuController:36] - createMemberId : testMemberId
DEBUG 24-01-14 23:20:01[http-nio-8080-exec-6] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1146351772<open>)] for JPA transaction
DEBUG 24-01-14 23:20:01[http-nio-8080-exec-6] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:20:01[http-nio-8080-exec-6] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4a941666]
DEBUG 24-01-14 23:20:01[http-nio-8080-exec-6] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:20:01[http-nio-8080-exec-6] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1146351772<open>)]
DEBUG 24-01-14 23:20:01[http-nio-8080-exec-6] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:20:01[http-nio-8080-exec-6] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:30:24[http-nio-8080-exec-8] [MenuController:33] - here1
INFO  24-01-14 23:30:24[http-nio-8080-exec-8] [MenuController:34] - title : test menu
INFO  24-01-14 23:30:24[http-nio-8080-exec-8] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:30:24[http-nio-8080-exec-8] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:30:24[http-nio-8080-exec-8] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1102442590<open>)] for JPA transaction
DEBUG 24-01-14 23:30:24[http-nio-8080-exec-8] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:30:24[http-nio-8080-exec-8] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f720618]
DEBUG 24-01-14 23:30:24[http-nio-8080-exec-8] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:30:24[http-nio-8080-exec-8] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1102442590<open>)]
DEBUG 24-01-14 23:30:24[http-nio-8080-exec-8] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:30:24[http-nio-8080-exec-8] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:33:09[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:33:09[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@10f384a2] for TypeConfiguration
DEBUG 24-01-14 23:33:09[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e5fab75] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@10f384a2]
INFO  24-01-14 23:33:09[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:33:09[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:33:12[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23828 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:33:12[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:33:12[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:33:12[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 55 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:33:13[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:33:13[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:33:13[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:33:13[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:33:13[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:33:13[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1144 ms
INFO  24-01-14 23:33:13[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:33:13[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:33:13[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@7c71c889
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c71c889
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5ba1b62e
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@65bd19bf
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@74697863
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2bba35ef
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@26c7b1c6
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@19526f1d
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3d1c933
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-14 23:33:13[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@626c569b
INFO  24-01-14 23:33:13[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:33:13[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:33:13[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5464b97c
INFO  24-01-14 23:33:13[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17003497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f038d3c)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@376498da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39a8e2fa)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f9addd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c43df76)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ff2266c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71b3ba5a)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@83ebdc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a047bdb)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14dbfdb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7856f41a)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67f591c2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02)
DEBUG 24-01-14 23:33:14[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@709d6de5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e)
DEBUG 24-01-14 23:33:14[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:33:14[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:33:14[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:33:14[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:33:14[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@53e28097
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5ba1b62e`
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:33:14[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:33:14[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c754401] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1da53f4f]
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:33:14[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:33:14[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c754401] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@10f384a2]
TRACE 24-01-14 23:33:15[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@10f384a2] for TypeConfiguration
INFO  24-01-14 23:33:15[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:33:15[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:33:15[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:33:15[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:33:15[main] [FootbolicApplication:56] - Started FootbolicApplication in 4.104 seconds (process running for 4.4)
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:33:45[http-nio-8080-exec-2] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:33:45[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(353322553<open>)] for JPA transaction
DEBUG 24-01-14 23:33:45[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:33:45[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a36d7f4]
DEBUG 24-01-14 23:33:45[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:33:45[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(353322553<open>)]
DEBUG 24-01-14 23:33:45[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:33:45[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:37:52[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:37:52[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@10f384a2] for TypeConfiguration
DEBUG 24-01-14 23:37:52[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@356a5a32] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@10f384a2]
INFO  24-01-14 23:37:52[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:37:52[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:37:54[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23865 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:37:54[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:37:55[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:37:55[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 52 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:37:55[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:37:55[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:37:55[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:37:55[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:37:55[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:37:55[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 957 ms
INFO  24-01-14 23:37:55[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:37:55[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:37:55[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3d1c933
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-14 23:37:55[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@d36c1c3
INFO  24-01-14 23:37:55[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:37:55[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:37:56[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bc0b8c8
INFO  24-01-14 23:37:56[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8d20e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e49437)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7645b7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c50cd7d)
DEBUG 24-01-14 23:37:56[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea84e01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a4930cf)
DEBUG 24-01-14 23:37:56[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:37:56[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:37:56[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:37:56[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:37:56[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@63c84d31
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3d1c933`
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:37:56[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:37:56[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a54638b]
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:37:56[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:37:56[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
TRACE 24-01-14 23:37:56[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
INFO  24-01-14 23:37:56[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:37:57[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:37:57[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:37:57[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:37:57[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.382 seconds (process running for 3.61)
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [MenuController:33] - here1
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [MenuController:34] - title : test menu
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:38:03[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1668654764<open>)] for JPA transaction
DEBUG 24-01-14 23:38:03[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:38:03[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@596cefa7]
INFO  24-01-14 23:38:03[http-nio-8080-exec-1] [CustomSequenceGenrator:22] - generating id
DEBUG 24-01-14 23:38:03[http-nio-8080-exec-1] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:38:03[http-nio-8080-exec-1] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1668654764<open>)]
DEBUG 24-01-14 23:38:03[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:38:03[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:38:17[http-nio-8080-exec-4] [MenuController:33] - here1
INFO  24-01-14 23:38:17[http-nio-8080-exec-4] [MenuController:34] - title : test menu
INFO  24-01-14 23:38:17[http-nio-8080-exec-4] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:38:17[http-nio-8080-exec-4] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:38:17[http-nio-8080-exec-4] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1008251451<open>)] for JPA transaction
DEBUG 24-01-14 23:38:17[http-nio-8080-exec-4] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:38:17[http-nio-8080-exec-4] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@32df4bc8]
INFO  24-01-14 23:38:17[http-nio-8080-exec-4] [CustomSequenceGenrator:22] - generating id
DEBUG 24-01-14 23:38:17[http-nio-8080-exec-4] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:38:17[http-nio-8080-exec-4] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1008251451<open>)]
DEBUG 24-01-14 23:38:17[http-nio-8080-exec-4] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:38:17[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:44:39[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:44:39[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
DEBUG 24-01-14 23:44:39[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15fd663f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
INFO  24-01-14 23:44:39[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:44:39[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:44:41[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23941 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
DEBUG 24-01-14 23:44:41[main] [FootbolicApplication:51] - Running with Spring Boot v3.2.0-SNAPSHOT, Spring v6.1.1
INFO  24-01-14 23:44:41[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
DEBUG 24-01-14 23:44:41[main] [SpringApplication:686] - Loading source class com.footbolic.api.FootbolicApplication
DEBUG 24-01-14 23:44:41[main] [AnnotationConfigServletWebServerApplicationContext:658] - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a
DEBUG 24-01-14 23:44:41[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG 24-01-14 23:44:41[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/config/QueryDslConfig.class]
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/config/SwaggerConfig.class]
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/controller/MenuController.class]
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:468] - Ignored because not a concrete top-level class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/repository/MenuRepository.class]
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/repository/MenuRepositoryCustomImpl.class]
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/service/MenuServiceImpl.class]
DEBUG 24-01-14 23:44:41[main] [ClassPathBeanDefinitionScanner:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/test/testController.class]
INFO  24-01-14 23:44:42[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
DEBUG 24-01-14 23:44:42[main] [AutoConfigurationPackages:213] - @EnableAutoConfiguration was declared on a class in the package 'com.footbolic.api'. Automatic @Repository and @Entity scanning is enabled.
DEBUG 24-01-14 23:44:42[main] [RepositoryConfigurationDelegate:149] - Scanning for JPA repositories in packages com.footbolic.api.
DEBUG 24-01-14 23:44:42[main] [RepositoryComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/repository/MenuRepository.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/authorization/entity/AuthorizationEntity$AuthorizationEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/banner/entity/BannerEntity$BannerEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/board/entity/BoardEntity$BoardEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/comment/entity/CommentEntity$CommentEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/common/entity/ExtendedBaseEntity$ExtendedBaseEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/common_code/entity/CommonCodeEntity$CommonCodeEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/member/entity/MemberEntity$MemberEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/entity/MenuEntity$MenuEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/repository/MenuRepositoryCustomImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/menu/service/MenuServiceImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/notification/entity/NotificationEntity$NotificationEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/post/entity/PostEntity$PostEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/recommendation/entity/CommentRecommendationEntity$CommentRecommendationEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/recommendation/entity/PostRecommendationEntity$PostRecommendationEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/recommendation/entity/ReplyRecommendationEntity$ReplyRecommendationEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/reply/entity/ReplyEntity$ReplyEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [ClassPathScanningCandidateComponentProvider:462] - Identified candidate component class: file [/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/com/footbolic/api/role/entity/RoleEntity$RoleEntityBuilderImpl.class]
DEBUG 24-01-14 23:44:42[main] [RepositoryBeanDefinitionBuilder:277] - Repository fragment implementation already registered: menuRepositoryCustomImpl
DEBUG 24-01-14 23:44:42[main] [RepositoryBeanDefinitionBuilder:311] - Registering RepositoryFragment: menuRepositoryCustomImplFragment
INFO  24-01-14 23:44:42[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 47 ms. Found 1 JPA repository interface.
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'hypermediaRepresentionModelProcessorConfigurator'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionAttributeSource'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionInterceptor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'hypermediaRestTemplateBeanPostProcessor'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'projectionDefinitionRegistrar'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'annotatedEventHandlerInvoker'
DEBUG 24-01-14 23:44:42[main] [UiApplicationContextUtils:86] - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@470d183]
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'sslBundleRegistry'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'fileWatcher'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'errorPageCustomizer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dispatcherServletRegistration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dispatcherServlet'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'multipartConfigElement'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
DEBUG 24-01-14 23:44:42[main] [TomcatServletWebServerFactory:81] - Code archive: /Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.2.0-SNAPSHOT/849dd8e07edbf35f3b180f052820c7f23a44f292/spring-boot-3.2.0-SNAPSHOT.jar
DEBUG 24-01-14 23:44:42[main] [TomcatServletWebServerFactory:125] - Code archive: /Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.2.0-SNAPSHOT/849dd8e07edbf35f3b180f052820c7f23a44f292/spring-boot-3.2.0-SNAPSHOT.jar
DEBUG 24-01-14 23:44:42[main] [TomcatServletWebServerFactory:149] - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
INFO  24-01-14 23:44:42[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:44:42[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:44:42[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:44:42[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:44:42[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
DEBUG 24-01-14 23:44:42[main] [ServletWebServerApplicationContext:290] - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
INFO  24-01-14 23:44:42[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 975 ms
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestContextFilter'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'formContentFilter'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'characterEncodingFilter'
DEBUG 24-01-14 23:44:42[main] [ServletContextInitializerBeans:234] - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
DEBUG 24-01-14 23:44:42[main] [ServletContextInitializerBeans:234] - Mapping servlets: dispatcherServlet urls=[/]
DEBUG 24-01-14 23:44:42[main] [OrderedRequestContextFilter:240] - Filter 'requestContextFilter' configured for use
DEBUG 24-01-14 23:44:42[main] [OrderedCharacterEncodingFilter:240] - Filter 'characterEncodingFilter' configured for use
DEBUG 24-01-14 23:44:42[main] [OrderedFormContentFilter:240] - Filter 'formContentFilter' configured for use
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataSource'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcConnectionDetails'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'
DEBUG 24-01-14 23:44:42[main] [HikariConfig:968] - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@7e32c033
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'entityManagerFactory'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaVendorAdapter'
DEBUG 24-01-14 23:44:42[main] [logging:164] - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'persistenceManagedTypes'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
DEBUG 24-01-14 23:44:42[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'persistenceManagedTypes'
DEBUG 24-01-14 23:44:42[main] [LocalContainerEntityManagerFactoryBean:372] - Building JPA container EntityManagerFactory for persistence unit 'default'
DEBUG 24-01-14 23:44:42[main] [LogHelper:102] - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@7e32c033
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: NONE
	Jar files URLs []
	Managed classes names [
		com.footbolic.api.authorization.entity.AuthorizationEntity
		com.footbolic.api.banner.entity.BannerEntity
		com.footbolic.api.board.entity.BoardEntity
		com.footbolic.api.comment.entity.CommentEntity
		com.footbolic.api.common.entity.BaseEntity
		com.footbolic.api.common.entity.ExtendedBaseEntity
		com.footbolic.api.common_code.entity.CommonCodeEntity
		com.footbolic.api.member.entity.MemberEntity
		com.footbolic.api.menu.entity.MenuEntity
		com.footbolic.api.notification.entity.NotificationEntity
		com.footbolic.api.post.entity.PostEntity
		com.footbolic.api.recommendation.entity.CommentRecommendationEntity
		com.footbolic.api.recommendation.entity.PostRecommendationEntity
		com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
		com.footbolic.api.reply.entity.ReplyEntity
		com.footbolic.api.role.entity.RoleEntity
		com.footbolic.api.test.TestEntity]
	Mapping files names []
	Properties []
DEBUG 24-01-14 23:44:42[main] [IntegratorServiceImpl:51] - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
DEBUG 24-01-14 23:44:42[main] [IntegratorServiceImpl:51] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO  24-01-14 23:44:42[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
DEBUG 24-01-14 23:44:42[main] [Environment:163] - HHH000206: 'hibernate.properties' not found
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG 24-01-14 23:44:42[main] [factory:170] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG 24-01-14 23:44:42[main] [RegionFactoryInitiator:122] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
INFO  24-01-14 23:44:42[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@35563e4c
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@35563e4c
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@35563e4c
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6dd79214
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6dd79214
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@cf01c2e
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@cf01c2e
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@625487a6
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@682e445e
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79e10fb4
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@70fede7d
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@36510e73
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2c47a053
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5d2a86c0
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5ba1b62e
DEBUG 24-01-14 23:44:42[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65bd19bf
DEBUG 24-01-14 23:44:42[main] [BootstrapContextImpl:291] - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7767bd4e] into BootstrapContext; was [null]
DEBUG 24-01-14 23:44:42[main] [ClassLoaderAccessImpl:45] - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7767bd4e) [was null]
DEBUG 24-01-14 23:44:42[main] [BootstrapContextImpl:301] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@359ceb13] into BootstrapContext; was [null]
DEBUG 24-01-14 23:44:42[main] [BootstrapContextImpl:296] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1068176] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5bf4764d]
DEBUG 24-01-14 23:44:42[main] [BytecodeProviderInitiator:53] - HHH000021: Bytecode provider: bytebuddy
INFO  24-01-14 23:44:42[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-01-14 23:44:42[main] [BootstrapContextImpl:291] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7767bd4e]
DEBUG 24-01-14 23:44:42[main] [ClassLoaderAccessImpl:45] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7767bd4e]
DEBUG 24-01-14 23:44:42[main] [HikariConfig:1100] - HikariPool-1 - configuration:
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - allowPoolSuspension.............false
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - autoCommit......................true
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - catalog.........................none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - connectionInitSql...............none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - connectionTestQuery.............none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - connectionTimeout...............30000
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - dataSource......................none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - dataSourceClassName.............none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - dataSourceJNDI..................none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - dataSourceProperties............{password=<masked>}
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - driverClassName................."com.mysql.cj.jdbc.Driver"
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - exceptionOverrideClassName......none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - healthCheckProperties...........{}
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - healthCheckRegistry.............none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - idleTimeout.....................600000
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - initializationFailTimeout.......1
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - isolateInternalQueries..........false
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - jdbcUrl.........................jdbc:mysql://localhost:3306/footbolic?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - keepaliveTime...................0
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - leakDetectionThreshold..........0
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - maxLifetime.....................1800000
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - maximumPoolSize.................10
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - metricRegistry..................none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - metricsTrackerFactory...........none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - minimumIdle.....................10
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - password........................<masked>
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - poolName........................"HikariPool-1"
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - readOnly........................false
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - registerMbeans..................false
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - scheduledExecutor...............none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - schema..........................none
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - threadFactory...................internal
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - transactionIsolation............default
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - username........................"footbolic"
DEBUG 24-01-14 23:44:43[main] [HikariConfig:1132] - validationTimeout...............5000
INFO  24-01-14 23:44:43[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:44:43[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14656be5
INFO  24-01-14 23:44:43[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:44:43[main] [JdbcEnvironmentInitiator:349] - Database ->
       name : MySQL
    version : 8.2.0
      major : 8
      minor : 2
DEBUG 24-01-14 23:44:43[main] [JdbcEnvironmentInitiator:360] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.1.0 (Revision: 7b6f9a337afe6ccb41823df485bf848ca7952b09)
      major : 8
      minor : 1
DEBUG 24-01-14 23:44:43[main] [JdbcEnvironmentInitiator:388] - JDBC version : 4.2
DEBUG 24-01-14 23:44:43[main] [dialect:93] - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.2
DEBUG 24-01-14 23:44:43[main] [IdentifierHelperBuilder:121] - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG 24-01-14 23:44:43[main] [IdentifierHelperBuilder:210] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56478522) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3caf5c96)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b3755f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37d3aa8c)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd747c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1bdafb01)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7aa3857b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@500ec769)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37806be6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bce9ce4)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d2046bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b33fff9)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@fd87c22) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@fee881)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ff463bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b9c9b8b)
DEBUG 24-01-14 23:44:43[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7769d9b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@248d3a)
DEBUG 24-01-14 23:44:43[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:44:43[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:44:43[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:44:43[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:44:43[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2a9e754e
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@625487a6`
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:44:43[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:44:43[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@698ac187] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4fea5ee0]
DEBUG 24-01-14 23:44:43[main] [Namespace:64] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG 24-01-14 23:44:43[main] [AnnotationMetadataSourceProcessorImpl:281] - Skipping explicit MappedSuperclass com.footbolic.api.common.entity.BaseEntity, the class will be discovered analyzing the implementing class
DEBUG 24-01-14 23:44:43[main] [AnnotationMetadataSourceProcessorImpl:281] - Skipping explicit MappedSuperclass com.footbolic.api.common.entity.ExtendedBaseEntity, the class will be discovered analyzing the implementing class
DEBUG 24-01-14 23:44:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43741872
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.authorization.entity.AuthorizationEntity on table authorization
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2491249
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.authorization.entity.AuthorizationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3381b60b
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='menu_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property menu
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6266ed06
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='menu_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property menuId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:menuId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for menuId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.menu_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property menuId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='role_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property role
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='role_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property roleId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:roleId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for roleId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.role_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property roleId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.authorization.entity.AuthorizationEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: authorization.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name BannerEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.banner.entity.BannerEntity on table banner
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.banner.entity.BannerEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='ends_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property endsAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:endsAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for endsAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.ends_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property endsAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='image_path')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property imagePath with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:imagePath]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for imagePath
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.image_path
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@20df3cd5
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property imagePath
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_linked')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isLinked with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:isLinked]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isLinked
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.is_linked
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isLinked
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_mobile')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isMobile with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:isMobile]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isMobile
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.is_mobile
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isMobile
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_time_limited')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isTimeLimited with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:isTimeLimited]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isTimeLimited
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.is_time_limited
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isTimeLimited
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='link_address')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property linkAddress with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:linkAddress]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for linkAddress
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.link_address
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property linkAddress
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='starts_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property startsAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.banner.entity.BannerEntity:startsAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for startsAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: banner.starts_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property startsAt
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name BoardEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.board.entity.BoardEntity on table board
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.board.entity.BoardEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_announceable')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isAnnounceable with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:isAnnounceable]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isAnnounceable
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.is_announceable
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isAnnounceable
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_commentable')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isCommentable with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:isCommentable]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isCommentable
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.is_commentable
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isCommentable
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_recommendable')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isRecommendable with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:isRecommendable]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isRecommendable
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.is_recommendable
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isRecommendable
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_secretable')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isSecretable with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:isSecretable]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isSecretable
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.is_secretable
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isSecretable
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6628f3c1
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='posts_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='posts_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='posts_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.board.entity.BoardEntity.posts
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property posts
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.board.entity.BoardEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: board.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name CommentEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.comment.entity.CommentEntity on table comment
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.comment.entity.CommentEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2606aae3
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='content')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property content with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:content]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for content
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.content
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property content
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='post_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property post
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='post_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property postId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.comment.entity.CommentEntity:postId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for postId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment.post_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property postId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='replies_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='replies_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='replies_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.comment.entity.CommentEntity.replies
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property replies
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.common_code.entity.CommonCodeEntity on table common_code
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.common_code.entity.CommonCodeEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='code')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property code with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:code]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for code
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.code
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property code
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.common_code.entity.CommonCodeEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: common_code.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name MemberEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.member.entity.MemberEntity on table member
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.member.entity.MemberEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2dfbb466
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='full_name')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property fullName with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:fullName]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for fullName
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.full_name
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property fullName
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='nickname')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property nickname with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:nickname]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for nickname
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.nickname
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property nickname
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='notifications_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='notifications_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='notifications_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.member.entity.MemberEntity.notifications
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property notifications
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='refresh_token')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property refreshToken with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:refreshToken]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for refreshToken
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.refresh_token
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property refreshToken
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='role_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property role
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='role_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property roleId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.member.entity.MemberEntity:roleId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for roleId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: member.role_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property roleId
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name MenuEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.menu.entity.MenuEntity on table menu
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.menu.entity.MenuEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='icon_code_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property iconCodeId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:iconCodeId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for iconCodeId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.icon_code_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property iconCodeId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='menus_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='menus_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='menus_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.menu.entity.MenuEntity.menus
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property menus
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='parent_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property parent
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='parent_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property parentId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:parentId]
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:738] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@715282fc
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for parentId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.parent_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property parentId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='path')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property path with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:path]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for path
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.path
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property path
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.menu.entity.MenuEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: menu.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name NotificationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.notification.entity.NotificationEntity on table notification
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.notification.entity.NotificationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='content')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property content with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:content]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for content
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.content
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property content
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='member_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property member
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property memberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:memberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property memberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='path')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property path with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:path]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for path
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.path
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property path
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.notification.entity.NotificationEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: notification.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[HikariPool-1 connection adder] [HikariPool:414] - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name PostEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.post.entity.PostEntity on table post
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.post.entity.PostEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='announcement_ends_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property announcementEndsAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:announcementEndsAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for announcementEndsAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.announcement_ends_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property announcementEndsAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='announcement_starts_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property announcementStartsAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:announcementStartsAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for announcementStartsAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.announcement_starts_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property announcementStartsAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='board_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property board
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='board_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property boardId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:boardId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for boardId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.board_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property boardId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='comments_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='comments_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='comments_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.post.entity.PostEntity.comments
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property comments
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='content')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property content with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:content]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for content
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.content
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property content
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_announcement')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isAnnouncement with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:isAnnouncement]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isAnnouncement
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.is_announcement
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isAnnouncement
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='is_secret')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property isSecret with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:isSecret]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for isSecret
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.is_secret
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property isSecret
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.post.entity.PostEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name CommentRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.recommendation.entity.CommentRecommendationEntity on table comment_recommendation
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.recommendation.entity.CommentRecommendationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.recommendation.entity.CommentRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.CommentRecommendationEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment_recommendation.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.CommentRecommendationEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment_recommendation.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.CommentRecommendationEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment_recommendation.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='comment_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property comment
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='comment_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property commentId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.CommentRecommendationEntity:commentId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for commentId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment_recommendation.comment_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property commentId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property memberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.CommentRecommendationEntity:memberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: comment_recommendation.member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property memberId
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.recommendation.entity.CommentRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.recommendation.entity.CommentRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.recommendation.entity.PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.recommendation.entity.PostRecommendationEntity on table post_recommendation
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.recommendation.entity.PostRecommendationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.recommendation.entity.PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.PostRecommendationEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post_recommendation.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.PostRecommendationEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post_recommendation.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.PostRecommendationEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post_recommendation.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property memberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.PostRecommendationEntity:memberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post_recommendation.member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property memberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='post_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property post
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='post_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property postId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.PostRecommendationEntity:postId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for postId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: post_recommendation.post_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property postId
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.recommendation.entity.PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.recommendation.entity.PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name ReplyRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.recommendation.entity.ReplyRecommendationEntity on table reply_recommendation
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply_recommendation.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply_recommendation.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply_recommendation.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property memberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity:memberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply_recommendation.member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property memberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='reply_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property reply
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='reply_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property replyId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity:replyId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for replyId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply_recommendation.reply_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property replyId
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name ReplyEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.reply.entity.ReplyEntity on table reply
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.reply.entity.ReplyEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='comment_id')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property comment
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='comment_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property commentId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:commentId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for commentId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.comment_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property commentId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='content')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property content with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.reply.entity.ReplyEntity:content]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for content
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: reply.content
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property content
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name RoleEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.role.entity.RoleEntity on table role
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='id')
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.role.entity.RoleEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.role.entity.RoleEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: role.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, idGenerator, ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='created_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createdAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.role.entity.RoleEntity:createdAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: role.created_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createdAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='updated_at')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updatedAt with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.role.entity.RoleEntity:updatedAt]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: role.updated_at
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updatedAt
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='create_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property createMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.role.entity.RoleEntity:createMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: role.create_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property createMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='update_member_id')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property updateMemberId with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.role.entity.RoleEntity:updateMemberId]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: role.update_member_id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property updateMemberId
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='authorizations_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='authorizations_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='authorizations_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.role.entity.RoleEntity.authorizations
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property authorizations
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: IndexColumn(column='members_ORDER')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='members_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn(column='members_KEY')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedJoinColumn()
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1161] - Collection role: com.footbolic.api.role.entity.RoleEntity.members
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property members
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn(column='title')
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property title with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.role.entity.RoleEntity:title]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for title
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: role.title
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property title
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForUpdate as PreUpdate callback for entity com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [CallbackDefinitionResolverLegacyImpl:146] - Adding touchForCreate as PrePersist callback for entity com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:209] - Binding entity from annotated class: com.footbolic.api.test.TestEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1244] - Import with entity name TestEntity
DEBUG 24-01-14 23:44:43[main] [EntityBinder:1793] - Bind entity com.footbolic.api.test.TestEntity on table test_entity
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.test.TestEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.test.TestEntity
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property id with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.test.TestEntity:id]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for id
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: test_entity.id
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property id
DEBUG 24-01-14 23:44:43[main] [BinderHelper:73] - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property val1 with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.test.TestEntity:val1]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for val1
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: test_entity.val1
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property val1
DEBUG 24-01-14 23:44:43[main] [AnnotatedColumn:261] - Binding column: AnnotatedColumn()
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:252] - MetadataSourceProcessor property val2 with lazy=false
DEBUG 24-01-14 23:44:43[main] [AbstractPropertyHolder:107] - Attempting to locate auto-apply AttributeConverter for property [com.footbolic.api.test.TestEntity:val2]
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1210] - building BasicValue for val2
DEBUG 24-01-14 23:44:43[main] [BasicValue:263] - Skipping column re-registration: test_entity.val2
DEBUG 24-01-14 23:44:43[main] [PropertyBinder:392] - Building property val2
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for menuId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for roleId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for endsAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for imagePath
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isLinked
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isMobile
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isTimeLimited
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for linkAddress
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for startsAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isAnnounceable
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isCommentable
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isRecommendable
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isSecretable
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for content
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for postId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for code
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for fullName
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for nickname
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for refreshToken
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for roleId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for iconCodeId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for parentId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for path
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for content
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for path
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for announcementEndsAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for announcementStartsAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for boardId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for content
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isAnnouncement
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for isSecret
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for commentId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for postId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for memberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for replyId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for commentId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for content
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createdAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for createMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for updateMemberId
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for title
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for id
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for val1
DEBUG 24-01-14 23:44:43[main] [BasicValueBinder:1288] - Starting `BasicValueBinder#fillSimpleValue` for val2
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [authorization]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [banner]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [board]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [comment]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [common_code]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [member]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [menu]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [notification]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [post]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [comment_recommendation]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [post_recommendation]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [reply_recommendation]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [reply]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [role]
DEBUG 24-01-14 23:44:43[main] [PrimaryKey:40] - Forcing column [id] to be non-null as it is part of the primary key for table [test_entity]
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.board.entity.BoardEntity.posts
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.board.entity.BoardEntity.posts through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.board.entity.BoardEntity.posts -> post
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.post.entity.PostEntity.board
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: board_id, one-to-many: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.comment.entity.CommentEntity.replies
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.comment.entity.CommentEntity.replies through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.comment.entity.CommentEntity.replies -> reply
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.reply.entity.ReplyEntity.comment
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: comment_id, one-to-many: com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.member.entity.MemberEntity.notifications
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.member.entity.MemberEntity.notifications through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.member.entity.MemberEntity.notifications -> notification
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.notification.entity.NotificationEntity.member
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: member_id, one-to-many: com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.menu.entity.MenuEntity.menus
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.menu.entity.MenuEntity.menus through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.menu.entity.MenuEntity.menus -> menu
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.menu.entity.MenuEntity.parent
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: parent_id, one-to-many: com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.post.entity.PostEntity.comments
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.post.entity.PostEntity.comments through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.post.entity.PostEntity.comments -> comment
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.comment.entity.CommentEntity.post
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: post_id, one-to-many: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.role.entity.RoleEntity.authorizations
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.role.entity.RoleEntity.authorizations through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.role.entity.RoleEntity.authorizations -> authorization
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.authorization.entity.AuthorizationEntity.role
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: role_id, one-to-many: com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:42] - Second pass for collection: com.footbolic.api.role.entity.RoleEntity.members
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:2802] - Binding a OneToMany: com.footbolic.api.role.entity.RoleEntity.members through a foreign key
DEBUG 24-01-14 23:44:43[main] [CollectionBinder:1682] - Mapping collection: com.footbolic.api.role.entity.RoleEntity.members -> member
DEBUG 24-01-14 23:44:43[main] [TableBinder:785] - Retrieving property com.footbolic.api.member.entity.MemberEntity.role
DEBUG 24-01-14 23:44:43[main] [CollectionSecondPass:60] - Mapped collection key: role_id, one-to-many: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [InFlightMetadataCollectorImpl:1950] - Resolving reference to class: com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderInitiator:53] - HHH000021: Bytecode provider: bytebuddy
DEBUG 24-01-14 23:44:43[main] [SessionFactoryImpl:210] - Building session factory
DEBUG 24-01-14 23:44:43[main] [BeanConfigurerSupport:128] - BeanFactory has not been set on BeanConfigurerSupport: Make sure this configurer runs in a Spring container. Unable to configure bean of type [org.springframework.data.jpa.domain.support.AuditingEntityListener]. Proceeding without injection.
DEBUG 24-01-14 23:44:43[main] [SessionFactoryServiceRegistryImpl:105] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
DEBUG 24-01-14 23:44:43[main] [SessionFactoryImpl:227] - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=20, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@15ad5acb, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main:/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/resources/main:/Users/test/.gradle/caches/modules-2/files-2.1/org.springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/f31615e90b61d18a46a701d5c10e9e505a49a984/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.querydsl/querydsl-jpa/5.0.0/2a653852848dee41b967d3520be3339f0f92f1ea/querydsl-jpa-5.0.0-jakarta.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.1.0/3f78d2963935f44a61edb3961a591cdc392c8941/mysql-connector-j-8.1.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.3.1.Final/1101d7e09e4853a110fd27a6f35c906f5709ac4f/hibernate-core-6.3.1.Final.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.2.0/59e49a0eca3d02c3dc593e7a881c19b932641894/spring-data-jpa-3.2.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.1.1/bfcb6682e205b4ef6ae7986ac7ea35eae29f31f4/spring-aspects-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-rest-webmvc/4.2.0/6233f04843ece9f7ba0570cda8fd59bbb40326b6/spring-data-rest-webmvc-4.2.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/966fa4ae5e4fbd559062df6b7cb2ec2e9cf23a20/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.1.1/76c4408b67828aa9656f5955dc2c1c4c0e1b6da3/spring-webmvc-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-rest-core/4.2.0/d6f1e8b0962888ad63e34c09e5bcb654057df4cc/spring-data-rest-core-4.2.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.hateoas/spring-hateoas/2.2.0/ed2b27f280d2662ccde2b92fd474ef4aa393119/spring-hateoas-2.2.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.1.1/4eeb5f2edb9f04d00357edcc56b59d3874b3b453/spring-web-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.webjars/swagger-ui/4.18.2/2347d066b71cd3d20789b6d143829680b3123d81/swagger-ui-4.18.2.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.querydsl/querydsl-core/5.0.0/7a469f78b7a89bae429f17766fb92687d0ab9e5b/querydsl-core-5.0.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springdoc/springdoc-openapi-starter-common/2.1.0/5c66d613cf1a505be1a8b92e60a481dea2c9552c/springdoc-openapi-starter-common-2.1.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.2.0-SNAPSHOT/99d15087691e051ab232c00d760c38deaffa9865/spring-boot-autoconfigure-3.2.0-SNAPSHOT.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.2.0-SNAPSHOT/849dd8e07edbf35f3b180f052820c7f23a44f292/spring-boot-3.2.0-SNAPSHOT.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.plugin/spring-plugin-core/3.0.0/d56aa02dd7272dca30aa598dc8b72e823227046a/spring-plugin-core-3.0.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.1.1/610d7dd3f62d22d42b993a201e3110649b68e17/spring-context-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.1.1/66cb0e08770d4523ae3976b0b791cde767466c61/spring-aop-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.20.1/33b0e41476658229933eec7134678cf336e66dd4/aspectjweaver-1.9.20.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.1.1/e9672bb788f74ed12f9ad9e2bf12eb9e4d7c8695/spring-orm-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.1.1/92f1f65c3d8ccee4a86cd8f85a446d99f2915833/spring-jdbc-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.3.Final/c88fc1d8a96d4c3491f55d4317458ccad53ca663/jboss-logging-3.5.3.Final.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/test/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.1.2/a6c1c89925c7df06242b03dddb353116ceb9584c/jandex-3.1.2.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.6.0/91affab6f84a2182fce5dd72a8d01bc14346dddd/classmate-1.6.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.10/8117daf4a612122eb4f517f66adff778cb8b4737/byte-buddy-1.14.10.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.4/7180c50ef8bd127bb1dd645458b906cffcf6c2b5/jaxb-runtime-4.0.4.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.4/2d5aadd02af86f1e9d8c6f7e8501673f915d4e25/jaxb-core-4.0.4.jar:/Users/test/.gradle/caches/modules-2/files-2.1/io.swagger.core.v3/swagger-core-jakarta/2.2.9/c6a36f687fb5fc7160469b8b69463e270024e3e2/swagger-core-jakarta-2.2.9.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.1/ca2330866cbc624c7e5ce982e121db1125d23e15/jakarta.xml.bind-api-4.0.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.2.0/1c98c48b9fde0624337e19f3577fce20d19b78ea/spring-data-commons-3.2.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.1.1/100cf99c3e41b12eab810d780c0e6e3905c51c12/spring-tx-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.1.1/6af88af13193acf2197bc0a42f0ec4e5c481bfe9/spring-beans-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.1.1/807700a64cb055ed85af189d1fa0702bc0d2efba/spring-expression-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.1.1/22d73bef97aff8a74a992716fe1aafc8f8a8a68d/spring-core-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.11/54450c0c783e896a1a6d88c043bd2f1daba1c382/logback-classic-1.4.11.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.21.1/d77b2ba81711ed596cd797cc2b5b5bd7409d841c/log4j-to-slf4j-2.21.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.9/9ef7c70b248185845f013f49a33ff9ca65b7975/jul-to-slf4j-2.0.9.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/2.8.0/b4ab3b7a9e425655a0ca65487bbbd6d7ddb75160/json-path-2.8.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.9/7cf2726fdcfbc8610f9a71fb3ed639871f315340/slf4j-api-2.0.9.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.3/4a20a0e104931bfa72f24ef358c2eb63f1ef2aaf/jackson-datatype-jsr310-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/io.swagger.core.v3/swagger-models-jakarta/2.2.9/29f6936e387e42762bdab01938b848a16ead0821/swagger-models-jakarta-2.2.9.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.3/79baf4e605eb3bbb60b1c475d44a7aecceea1d60/jackson-annotations-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.3/8d251b90c5358677e7d8161e0c2488e6f84f49da/jackson-module-parameter-names-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.15.3/2c928259effc818986c7e46c58de5dbfee6ae4ac/jackson-dataformat-yaml-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.3/60d600567c1862840397bf9ff5a92398edc5797b/jackson-core-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.3/80158cb020c7bd4e4ba94d8d752a65729dc943b2/jackson-datatype-jdk8-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.3/a734bc2c47a9453c4efa772461a3aeb273c010d9/jackson-databind-2.15.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/2.2/3af797a25458550a16bf89acc8e4ab2b7f2bfce0/snakeyaml-2.2.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.16/5c372739ee9409b47c474d8d47d276a7cd9bc2b/tomcat-embed-websocket-10.1.16.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.16/176162fb3998856a90436826034ffe5d25beaeb9/tomcat-embed-core-10.1.16.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.16/f057e54bfffe99df7f0d04cd4e688e55bf8a0da5/tomcat-embed-el-10.1.16.jar:/Users/test/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.12.0/4f4981faa7968441d0092107df9b750e057374af/micrometer-observation-1.12.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.mysema.commons/mysema-commons-lang/0.2.4/d09c8489d54251a6c22fbce804bdd4a070557317/mysema-commons-lang-0.2.4.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.1.1/69ebbf7bad707d34e81d00213c756bc6fcc31dd7/spring-jcl-6.1.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.atteo/evo-inflector/1.3/4cf8b5f363c60e63f8b7688ac053590460f2768e/evo-inflector-1.3.jar:/Users/test/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.12.0/2436654d439bd4ff6aad6419519357be8ba4f0d/micrometer-commons-1.12.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.4/cfd2bcf08782673ac370694fdf2cf76dbaa607ef/txw2-4.0.4.jar:/Users/test/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar:/Users/test/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.11/2f9f280219a9922a74200eaf7138c4c17fb87c0f/logback-core-1.4.11.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.21.1/74c65e87b9ce1694a01524e192d7be989ba70486/log4j-api-2.21.1.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-lang3/3.13.0/b7263237aa89c1f99b327197c41d0669707a462e/commons-lang3-3.13.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/io.swagger.core.v3/swagger-annotations-jakarta/2.2.9/63d247840bb786dd37edd9dd5f3916aba545b44/swagger-annotations-jakarta-2.2.9.jar:/Users/test/.gradle/caches/modules-2/files-2.1/jakarta.validation/jakarta.validation-api/3.0.2/92b6631659ba35ca09e44874d3eb936edfeee532/jakarta.validation-api-3.0.2.jar:/Users/test/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/2.5.0/57a64f421b472849c40e77d2e7cce3a141b41e99/json-smart-2.5.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/net.minidev/accessors-smart/2.5.0/aca011492dfe9c26f4e0659028a4fe0970829dd8/accessors-smart-2.5.0.jar:/Users/test/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/9.3/8e6300ef51c1d801a7ed62d07cd221aca3a90640/asm-9.3.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=20, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=KR, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Users/test/Library/Java/JavaVirtualMachines/corretto-20.0.2.1/Contents/Home/lib, sun.java.command=com.footbolic.api.FootbolicApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@59c862af, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/test, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2023-08-22, java.home=/Users/test/Library/Java/JavaVirtualMachines/corretto-20.0.2.1/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=FootbolicApplication, jakarta.persistence.validation.mode=NONE, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=20.0.2.1+10-FR, user.name=test, stdout.encoding=UTF-8, path.separator=:, os.version=14.1.1, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-20.0.2.10.1, java.vendor.url.bug=https://github.com/corretto/corretto-20/issues/, java.io.tmpdir=/var/folders/dx/j0dp8j157z1gmdj5__pb_xrm0000gn/T/, catalina.home=/private/var/folders/dx/j0dp8j157z1gmdj5__pb_xrm0000gn/T/tomcat.8080.2233670186420153267, java.version=20.0.2.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=23941, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/dx/j0dp8j157z1gmdj5__pb_xrm0000gn/T/tomcat.8080.2233670186420153267, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4bb9f7d4, native.encoding=UTF-8, java.library.path=/Users/test/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Amazon.com Inc., java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=20.0.2.1+10-FR, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=64.0}
DEBUG 24-01-14 23:44:43[main] [SessionFactoryImpl:241] - Session factory constructed with filter configurations : {}
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@53e166ad] under count; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3292eff7] under every; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@29ea5e0] under any; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@771cbd13] under sinh; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@229749f0] under cosh; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d57fb9e] under tanh; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c2e5e72] under pi; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e489ac1] under log; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : length -> character_length
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4fe4503a] under position; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@24c84e65] under overlay; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@23e86863] under trim; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5831989d] under cast; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@608f310a] under collate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1ce6a9bd] under extract; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3b42b729] under ifnull; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@25b20860] under pad; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1af82ba8] under str; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3a13f663] under format; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@59014efe] under timestampadd; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@983050b] under timestampdiff; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : dateadd -> timestampadd
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : datediff -> timestampdiff
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d15789f] under current_date; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5abb7a8f] under current_time; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6684589a] under current_timestamp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : current date -> current_date
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : current time -> current_time
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : current timestamp -> current_timestamp
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5621a671] under local_date; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2006fdaa] under local_time; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21688427] under local_datetime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@656c5818] under offset_datetime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : local date -> local_date
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : local time -> local_time
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : local datetime -> local_datetime
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : offset datetime -> offset_datetime
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e2578ea] under instant; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : current_instant -> instant
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5ea9373e] under sql; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e489ac1
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@774304ca] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@303fbc4] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : day -> dayofmonth
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cd90c36] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4fe4503a
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4ebed2b3] under trunc; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : truncate -> trunc
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11069eac] under bitand; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5909285b] under bitor; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2059f785] under bitxor; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18ca9277] under bitnot; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3d9c8c3c] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3a13f663
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2006fdaa
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@21688427
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dc73024] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c2e5e72
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42cd0fc6] under chr; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:307] - Registering alternate key : char -> chr
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e5864c2] under sysdate; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4ab90d01] under rank; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@771d4db] under dense_rank; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2d88c1bf] under percent_rank; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3636f2a7] under cume_dist; prior registration was null
DEBUG 24-01-14 23:44:43[main] [SqmFunctionRegistry:90] - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@57f725b8] under listagg; prior registration was null
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - abs(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double acos(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - adddate(DATE datetime, INTEGER days)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - addtime(TIME datetime, TIME time)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Boolean any(BOOLEAN arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer ascii(STRING arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double asin(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double atan(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double atan2(NUMERIC arg0, NUMERIC arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double avg(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - bit_and(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer bit_length(STRING_OR_CLOB arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - bit_or(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - bitand(arg0, arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - bitnot(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - bitor(arg0, arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - bitxor(arg0, arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - cast(arg as Type)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - ceiling(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Character char(INTEGER arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer character_length(STRING_OR_CLOB arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Character chr(INTEGER arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - coalesce(arg0[, arg1[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String collate(STRING string as COLLATION collation)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String concat(STRING string0[, STRING string1[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double cos(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double cosh(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double cot(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Long count([distinct ]{arg|*})
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer crc32(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double cume_dist([arg0[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date curdate()
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date current date
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Time current time
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp current timestamp
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date current_date
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Instant current_instant
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Time current_time
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp current_timestamp
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Time curtime()
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date date(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer datediff(DATE end, DATE start)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer day(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String dayname(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer dayofmonth(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer dayofweek(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer dayofyear(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double degrees(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Long dense_rank([arg0[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Boolean every(BOOLEAN arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double exp(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - extract(TEMPORAL_UNIT field from TEMPORAL arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - first_valueANY value
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - floor(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String format(TEMPORAL datetime as STRING pattern)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer hour(TIME arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - ifnull(arg0, arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Instant instant
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - lagANY value[, INTEGER offset[, ANY default]]
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date last_day(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - last_valueANY value
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - leadANY value[, INTEGER offset[, ANY default]]
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String left(STRING string, INTEGER length)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer length(STRING_OR_CLOB arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String listagg(STRING arg0, STRING arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double ln(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - LocalDate local date
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - LocalDateTime local datetime
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - LocalTime local time
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - LocalDate local_date
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - LocalDateTime local_datetime
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - LocalTime local_time
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp localtime
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp localtimestamp
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer locate(STRING pattern, STRING string[, INTEGER start])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double log(NUMERIC arg0[, NUMERIC arg1])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double log10(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double log2(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String lower(STRING string)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String lpad(string, length[, padding])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String ltrim(STRING string[, STRING characters])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date makedate(INTEGER year, INTEGER dayofyear)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - max(COMPARABLE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String md5(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer microsecond(TIME arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - min(COMPARABLE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer minute(TIME arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer mod(INTEGER arg0, INTEGER arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer month(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String monthname(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp now()
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - nth_valueANY value, INTEGER nth
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - nullif(arg0, arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer octet_length(STRING_OR_CLOB arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - OffsetDateTime offset datetime
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - OffsetDateTime offset_datetime
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double percent_rank([arg0[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double pi
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer position(STRING pattern in STRING string)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double power(NUMERIC arg0, NUMERIC arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer quarter(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double radians(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double rand([INTEGER seed])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Long rank([arg0[, ...]])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String repeat(STRING string, INTEGER times)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String replace(STRING string, STRING pattern, STRING replacement)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String reverse(STRING arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String right(STRING string, INTEGER length)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - round(NUMERIC number[, INTEGER places])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Long row_number()
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String rpad(string, length[, padding])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String rtrim(STRING string[, STRING characters])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer second(TIME arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String sha(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String sha1(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String sha2(arg0, arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer sign(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double sin(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double sinh(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String soundex(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String space(INTEGER arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Object sql
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double sqrt(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double stddev(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double stddev_pop(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double stddev_samp(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String str(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - subdate(DATE datetime, INTEGER days)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String substr(STRING string, INTEGER start[, INTEGER length])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - subtime(TIME datetime, TIME time)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - sum(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp sysdate()
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double tan(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double tanh(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String time(arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp timestamp(arg0[, arg1])
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - trunc( ... )
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - truncate( ... )
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - String upper(STRING string)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Date utc_date
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Time utc_time
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Timestamp utc_timestamp
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double var_pop(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double var_samp(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Double variance(NUMERIC arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer week(DATE arg)
DEBUG 24-01-14 23:44:43[main] [HQL_FUNCTIONS:100] - Integer year(DATE arg)
DEBUG 24-01-14 23:44:43[main] [cache:48] - Starting QueryInterpretationCache(2048)
DEBUG 24-01-14 23:44:43[main] [SessionFactoryServiceRegistryImpl:105] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
DEBUG 24-01-14 23:44:43[main] [EntityCopyObserverFactoryInitiator:39] - Configured EntityCopyObserver strategy: disallow
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.recommendation.entity.PostRecommendationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.recommendation.entity.PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.recommendation.entity.PostRecommendationEntity]: private accessor [createdAt]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.authorization.entity.AuthorizationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.authorization.entity.AuthorizationEntity]: private accessor [createMemberId]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.member.entity.MemberEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.member.entity.MemberEntity]: private accessor [createdAt]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.post.entity.PostEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.post.entity.PostEntity]: private accessor [announcementEndsAt]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.board.entity.BoardEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.board.entity.BoardEntity]: private accessor [createMemberId]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.common_code.entity.CommonCodeEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.common_code.entity.CommonCodeEntity]: private accessor [code]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.banner.entity.BannerEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.banner.entity.BannerEntity]: private accessor [createMemberId]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.notification.entity.NotificationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.notification.entity.NotificationEntity]: private accessor [content]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.role.entity.RoleEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.role.entity.RoleEntity]: private accessor [authorizations]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.reply.entity.ReplyEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.reply.entity.ReplyEntity]: private accessor [comment]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.comment.entity.CommentEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.comment.entity.CommentEntity]: private accessor [content]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.test.TestEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.test.TestEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.test.TestEntity]: private accessor [val1]
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.menu.entity.MenuEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.menu.entity.MenuEntity]: private accessor [createMemberId]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.recommendation.entity.CommentRecommendationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.recommendation.entity.CommentRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.recommendation.entity.CommentRecommendationEntity]: private accessor [comment]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:60] - Not known whether passed class name [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity] is safe
DEBUG 24-01-14 23:44:43[main] [ClassLoaderAccessImpl:62] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [BytecodeProviderImpl:235] - HHH000513: Unable to create the ReflectionOptimizer for [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity]: private accessor [createdAt]
INFO  24-01-14 23:44:43[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.comment.entity.CommentEntity.replies
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.comment.entity.CommentEntity.replies
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.comment.entity.CommentEntity.replies
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.board.entity.BoardEntity.posts
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.board.entity.BoardEntity.posts
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.board.entity.BoardEntity.posts
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.role.entity.RoleEntity.members
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.role.entity.RoleEntity.members
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.role.entity.RoleEntity.members
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.post.entity.PostEntity.comments
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.post.entity.PostEntity.comments
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.post.entity.PostEntity.comments
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.menu.entity.MenuEntity.menus
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.menu.entity.MenuEntity.menus
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.menu.entity.MenuEntity.menus
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.member.entity.MemberEntity.notifications
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.member.entity.MemberEntity.notifications
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.member.entity.MemberEntity.notifications
DEBUG 24-01-14 23:44:43[main] [mutation:448] - Skipping collection (re)creation - com.footbolic.api.role.entity.RoleEntity.authorizations
DEBUG 24-01-14 23:44:43[main] [mutation:484] - Skipping collection row deletions - com.footbolic.api.role.entity.RoleEntity.authorizations
DEBUG 24-01-14 23:44:43[main] [mutation:509] - Skipping collection removals - com.footbolic.api.role.entity.RoleEntity.authorizations
DEBUG 24-01-14 23:44:43[main] [creation:92] - Starting post-init callbacks
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.recommendation.entity.PostRecommendationEntity.post]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.recommendation.entity.PostRecommendationEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.authorization.entity.AuthorizationEntity.menu]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.authorization.entity.AuthorizationEntity.role]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.authorization.entity.AuthorizationEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.member.entity.MemberEntity.notifications#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.member.entity.MemberEntity.notifications)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.member.entity.MemberEntity.notifications) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.member.entity.MemberEntity.role]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.member.entity.MemberEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.post.entity.PostEntity.board]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.post.entity.PostEntity.comments#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.post.entity.PostEntity.comments)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.post.entity.PostEntity.comments) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.post.entity.PostEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.board.entity.BoardEntity.posts#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.board.entity.BoardEntity.posts)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.board.entity.BoardEntity.posts) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.board.entity.BoardEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.common_code.entity.CommonCodeEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.banner.entity.BannerEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.notification.entity.NotificationEntity.member]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.notification.entity.NotificationEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.role.entity.RoleEntity.authorizations#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.role.entity.RoleEntity.authorizations)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.role.entity.RoleEntity.authorizations) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.role.entity.RoleEntity.members#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.role.entity.RoleEntity.members)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.role.entity.RoleEntity.members) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.role.entity.RoleEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.reply.entity.ReplyEntity.comment]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.reply.entity.ReplyEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.comment.entity.CommentEntity.post]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.comment.entity.CommentEntity.replies#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.comment.entity.CommentEntity.replies)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.comment.entity.CommentEntity.replies) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.comment.entity.CommentEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.test.TestEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.menu.entity.MenuEntity.menus#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.menu.entity.MenuEntity.menus)#finishInitialization
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping(com.footbolic.api.menu.entity.MenuEntity.menus) - key descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.menu.entity.MenuEntity.parent]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.menu.entity.MenuEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.recommendation.entity.CommentRecommendationEntity.comment]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.recommendation.entity.CommentRecommendationEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.reply]
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : Entity(com.footbolic.api.recommendation.entity.ReplyRecommendationEntity) `staticFetchableList` generator
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.member.entity.MemberEntity.notifications#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.post.entity.PostEntity.comments#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.board.entity.BoardEntity.posts#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.role.entity.RoleEntity.authorizations#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.role.entity.RoleEntity.members#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.comment.entity.CommentEntity.replies#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [creation:242] - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.footbolic.api.menu.entity.MenuEntity.menus#{element}]) - element descriptor
DEBUG 24-01-14 23:44:43[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.recommendation.entity.PostRecommendationEntity
DEBUG 24-01-14 23:44:43[main] [AbstractEntityPersister:2989] -  Version select: select id from post_recommendation where id=?
DEBUG 24-01-14 23:44:43[main] [AbstractEntityPersister:393] -  Insert (0): insert into post_recommendation (created_at,member_id,post_id,updated_at,id) values (?,?,?,?,?)
DEBUG 24-01-14 23:44:43[main] [AbstractEntityPersister:393] -  Update (0): update post_recommendation set updated_at=? where id=?
DEBUG 24-01-14 23:44:43[main] [AbstractEntityPersister:393] -  Delete (0): delete from post_recommendation where id=?
DEBUG 24-01-14 23:44:43[main] [create:33] - Created new SQL alias : pre1_0
DEBUG 24-01-14 23:44:43[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.recommendation.entity.PostRecommendationEntity)] with identifierForTableGroup [com.footbolic.api.recommendation.entity.PostRecommendationEntity] for NavigablePath [com.footbolic.api.recommendation.entity.PostRecommendationEntity] 
DEBUG 24-01-14 23:44:43[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c751692] with identifierForTableGroup [com.footbolic.api.recommendation.entity.PostRecommendationEntity.post] for NavigablePath [com.footbolic.api.recommendation.entity.PostRecommendationEntity.post] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.recommendation.entity.PostRecommendationEntity]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.PostRecommendationEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.PostRecommendationEntity.memberId]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.recommendation.entity.PostRecommendationEntity.post]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.PostRecommendationEntity.postId]
 |  \-BasicFetch [com.footbolic.api.recommendation.entity.PostRecommendationEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (pre1 : com.footbolic.api.recommendation.entity.PostRecommendationEntity) {
          primaryTableReference : post_recommendation as pre1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : com.footbolic.api.recommendation.entity.PostRecommendationEntity.post) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.authorization.entity.AuthorizationEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from authorization where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into authorization (create_member_id,created_at,menu_id,role_id,title,update_member_id,updated_at,id) values (?,?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update authorization set menu_id=?,role_id=?,title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from authorization where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : ae1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.authorization.entity.AuthorizationEntity)] with identifierForTableGroup [com.footbolic.api.authorization.entity.AuthorizationEntity] for NavigablePath [com.footbolic.api.authorization.entity.AuthorizationEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@123426a9] with identifierForTableGroup [com.footbolic.api.authorization.entity.AuthorizationEntity.menu] for NavigablePath [com.footbolic.api.authorization.entity.AuthorizationEntity.menu] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@775a5a67] with identifierForTableGroup [com.footbolic.api.authorization.entity.AuthorizationEntity.role] for NavigablePath [com.footbolic.api.authorization.entity.AuthorizationEntity.role] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.authorization.entity.AuthorizationEntity]
 |  +-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.createdAt]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.authorization.entity.AuthorizationEntity.menu]
 |  +-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.menuId]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.authorization.entity.AuthorizationEntity.role]
 |  +-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.roleId]
 |  +-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.title]
 |  +-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.authorization.entity.AuthorizationEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ae1 : com.footbolic.api.authorization.entity.AuthorizationEntity) {
          primaryTableReference : authorization as ae1_0
          TableGroupJoins {
            left  join LazyTableGroup (m1 : com.footbolic.api.authorization.entity.AuthorizationEntity.menu) {
            }
            left  join LazyTableGroup (r1 : com.footbolic.api.authorization.entity.AuthorizationEntity.role) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.member.entity.MemberEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from member where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into member (created_at,full_name,nickname,refresh_token,role_id,updated_at,id) values (?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update member set full_name=?,nickname=?,refresh_token=?,role_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from member where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : me1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.member.entity.MemberEntity)] with identifierForTableGroup [com.footbolic.api.member.entity.MemberEntity] for NavigablePath [com.footbolic.api.member.entity.MemberEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c9aeec6] with identifierForTableGroup [com.footbolic.api.member.entity.MemberEntity.role] for NavigablePath [com.footbolic.api.member.entity.MemberEntity.role] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.member.entity.MemberEntity]
 |  +-BasicFetch [com.footbolic.api.member.entity.MemberEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.member.entity.MemberEntity.fullName]
 |  +-BasicFetch [com.footbolic.api.member.entity.MemberEntity.nickname]
 |  +-DelayedCollectionFetch [com.footbolic.api.member.entity.MemberEntity.notifications]
 |  +-BasicFetch [com.footbolic.api.member.entity.MemberEntity.refreshToken]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.member.entity.MemberEntity.role]
 |  +-BasicFetch [com.footbolic.api.member.entity.MemberEntity.roleId]
 |  \-BasicFetch [com.footbolic.api.member.entity.MemberEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (me1 : com.footbolic.api.member.entity.MemberEntity) {
          primaryTableReference : member as me1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : com.footbolic.api.member.entity.MemberEntity.role) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.post.entity.PostEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from post where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into post (announcement_ends_at,announcement_starts_at,board_id,content,create_member_id,created_at,is_announcement,is_secret,title,update_member_id,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update post set announcement_ends_at=?,announcement_starts_at=?,board_id=?,content=?,is_announcement=?,is_secret=?,title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from post where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : pe1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.post.entity.PostEntity)] with identifierForTableGroup [com.footbolic.api.post.entity.PostEntity] for NavigablePath [com.footbolic.api.post.entity.PostEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b286640] with identifierForTableGroup [com.footbolic.api.post.entity.PostEntity.board] for NavigablePath [com.footbolic.api.post.entity.PostEntity.board] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.post.entity.PostEntity]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.announcementEndsAt]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.announcementStartsAt]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.post.entity.PostEntity.board]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.boardId]
 |  +-DelayedCollectionFetch [com.footbolic.api.post.entity.PostEntity.comments]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.content]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.isAnnouncement]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.isSecret]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.title]
 |  +-BasicFetch [com.footbolic.api.post.entity.PostEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.post.entity.PostEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (pe1 : com.footbolic.api.post.entity.PostEntity) {
          primaryTableReference : post as pe1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : com.footbolic.api.post.entity.PostEntity.board) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.board.entity.BoardEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from board where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into board (create_member_id,created_at,is_announceable,is_commentable,is_recommendable,is_secretable,title,update_member_id,updated_at,id) values (?,?,?,?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update board set is_announceable=?,is_commentable=?,is_recommendable=?,is_secretable=?,title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from board where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : be1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.board.entity.BoardEntity)] with identifierForTableGroup [com.footbolic.api.board.entity.BoardEntity] for NavigablePath [com.footbolic.api.board.entity.BoardEntity] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.board.entity.BoardEntity]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.isAnnounceable]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.isCommentable]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.isRecommendable]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.isSecretable]
 |  +-DelayedCollectionFetch [com.footbolic.api.board.entity.BoardEntity.posts]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.title]
 |  +-BasicFetch [com.footbolic.api.board.entity.BoardEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.board.entity.BoardEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (be1 : com.footbolic.api.board.entity.BoardEntity) {
          primaryTableReference : board as be1_0
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.common_code.entity.CommonCodeEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from common_code where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into common_code (code,create_member_id,created_at,title,update_member_id,updated_at,id) values (?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update common_code set code=?,title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from common_code where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : cce1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.common_code.entity.CommonCodeEntity)] with identifierForTableGroup [com.footbolic.api.common_code.entity.CommonCodeEntity] for NavigablePath [com.footbolic.api.common_code.entity.CommonCodeEntity] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.common_code.entity.CommonCodeEntity]
 |  +-BasicFetch [com.footbolic.api.common_code.entity.CommonCodeEntity.code]
 |  +-BasicFetch [com.footbolic.api.common_code.entity.CommonCodeEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.common_code.entity.CommonCodeEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.common_code.entity.CommonCodeEntity.title]
 |  +-BasicFetch [com.footbolic.api.common_code.entity.CommonCodeEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.common_code.entity.CommonCodeEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cce1 : com.footbolic.api.common_code.entity.CommonCodeEntity) {
          primaryTableReference : common_code as cce1_0
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.banner.entity.BannerEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from banner where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into banner (create_member_id,created_at,ends_at,image_path,is_linked,is_mobile,is_time_limited,link_address,starts_at,update_member_id,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update banner set ends_at=?,image_path=?,is_linked=?,is_mobile=?,is_time_limited=?,link_address=?,starts_at=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from banner where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : be1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.banner.entity.BannerEntity)] with identifierForTableGroup [com.footbolic.api.banner.entity.BannerEntity] for NavigablePath [com.footbolic.api.banner.entity.BannerEntity] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.banner.entity.BannerEntity]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.endsAt]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.imagePath]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.isLinked]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.isMobile]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.isTimeLimited]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.linkAddress]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.startsAt]
 |  +-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.banner.entity.BannerEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (be1 : com.footbolic.api.banner.entity.BannerEntity) {
          primaryTableReference : banner as be1_0
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.notification.entity.NotificationEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from notification where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into notification (content,create_member_id,created_at,member_id,path,title,update_member_id,updated_at,id) values (?,?,?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update notification set content=?,member_id=?,path=?,title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from notification where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : ne1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.notification.entity.NotificationEntity)] with identifierForTableGroup [com.footbolic.api.notification.entity.NotificationEntity] for NavigablePath [com.footbolic.api.notification.entity.NotificationEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c468360] with identifierForTableGroup [com.footbolic.api.notification.entity.NotificationEntity.member] for NavigablePath [com.footbolic.api.notification.entity.NotificationEntity.member] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.notification.entity.NotificationEntity]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.content]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.createdAt]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.notification.entity.NotificationEntity.member]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.memberId]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.path]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.title]
 |  +-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.notification.entity.NotificationEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ne1 : com.footbolic.api.notification.entity.NotificationEntity) {
          primaryTableReference : notification as ne1_0
          TableGroupJoins {
            left  join LazyTableGroup (m1 : com.footbolic.api.notification.entity.NotificationEntity.member) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.role.entity.RoleEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from role where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into role (create_member_id,created_at,title,update_member_id,updated_at,id) values (?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update role set title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from role where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : re1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.role.entity.RoleEntity)] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity] for NavigablePath [com.footbolic.api.role.entity.RoleEntity] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.role.entity.RoleEntity]
 |  +-DelayedCollectionFetch [com.footbolic.api.role.entity.RoleEntity.authorizations]
 |  +-BasicFetch [com.footbolic.api.role.entity.RoleEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.role.entity.RoleEntity.createdAt]
 |  +-DelayedCollectionFetch [com.footbolic.api.role.entity.RoleEntity.members]
 |  +-BasicFetch [com.footbolic.api.role.entity.RoleEntity.title]
 |  +-BasicFetch [com.footbolic.api.role.entity.RoleEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.role.entity.RoleEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (re1 : com.footbolic.api.role.entity.RoleEntity) {
          primaryTableReference : role as re1_0
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.reply.entity.ReplyEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from reply where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into reply (comment_id,content,create_member_id,created_at,update_member_id,updated_at,id) values (?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update reply set comment_id=?,content=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from reply where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : re1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.reply.entity.ReplyEntity)] with identifierForTableGroup [com.footbolic.api.reply.entity.ReplyEntity] for NavigablePath [com.footbolic.api.reply.entity.ReplyEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30a4a111] with identifierForTableGroup [com.footbolic.api.reply.entity.ReplyEntity.comment] for NavigablePath [com.footbolic.api.reply.entity.ReplyEntity.comment] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.reply.entity.ReplyEntity]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.reply.entity.ReplyEntity.comment]
 |  +-BasicFetch [com.footbolic.api.reply.entity.ReplyEntity.commentId]
 |  +-BasicFetch [com.footbolic.api.reply.entity.ReplyEntity.content]
 |  +-BasicFetch [com.footbolic.api.reply.entity.ReplyEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.reply.entity.ReplyEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.reply.entity.ReplyEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.reply.entity.ReplyEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (re1 : com.footbolic.api.reply.entity.ReplyEntity) {
          primaryTableReference : reply as re1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : com.footbolic.api.reply.entity.ReplyEntity.comment) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.comment.entity.CommentEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from comment where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into comment (content,create_member_id,created_at,post_id,update_member_id,updated_at,id) values (?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update comment set content=?,post_id=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from comment where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : ce1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.comment.entity.CommentEntity)] with identifierForTableGroup [com.footbolic.api.comment.entity.CommentEntity] for NavigablePath [com.footbolic.api.comment.entity.CommentEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b518645] with identifierForTableGroup [com.footbolic.api.comment.entity.CommentEntity.post] for NavigablePath [com.footbolic.api.comment.entity.CommentEntity.post] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.comment.entity.CommentEntity]
 |  +-BasicFetch [com.footbolic.api.comment.entity.CommentEntity.content]
 |  +-BasicFetch [com.footbolic.api.comment.entity.CommentEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.comment.entity.CommentEntity.createdAt]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.comment.entity.CommentEntity.post]
 |  +-BasicFetch [com.footbolic.api.comment.entity.CommentEntity.postId]
 |  +-DelayedCollectionFetch [com.footbolic.api.comment.entity.CommentEntity.replies]
 |  +-BasicFetch [com.footbolic.api.comment.entity.CommentEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.comment.entity.CommentEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ce1 : com.footbolic.api.comment.entity.CommentEntity) {
          primaryTableReference : comment as ce1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : com.footbolic.api.comment.entity.CommentEntity.post) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.test.TestEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from test_entity where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into test_entity (val1,val2,id) values (?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update test_entity set val1=?,val2=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from test_entity where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : te1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.test.TestEntity)] with identifierForTableGroup [com.footbolic.api.test.TestEntity] for NavigablePath [com.footbolic.api.test.TestEntity] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.test.TestEntity]
 |  +-BasicFetch [com.footbolic.api.test.TestEntity.val1]
 |  \-BasicFetch [com.footbolic.api.test.TestEntity.val2]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (te1 : com.footbolic.api.test.TestEntity) {
          primaryTableReference : test_entity as te1_0
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.menu.entity.MenuEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from menu where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into menu (create_member_id,created_at,icon_code_id,parent_id,path,title,update_member_id,updated_at,id) values (?,?,?,?,?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update menu set icon_code_id=?,parent_id=?,path=?,title=?,update_member_id=?,updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from menu where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : me1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.menu.entity.MenuEntity)] with identifierForTableGroup [com.footbolic.api.menu.entity.MenuEntity] for NavigablePath [com.footbolic.api.menu.entity.MenuEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51bc649e] with identifierForTableGroup [com.footbolic.api.menu.entity.MenuEntity.parent] for NavigablePath [com.footbolic.api.menu.entity.MenuEntity.parent] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.menu.entity.MenuEntity]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.createMemberId]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.iconCodeId]
 |  +-DelayedCollectionFetch [com.footbolic.api.menu.entity.MenuEntity.menus]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.menu.entity.MenuEntity.parent]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.parentId]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.path]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.title]
 |  +-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.updateMemberId]
 |  \-BasicFetch [com.footbolic.api.menu.entity.MenuEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (me1 : com.footbolic.api.menu.entity.MenuEntity) {
          primaryTableReference : menu as me1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : com.footbolic.api.menu.entity.MenuEntity.parent) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.recommendation.entity.CommentRecommendationEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from comment_recommendation where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into comment_recommendation (comment_id,created_at,member_id,updated_at,id) values (?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update comment_recommendation set updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from comment_recommendation where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : cre1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.recommendation.entity.CommentRecommendationEntity)] with identifierForTableGroup [com.footbolic.api.recommendation.entity.CommentRecommendationEntity] for NavigablePath [com.footbolic.api.recommendation.entity.CommentRecommendationEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35e3f3b8] with identifierForTableGroup [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.comment] for NavigablePath [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.comment] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.recommendation.entity.CommentRecommendationEntity]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.comment]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.commentId]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.memberId]
 |  \-BasicFetch [com.footbolic.api.recommendation.entity.CommentRecommendationEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cre1 : com.footbolic.api.recommendation.entity.CommentRecommendationEntity) {
          primaryTableReference : comment_recommendation as cre1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : com.footbolic.api.recommendation.entity.CommentRecommendationEntity.comment) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2984] - Static SQL for entity: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:2989] -  Version select: select id from reply_recommendation where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Insert (0): insert into reply_recommendation (created_at,member_id,reply_id,updated_at,id) values (?,?,?,?,?)
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Update (0): update reply_recommendation set updated_at=? where id=?
DEBUG 24-01-14 23:44:44[main] [AbstractEntityPersister:393] -  Delete (0): delete from reply_recommendation where id=?
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : rre1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.recommendation.entity.ReplyRecommendationEntity)] with identifierForTableGroup [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity] for NavigablePath [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@127320df] with identifierForTableGroup [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.reply] for NavigablePath [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.reply] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-EntityResultImpl [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.createdAt]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.memberId]
 |  +-EntityDelayedFetchImpl [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.reply]
 |  +-BasicFetch [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.replyId]
 |  \-BasicFetch [com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.updatedAt]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (rre1 : com.footbolic.api.recommendation.entity.ReplyRecommendationEntity) {
          primaryTableReference : reply_recommendation as rre1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : com.footbolic.api.recommendation.entity.ReplyRecommendationEntity.reply) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : r1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@f4c3e9] with identifierForTableGroup [com.footbolic.api.comment.entity.CommentEntity.replies] for NavigablePath [com.footbolic.api.comment.entity.CommentEntity.replies] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.comment.entity.CommentEntity.replies.{element})] with identifierForTableGroup [com.footbolic.api.comment.entity.CommentEntity.replies.{element}] for NavigablePath [com.footbolic.api.comment.entity.CommentEntity.replies.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1cc42abe] with identifierForTableGroup [com.footbolic.api.comment.entity.CommentEntity.replies.{element}.comment] for NavigablePath [com.footbolic.api.comment.entity.CommentEntity.replies.{element}.comment] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.comment.entity.CommentEntity.replies]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : com.footbolic.api.comment.entity.CommentEntity.replies) {
          primaryTableReference : reply as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : com.footbolic.api.comment.entity.CommentEntity.replies.{element}.comment) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.comment.entity.CommentEntity.replies
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : p1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2afe825a] with identifierForTableGroup [com.footbolic.api.board.entity.BoardEntity.posts] for NavigablePath [com.footbolic.api.board.entity.BoardEntity.posts] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.board.entity.BoardEntity.posts.{element})] with identifierForTableGroup [com.footbolic.api.board.entity.BoardEntity.posts.{element}] for NavigablePath [com.footbolic.api.board.entity.BoardEntity.posts.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49c6ee4a] with identifierForTableGroup [com.footbolic.api.board.entity.BoardEntity.posts.{element}.board] for NavigablePath [com.footbolic.api.board.entity.BoardEntity.posts.{element}.board] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.board.entity.BoardEntity.posts]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : com.footbolic.api.board.entity.BoardEntity.posts) {
          primaryTableReference : post as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (b1 : com.footbolic.api.board.entity.BoardEntity.posts.{element}.board) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.board.entity.BoardEntity.posts
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : m1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4549d616] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.members] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.members] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.role.entity.RoleEntity.members.{element})] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.members.{element}] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.members.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1bfb60b7] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.members.{element}.role] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.members.{element}.role] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.role.entity.RoleEntity.members]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (m1 : com.footbolic.api.role.entity.RoleEntity.members) {
          primaryTableReference : member as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : com.footbolic.api.role.entity.RoleEntity.members.{element}.role) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.role.entity.RoleEntity.members
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : c1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@9a74a93] with identifierForTableGroup [com.footbolic.api.post.entity.PostEntity.comments] for NavigablePath [com.footbolic.api.post.entity.PostEntity.comments] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.post.entity.PostEntity.comments.{element})] with identifierForTableGroup [com.footbolic.api.post.entity.PostEntity.comments.{element}] for NavigablePath [com.footbolic.api.post.entity.PostEntity.comments.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@255d4d7] with identifierForTableGroup [com.footbolic.api.post.entity.PostEntity.comments.{element}.post] for NavigablePath [com.footbolic.api.post.entity.PostEntity.comments.{element}.post] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.post.entity.PostEntity.comments]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (c1 : com.footbolic.api.post.entity.PostEntity.comments) {
          primaryTableReference : comment as c1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : com.footbolic.api.post.entity.PostEntity.comments.{element}.post) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.post.entity.PostEntity.comments
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : m1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2cfd9b0a] with identifierForTableGroup [com.footbolic.api.menu.entity.MenuEntity.menus] for NavigablePath [com.footbolic.api.menu.entity.MenuEntity.menus] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.menu.entity.MenuEntity.menus.{element})] with identifierForTableGroup [com.footbolic.api.menu.entity.MenuEntity.menus.{element}] for NavigablePath [com.footbolic.api.menu.entity.MenuEntity.menus.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f3dafd4] with identifierForTableGroup [com.footbolic.api.menu.entity.MenuEntity.menus.{element}.parent] for NavigablePath [com.footbolic.api.menu.entity.MenuEntity.menus.{element}.parent] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.menu.entity.MenuEntity.menus]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (m1 : com.footbolic.api.menu.entity.MenuEntity.menus) {
          primaryTableReference : menu as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : com.footbolic.api.menu.entity.MenuEntity.menus.{element}.parent) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.menu.entity.MenuEntity.menus
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : n1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2e03bb74] with identifierForTableGroup [com.footbolic.api.member.entity.MemberEntity.notifications] for NavigablePath [com.footbolic.api.member.entity.MemberEntity.notifications] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.member.entity.MemberEntity.notifications.{element})] with identifierForTableGroup [com.footbolic.api.member.entity.MemberEntity.notifications.{element}] for NavigablePath [com.footbolic.api.member.entity.MemberEntity.notifications.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e664075] with identifierForTableGroup [com.footbolic.api.member.entity.MemberEntity.notifications.{element}.member] for NavigablePath [com.footbolic.api.member.entity.MemberEntity.notifications.{element}.member] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.member.entity.MemberEntity.notifications]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (n1 : com.footbolic.api.member.entity.MemberEntity.notifications) {
          primaryTableReference : notification as n1_0
          TableGroupJoins {
            left  join LazyTableGroup (m1 : com.footbolic.api.member.entity.MemberEntity.notifications.{element}.member) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.member.entity.MemberEntity.notifications
DEBUG 24-01-14 23:44:44[main] [create:33] - Created new SQL alias : a1_0
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3e0b1f03] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.authorizations] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.authorizations] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [StandardTableGroup(com.footbolic.api.role.entity.RoleEntity.authorizations.{element})] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.authorizations.{element}] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.authorizations.{element}] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d60cbad] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.authorizations.{element}.menu] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.authorizations.{element}.menu] 
DEBUG 24-01-14 23:44:44[main] [create:98] - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51d9479c] with identifierForTableGroup [com.footbolic.api.role.entity.RoleEntity.authorizations.{element}.role] for NavigablePath [com.footbolic.api.role.entity.RoleEntity.authorizations.{element}.role] 
DEBUG 24-01-14 23:44:44[main] [AST:67] - DomainResult Graph:
 \-CollectionDomainResult [com.footbolic.api.role.entity.RoleEntity.authorizations]

DEBUG 24-01-14 23:44:44[main] [tree:46] - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (a1 : com.footbolic.api.role.entity.RoleEntity.authorizations) {
          primaryTableReference : authorization as a1_0
          TableGroupJoins {
            left  join LazyTableGroup (m1 : com.footbolic.api.role.entity.RoleEntity.authorizations.{element}.menu) {
            }
            left  join LazyTableGroup (r1 : com.footbolic.api.role.entity.RoleEntity.authorizations.{element}.role) {
            }
          }
        }
      }
    }

DEBUG 24-01-14 23:44:44[main] [mutation:649] - Static SQL for collection: com.footbolic.api.role.entity.RoleEntity.authorizations
INFO  24-01-14 23:44:44[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:44:44[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@698ac187] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4806fbf7]
DEBUG 24-01-14 23:44:44[main] [NamedObjectRepository:243] - Checking 0 named HQL queries
DEBUG 24-01-14 23:44:44[main] [NamedObjectRepository:267] - Checking 0 named SQL queries
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : authorization
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : banner
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : board
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : comment
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : comment_recommendation
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : common_code
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : member
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : menu
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : notification
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : post
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : post_recommendation
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : reply
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : reply_recommendation
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : role
DEBUG 24-01-14 23:44:44[main] [Table:107] - No alter strings for table : test_entity
DEBUG 24-01-14 23:44:44[main] [SessionFactoryRegistry:52] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7d44eab
DEBUG 24-01-14 23:44:44[main] [SessionFactoryRegistry:74] - Registering SessionFactory: 9150468f-eb2f-45b6-93d7-8b65da71c7f8 (<unnamed>)
DEBUG 24-01-14 23:44:44[main] [SessionFactoryRegistry:81] - Not binding SessionFactory to JNDI, no JNDI name configured
TRACE 24-01-14 23:44:44[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4806fbf7] for TypeConfiguration
DEBUG 24-01-14 23:44:44[main] [SessionFactoryImpl:314] - Instantiated SessionFactory
INFO  24-01-14 23:44:44[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'footbolicApplication'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'queryDslConfig'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerConfig'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'menuController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'menuServiceImpl'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'menuRepository'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpa.named-queries#0'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpa.MenuRepository.fragments#0'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'menuRepositoryCustomImplFragment'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'menuRepositoryCustomImpl'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaQueryFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'menuRepositoryCustomImpl' via constructor to bean named 'jpaQueryFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaSharedEM_entityManagerFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaMappingContext'
DEBUG 24-01-14 23:44:44[main] [JpaMetamodelMappingContextFactoryBean:65] - Initializing JpaMetamodelMappingContext…
DEBUG 24-01-14 23:44:44[main] [JpaMetamodelMappingContextFactoryBean:72] - Finished initializing JpaMetamodelMappingContext
DEBUG 24-01-14 23:44:44[main] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 24-01-14 23:44:44[main] [StatisticsInitiator:87] - Statistics initialized [enabled=false]
DEBUG 24-01-14 23:44:44[main] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 24-01-14 23:44:44[main] [RepositoryFactorySupport:272] - Initializing repository instance for com.footbolic.api.menu.repository.MenuRepository…
DEBUG 24-01-14 23:44:44[main] [SharedEntityManagerCreator$SharedEntityManagerInvocationHandler:302] - Creating new EntityManager for shared EntityManager invocation
DEBUG 24-01-14 23:44:44[main] [RepositoryFactorySupport:369] - Finished creation of repository instance for com.footbolic.api.menu.repository.MenuRepository.
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'menuServiceImpl' via constructor to bean named 'menuRepository'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'menuController' via constructor to bean named 'menuServiceImpl'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'testController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openAPI'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'taskExecutorBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'error'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'beanNameViewResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'conventionErrorViewResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'errorAttributes'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'basicErrorController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerWebMvcConfigurer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.webmvc.ui.SwaggerConfig'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.properties.SwaggerUiConfigParameters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.properties.SwaggerUiConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springdoc.core.properties.SwaggerUiConfigParameters' via constructor to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'indexPageTransformer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.properties.SwaggerUiOAuthProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerWelcome'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springWebProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigParameters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'springWebProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'objectMapperProvider' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiOAuthProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigParameters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'swaggerWelcome'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerResourceResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerResourceResolver' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWebMvcConfigurer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigParameters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWebMvcConfigurer' via factory method to bean named 'indexPageTransformer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerWebMvcConfigurer' via factory method to bean named 'swaggerResourceResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
WARN  24-01-14 23:44:44[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'hypermediaWebMvcConfigurer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.hateoas.config.WebMvcHateoasConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'hypermediaWebMvcConverters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.hateoas.config.HateoasConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean '_relProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'relProviderPluginRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'relProviderPluginRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name '_relProvider' via factory method to bean named 'relProviderPluginRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'messageResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration' via constructor to bean named '_relProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration' via constructor to bean named 'messageResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration' via constructor to bean named '_relProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration' via constructor to bean named 'messageResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'hypermediaWebMvcConverters' via factory method to bean named 'org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'hypermediaWebMvcConverters' via factory method to bean named 'org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'applicationJsonHalConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonObjectMapper'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterNamesModule'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonMixinModule'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonComponentModule'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonGeoModule'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'hypermediaWebMvcConfigurer' via factory method to bean named 'hypermediaWebMvcConverters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.web.config.QuerydslWebConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonSchemaConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'associationLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springBootRepositoryRestConfigurer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springBootRepositoryRestConfigurer' via factory method to bean named 'spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceMappings' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceMappings' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceMappings' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'associationLinks' via factory method to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'associationLinks' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryInvokerFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'associationLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'repositoryInvokerFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jsonSchemaConverter' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'linkCollector'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'selfLinkProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'entityLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'backendIdConverterRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'backendIdConverterRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityLinks' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'selfLinkProvider' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'selfLinkProvider' via factory method to bean named 'entityLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'localeResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'themeResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'flashMapManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcValidator'
DEBUG 24-01-14 23:44:44[main] [OptionalValidatorFactoryBean:42] - Failed to set up a Bean Validation provider
jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
	at jakarta.validation.Validation$GenericBootstrapImpl.configure(Validation.java:291)
	at org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet(LocalValidatorFactoryBean.java:270)
	at org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean.afterPropertiesSet(OptionalValidatorFactoryBean.java:39)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.afterPropertiesSet(ValidatorAdapter.java:85)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:946)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.footbolic.api.FootbolicApplication.main(FootbolicApplication.java:10)
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	c.f.a.m.c.MenuController:
	{POST [/menu]}: createMenu(MenuDto)
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	c.f.a.t.testController:
	{GET [/test]}: test(String,int)
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.w.a.OpenApiWebMvcResource:
	{GET [/v3/api-docs], produces [application/json]}: openapiJson(HttpServletRequest,String,Locale)
	{GET [/v3/api-docs.yaml], produces [application/vnd.oai.openapi]}: openapiYaml(HttpServletRequest,String,Locale)
DEBUG 24-01-14 23:44:44[main] [PropertySourcesPropertyResolver:115] - Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
DEBUG 24-01-14 23:44:44[main] [PropertySourcesPropertyResolver:115] - Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.w.u.SwaggerWelcomeWebMvc:
	{GET [/api-docs/]}: redirectToUi(HttpServletRequest)
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.w.u.SwaggerConfigResource:
	{GET [/v3/api-docs/swagger-config], produces [application/json]}: openapiJson(HttpServletRequest)
DEBUG 24-01-14 23:44:44[main] [RequestMappingHandlerMapping:366] - 8 mappings in 'requestMappingHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcPatternParser'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcUrlPathHelper'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcPathMatcher'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'beanNameHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [Mappings:86] - 'beanNameHandlerMapping' {}
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'routerFunctionMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'messageConverters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'stringHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jacksonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jacksonHttpMessageConverter' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'linkCollector'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'selfLinkProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linkCollector' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linkCollector' via factory method to bean named 'selfLinkProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linkCollector' via factory method to bean named 'associationLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'excerptProjector'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'excerptProjector' via factory method to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'representationModelProcessorInvoker'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'profileResourceProcessor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'profileResourceProcessor' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'representationModelProcessorInvoker' via factory method to bean named 'profileResourceProcessor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'halJacksonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'halJacksonHttpMessageConverter' via factory method to bean named 'linkCollector'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'halJacksonHttpMessageConverter' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'halFormsJacksonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'halFormsJacksonHttpMessageConverter' via factory method to bean named 'linkCollector'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'uriListHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'alpsJsonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'alpsConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'enumTranslator'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'enumTranslator' via factory method to bean named 'messageResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'entityLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'enumTranslator'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'associationLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsConverter' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'alpsJsonHttpMessageConverter' via factory method to bean named 'alpsConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'resourceHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
DEBUG 24-01-14 23:44:44[main] [Mappings:176] - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /api-docs/swagger-ui*/*swagger-initializer.js=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /api-docs/swagger-ui*/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]}
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'querydslPredicateArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'querydslBindingsFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'sortResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pageableResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pagedResourcesAssemblerArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'slicedResourcesAssemblerArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'applicationTaskExecutor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
DEBUG 24-01-14 23:44:44[main] [ThreadPoolTaskExecutor:252] - Initializing ExecutorService 'applicationTaskExecutor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryRestExceptionHandler'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice' via constructor to bean named 'org.springdoc.core.configuration.SpringDocConfiguration'
DEBUG 24-01-14 23:44:44[main] [RequestMappingHandlerAdapter:633] - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'handlerFunctionAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'handlerExceptionResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 24-01-14 23:44:44[main] [ExceptionHandlerExceptionResolver:305] - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'persistentEntityArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultMessageConverters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'jacksonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'halJacksonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'halFormsJacksonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'alpsJsonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'uriListHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultMessageConverters' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repoRequestArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'resourceMetadataHandlerMethodArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'baseUri'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'baseUri' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceMetadataHandlerMethodArgumentResolver' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceMetadataHandlerMethodArgumentResolver' via factory method to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'resourceMetadataHandlerMethodArgumentResolver' via factory method to bean named 'baseUri'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repoRequestArgumentResolver' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repoRequestArgumentResolver' via factory method to bean named 'resourceMetadataHandlerMethodArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repoRequestArgumentResolver' via factory method to bean named 'repositoryInvokerFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'backendIdHandlerMethodArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'backendIdHandlerMethodArgumentResolver' via factory method to bean named 'backendIdConverterRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'backendIdHandlerMethodArgumentResolver' via factory method to bean named 'resourceMetadataHandlerMethodArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'backendIdHandlerMethodArgumentResolver' via factory method to bean named 'baseUri'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'defaultMessageConverters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'repoRequestArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'associationLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'backendIdHandlerMethodArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'persistentEntityArgumentResolver' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'persistentEntityResourceAssemblerArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'representationModelAssemblersArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pagedResourcesAssembler'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'slicedResourcesAssembler'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'representationModelAssemblersArgumentResolver' via factory method to bean named 'pagedResourcesAssembler'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'representationModelAssemblersArgumentResolver' via factory method to bean named 'slicedResourcesAssembler'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'representationModelAssemblersArgumentResolver' via factory method to bean named 'persistentEntityResourceAssemblerArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'eTagArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [ExceptionHandlerExceptionResolver:305] - ControllerAdvice beans: 2 @ExceptionHandler, 0 ResponseBodyAdvice
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'mvcViewResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewNameTranslator'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultViewResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'viewResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$SpringDocRepositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryRestConfigurationProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springDataWebPropertiesProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webConversionServiceProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'localSpringDocParameterNameDiscoverer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'additionalModelsConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'additionalModelsConverter' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'fileSupportConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'fileSupportConverter' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'responseSupportConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'responseSupportConverter' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'schemaPropertyDeprecatingConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'polymorphicModelConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'polymorphicModelConverter' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openAPIBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'securityParser'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'propertyResolverUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'propertyResolverUtils' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e22550a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'propertyResolverUtils' via factory method to bean named 'messageSource'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'propertyResolverUtils' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'securityParser' via factory method to bean named 'propertyResolverUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openAPIBuilder' via factory method to bean named 'securityParser'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openAPIBuilder' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openAPIBuilder' via factory method to bean named 'propertyResolverUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'modelConverterRegistrar'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'collectionModelContentConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocHateoasConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'halProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocDataRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'halProvider' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'collectionModelContentConverter' via factory method to bean named 'halProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'collectionModelContentConverter' via factory method to bean named '_relProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'pageableOpenAPIConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocPageableConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'pageableOpenAPIConverter' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'sortOpenAPIConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocSortConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'sortOpenAPIConverter' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'operationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'parameterBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'delegatingMethodParameterCustomizer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'parameterBuilder' via factory method to bean named 'propertyResolverUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'parameterBuilder' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestBodyBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestBodyBuilder' via factory method to bean named 'parameterBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'parameterBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'requestBodyBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'securityParser'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'propertyResolverUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'genericReturnTypeParser'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springDocProviders'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springRepositoryRestResourceProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocDataRestConfiguration$SpringRepositoryRestResourceProviderConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataRestRouterOperationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataRestOperationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataRestRequestBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'requestBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'parameterBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'requestBodyBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'operationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'localSpringDocParameterNameDiscoverer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springDocDataRestUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springDocDataRestUtils' via factory method to bean named '_relProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springDocDataRestUtils' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRequestBuilder' via factory method to bean named 'localSpringDocParameterNameDiscoverer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRequestBuilder' via factory method to bean named 'parameterBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRequestBuilder' via factory method to bean named 'requestBodyBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRequestBuilder' via factory method to bean named 'requestBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRequestBuilder' via factory method to bean named 'springDocDataRestUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataRestTagsBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestTagsBuilder' via factory method to bean named 'openAPIBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'dataRestResponseBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'responseBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'operationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'genericReturnTypeParser'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'propertyResolverUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestResponseBuilder' via factory method to bean named 'responseBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestResponseBuilder' via factory method to bean named 'springDocDataRestUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestOperationBuilder' via factory method to bean named 'dataRestRequestBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestOperationBuilder' via factory method to bean named 'dataRestTagsBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestOperationBuilder' via factory method to bean named 'dataRestResponseBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestOperationBuilder' via factory method to bean named 'operationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRouterOperationBuilder' via factory method to bean named 'dataRestOperationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRouterOperationBuilder' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRouterOperationBuilder' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'dataRestRouterOperationBuilder' via factory method to bean named 'halProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'associationLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'dataRestRouterOperationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'jacksonObjectMapper'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springRepositoryRestResourceProvider' via factory method to bean named 'springDocDataRestUtils'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'routerFunctionProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'springDocProviders' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'springDocCustomizers'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'linksSchemaCustomizer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linksSchemaCustomizer' via factory method to bean named 'halProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linksSchemaCustomizer' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linksSchemaCustomizer' via factory method to bean named 'objectMapperProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'queryDslQuerydslPredicateOperationCustomizer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocDataRestConfiguration$QuerydslProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springdoc.core.configuration.SpringDocDataRestConfiguration$QuerydslProvider' via constructor to bean named 'org.springdoc.core.configuration.SpringDocDataRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocUIConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'openApiResource'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'requestBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'responseBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'operationBuilder'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'springDocProviders'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'springDocCustomizers'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'swaggerConfigResource'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'swaggerConfigResource' via factory method to bean named 'swaggerWelcome'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'applicationAvailability'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionExecutionListeners'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionManager'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'lifecycleProcessor'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor#0'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'halLinkDisocoverer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'halFormsLinkDiscoverer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'halFormsTemplatePropertyWriter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultRelProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'annotationRelProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'linkDiscoverers'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'linkDiscovererRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'linkDiscoverers' via factory method to bean named 'linkDiscovererRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.hateoas.config.WebMvcEntityLinksConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcEntityLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'webMvcLinkBuilderFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'entityLinksPluginRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'entityLinksPluginRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'delegatingEntityLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'delegatingEntityLinks' via factory method to bean named 'entityLinksPluginRegistry'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.hateoas.config.RestTemplateHateoasConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.data.rest.webmvc.RestControllerConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.data.rest.webmvc.RestControllerConfiguration' via constructor to bean named 'entityLinks'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryEntityController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'httpHeadersPreparer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'auditableBeanWrapperFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'auditableBeanWrapperFactory' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'httpHeadersPreparer' via factory method to bean named 'auditableBeanWrapperFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryEntityController' via factory method to bean named 'httpHeadersPreparer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryPropertyReferenceController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryPropertyReferenceController' via factory method to bean named 'repositoryInvokerFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositorySearchController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositorySearchController' via factory method to bean named 'httpHeadersPreparer'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositorySchemaController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jsonSchemaConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositorySchemaController' via factory method to bean named 'jsonSchemaConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'alpsController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'profileController'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryRelProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'defaultConversionService'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultConversionService' via factory method to bean named 'persistentEntities'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'defaultConversionService' via factory method to bean named 'repositoryInvokerFactory'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'validatingRepositoryEventListener'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jpaHelper'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'metadataConfiguration'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'repositoryExporterHandlerAdapter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'defaultMessageConverters'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'alpsJsonHttpMessageConverter'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'selfLinkProvider'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'persistentEntityArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'persistentEntityResourceAssemblerArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'repoRequestArgumentResolver'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'repositoryExporterHandlerAdapter' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [RepositoryRestHandlerAdapter:633] - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 0 RequestBodyAdvice, 2 ResponseBodyAdvice
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'restHandlerMapping'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'restHandlerMapping' via factory method to bean named 'repositories'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'restHandlerMapping' via factory method to bean named 'resourceMappings'
DEBUG 24-01-14 23:44:44[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'restHandlerMapping' via factory method to bean named 'repositoryRestConfiguration'
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,RepresentationModelAssemblers)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,RepresentationModelAssemblers)
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,RepresentationModelAssemblers)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,RepresentationModelAssemblers)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,RepresentationModelAssemblers)
DEBUG 24-01-14 23:44:44[main] [Mappings:294] - 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,HttpHeaders,RepresentationModelAssemblers)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,RepresentationModelAssemblers)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
DEBUG 24-01-14 23:44:45[main] [RepositoryRestHandlerMapping:366] - 27 mappings in org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping
DEBUG 24-01-14 23:44:45[main] [Mappings:294] - 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
DEBUG 24-01-14 23:44:45[main] [Mappings:294] - 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
DEBUG 24-01-14 23:44:45[main] [Mappings:294] - 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
DEBUG 24-01-14 23:44:45[main] [BasePathAwareHandlerMapping:366] - 5 mappings in org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'offsetResolver'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcTemplate'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'jdbcClient'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'taskSchedulerBuilder'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'transactionTemplate'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'restClientSsl'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:952] - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'restClientBuilderConfigurer'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
DEBUG 24-01-14 23:44:45[main] [DefaultListableBeanFactory:225] - Creating shared instance of singleton bean 'multipartResolver'
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:464] - Starting beans in phase -2147483647
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:290] - Successfully started bean 'springBootLoggingLifecycle'
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:464] - Starting beans in phase 2147481599
INFO  24-01-14 23:44:45[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:44:45[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:290] - Successfully started bean 'webServerStartStop'
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:464] - Starting beans in phase 2147482623
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:290] - Successfully started bean 'webServerGracefulShutdown'
DEBUG 24-01-14 23:44:45[main] [DefaultLifecycleProcessor:464] - Starting beans in phase 2147483647
DEBUG 24-01-14 23:44:45[main] [ConditionEvaluationReportLogger:72] - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.hateoas.EntityModel', 'org.springframework.web.bind.annotation.RequestMapping', 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter', 'org.springframework.plugin.core.Plugin' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   HypermediaAutoConfiguration#applicationJsonHalConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.hateoas.use-hal-as-default-json-media-type) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.hateoas.mediatype.hal.HalConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringDocConfigProperties matched:
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration#fileSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#objectMapperProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#openAPIBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OpenAPIService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#operationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#parameterBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericParameterService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#polymorphicModelConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#requestBodyBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.RequestBodyService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#responseSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#schemaPropertyDeprecatingConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#securityParser matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.SecurityService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.SpringDocCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocProviders matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDocProviders; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration#repositoryRestConfigurationProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.RepositoryRestConfigurationProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.WebConversionServiceConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService' (OnClassCondition)

   SpringDocDataRestConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-data-rest:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocDataRestConfiguration#halProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.DataRestHalProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.QuerydslProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.data.querydsl.binding.QuerydslBindingsFactory' (OnClassCondition)

   SpringDocDataRestConfiguration.QuerydslProvider#queryDslQuerydslPredicateOperationCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping' (OnClassCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#dataRestOperationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.data.DataRestOperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#dataRestRequestBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.data.DataRestRequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#dataRestResponseBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.data.DataRestResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#dataRestRouterOperationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.data.DataRestRouterOperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#dataRestTagsBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.data.DataRestTagsService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#springDocDataRestUtils matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.utils.SpringDocDataRestUtils; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocDataRestConfiguration.SpringRepositoryRestResourceProviderConfiguration#springRepositoryRestResourceProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringRepositoryRestResourceProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocHateoasConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.hateoas.server.LinkRelationProvider' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-hateoas:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocHateoasConfiguration#collectionModelContentConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.CollectionModelContentConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocHateoasConfiguration#linksSchemaCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.GlobalOpenApiCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocPageableConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Pageable' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocPageableConfiguration#delegatingMethodParameterCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocPageableConfiguration#pageableOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.pageable-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PageableOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocSortConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Sort' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocSortConfiguration#sortOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.sort-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SortOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocUIConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration#openApiResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#requestBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.service.RequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#responseBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#springWebProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction' (OnClassCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerConfig#indexPageTransformer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerConfigResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerResourceResolver matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerResourceResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWebMvcConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWelcome matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerUiConfigParameters matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiConfigProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiOAuthProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration.HypermediaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.hateoas.client.LinkDiscoverers; SearchStrategy: all) found beans of type 'org.springframework.hateoas.client.LinkDiscoverers' linkDiscoverers (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MultipleOpenApiSupportConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (MultipleOpenApiSupportCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)
         - Ancestor org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) found beans of type 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' pageableResolver (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   SpringDocConfiguration#propertiesResolverForSchema:
      Did not match:
         - @ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties' (OnPropertyCondition)

   SpringDocConfiguration#propertyCustomizingConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer (OnBeanCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled'; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (CacheOrGroupedOpenApiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor2:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration.SpringDocActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   SpringDocFunctionCatalogConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer' (OnClassCondition)

   SpringDocGroovyConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.lang.MetaClass' (OnClassCondition)

   SpringDocHateoasConfiguration#hateoasHalProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.HateoasHalProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.HateoasHalProvider' halProvider (OnBeanCondition)

   SpringDocJacksonKotlinModuleConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.module.kotlin.KotlinModule' (OnClassCondition)

   SpringDocJavadocConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.therapi.runtimejavadoc.CommentFormatter' (OnClassCondition)

   SpringDocKotlinConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'kotlin.coroutines.Continuation' (OnClassCondition)

   SpringDocKotlinxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'kotlinx.coroutines.flow.Flow' (OnClassCondition)

   SpringDocSecurityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.SecurityFilterChain' (OnClassCondition)

   SpringDocSortConfiguration#delegatingMethodParameterCustomizer:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) found beans of type 'org.springdoc.core.customizers.DelegatingMethodParameterCustomizer' delegatingMethodParameterCustomizer (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   SwaggerConfig#springWebProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider (OnBeanCondition)

   SwaggerConfig#swaggerUiConfigParameters:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.properties.SwaggerUiConfigParameters; SearchStrategy: all) found beans of type 'org.springdoc.core.properties.SwaggerUiConfigParameters' org.springdoc.core.properties.SwaggerUiConfigParameters (OnBeanCondition)

   SwaggerConfig#swaggerUiHome:
      Did not match:
         - @ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path' (OnPropertyCondition)

   SwaggerConfig.SwaggerActuatorWelcomeConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnResource did not find resource 'classpath:META-INF/services/jakarta.validation.spi.ValidationProvider' (OnResourceCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



INFO  24-01-14 23:44:45[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.754 seconds (process running for 3.978)
DEBUG 24-01-14 23:44:45[main] [ApplicationAvailabilityBean:77] - Application availability state LivenessState changed to CORRECT
DEBUG 24-01-14 23:44:45[main] [ApplicationAvailabilityBean:77] - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:533] - Detected StandardServletMultipartResolver
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:557] - Detected AcceptHeaderLocaleResolver
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:583] - Detected FixedThemeResolver
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:733] - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4446e1d9
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:797] - Detected org.springframework.web.servlet.support.SessionFlashMapManager@74471600
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:549] - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 2 ms
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:120] - POST "/menu", parameters={}
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [RequestMappingHandlerMapping:531] - Mapped to com.footbolic.api.menu.controller.MenuController#createMenu(MenuDto)
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [RequestResponseBodyMethodProcessor:120] - Read "application/json;charset=UTF-8" to [MenuDto(id=null, parentId=null, parent=null, menus=null, title=test menu, path=/test/menu, iconCodeI (truncated)...]
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [MenuController:33] - here1
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [MenuController:34] - title : test menu
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:45:01[http-nio-8080-exec-1] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(925390582<open>)] for JPA transaction
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [TransactionImpl:53] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [TransactionImpl:81] - begin
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75677936]
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [PersistenceUnitUtilImpl:86] - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JdbcResourceLocalTransactionCoordinatorImpl:310] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:466)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:772)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(925390582<open>)]
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [TransactionImpl:139] - rolling back
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:1109] - Failed to complete request: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence
ERROR 24-01-14 23:45:01[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:17)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [DispatcherServlet:120] - "ERROR" dispatch for POST "/error", parameters={}
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [RequestMappingHandlerMapping:531] - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [OpenEntityManagerInViewInterceptor:86] - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [HttpEntityMethodProcessor:275] - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
DEBUG 24-01-14 23:45:01[http-nio-8080-exec-1] [HttpEntityMethodProcessor:120] - Writing [{timestamp=Sun Jan 14 23:45:01 KST 2024, status=500, error=Internal Server Error, path=/menu}]
DEBUG 24-01-14 23:45:02[http-nio-8080-exec-1] [OpenEntityManagerInViewInterceptor:111] - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
DEBUG 24-01-14 23:45:02[http-nio-8080-exec-1] [DispatcherServlet:1135] - Exiting from "ERROR" dispatch, status 500
DEBUG 24-01-14 23:45:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:45:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:45:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:45:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:46:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:46:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:46:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:46:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:47:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:47:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:47:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:47:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:48:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:48:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:48:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:48:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:49:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:49:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:49:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:49:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:50:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:50:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:50:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:50:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:51:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:51:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:51:43[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:51:43[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:52:13[HikariPool-1 housekeeper] [HikariPool:414] - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:52:13[HikariPool-1 housekeeper] [HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [ApplicationAvailabilityBean:77] - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [AnnotationConfigServletWebServerApplicationContext:1064] - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@524f3b3a, started on Sun Jan 14 23:44:41 KST 2024
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:476] - Stopping beans in phase 2147483647
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:476] - Stopping beans in phase 2147482623
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:348] - Bean 'webServerGracefulShutdown' completed its stop procedure
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:476] - Stopping beans in phase 2147481599
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:348] - Bean 'webServerStartStop' completed its stop procedure
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:476] - Stopping beans in phase -2147483647
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [DefaultLifecycleProcessor:348] - Bean 'springBootLoggingLifecycle' completed its stop procedure
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [ThreadPoolTaskExecutor:313] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  24-01-14 23:52:25[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [SessionFactoryImpl:866] - HHH000031: Closing
TRACE 24-01-14 23:52:25[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4806fbf7] for TypeConfiguration
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b6247c5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4806fbf7]
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [AbstractServiceRegistryImpl:414] - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [BootstrapServiceRegistryImpl:298] - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
INFO  24-01-14 23:52:25[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [HikariPool:414] - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@14656be5: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@43741872: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2491249: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3381b60b: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6266ed06: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@20df3cd5: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6628f3c1: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2606aae3: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2dfbb466: (connection evicted)
DEBUG 24-01-14 23:52:25[HikariPool-1 connection closer] [PoolBase:132] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@715282fc: (connection evicted)
DEBUG 24-01-14 23:52:25[SpringApplicationShutdownHook] [HikariPool:414] - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
INFO  24-01-14 23:52:25[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:52:34[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 23985 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:52:34[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:52:35[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:52:35[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 74 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:52:36[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:52:36[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:52:36[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:52:36[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:52:36[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:52:36[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1149 ms
INFO  24-01-14 23:52:36[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:52:36[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:52:36[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ef86c72
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@123307c4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1693ff90
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@47058864
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@ad3f70a
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@54ccb3
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9b2dc56
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@621f23ac
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7761e342
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@51f68849
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4eb9ae4d
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5520f675
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2d237460
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@6f15f52a
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6f15f52a
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@682e445e
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79e10fb4
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@70fede7d
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c47a053
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d2a86c0
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ba1b62e
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@65bd19bf
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@74697863
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d7ceca8
INFO  24-01-14 23:52:36[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:52:36[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:52:36[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23469199
INFO  24-01-14 23:52:36[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@246de37e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19647566)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b79ff1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@527d48db)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@194037f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2335aef2)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17003497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f038d3c)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@376498da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39a8e2fa)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f9addd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c43df76)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ff2266c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71b3ba5a)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a047bdb)
DEBUG 24-01-14 23:52:36[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7856f41a)
DEBUG 24-01-14 23:52:36[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:52:36[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:52:36[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:52:36[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:52:36[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5d800a56
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@682e445e`
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:52:36[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:52:36[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7573c7b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73da7f08]
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:52:37[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:52:37[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7573c7b5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5542418c]
TRACE 24-01-14 23:52:37[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5542418c] for TypeConfiguration
INFO  24-01-14 23:52:37[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:52:37[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:52:38[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:52:38[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:52:38[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.886 seconds (process running for 4.168)
INFO  24-01-14 23:52:47[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:52:47[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:52:47[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 3 ms
INFO  24-01-14 23:52:48[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-14 23:52:48[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-14 23:52:48[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:52:48[http-nio-8080-exec-2] [MenuController:36] - createMemberId : 202401141129570000000000000012
WARN  24-01-14 23:54:14[HikariPool-1 housekeeper] [HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m37s341ms).
DEBUG 24-01-14 23:54:14[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1956505207<open>)] for JPA transaction
DEBUG 24-01-14 23:54:14[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:54:14[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@30725ce1]
DEBUG 24-01-14 23:54:14[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:54:14[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1956505207<open>)]
DEBUG 24-01-14 23:54:14[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:54:23[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:19)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:56:28[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24056 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:56:28[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:56:29[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:56:29[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 52 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:56:29[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:56:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:56:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:56:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:56:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:56:29[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1040 ms
INFO  24-01-14 23:56:29[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:56:30[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:56:30[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@48f2054d
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b3a01d8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@19fbc594
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2f4d32bf
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@774d8276
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ce26986
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2bf2d6eb
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d6cd1e0
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76a9a009
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9785903
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@34009349
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f68a7f8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4faf1f4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4f811029
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7f2b584b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5866731
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@56a05324
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11e71181
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70fede7d
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@3d1c933
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@79be91eb
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@626c569b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65593327
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68e5c7ae
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68bd8ca7
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6744707b
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b28a7bf
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@d36c1c3
INFO  24-01-14 23:56:30[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:56:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:56:30[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bc0b8c8
INFO  24-01-14 23:56:30[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71b3ba5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@83ebdc5)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a047bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14dbfdb1)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7856f41a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5fbae40)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c08c787) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67f591c2)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@284c4f02) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709d6de5)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a43a88e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51f34185)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8d20e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e49437)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7645b7d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c50cd7d)
DEBUG 24-01-14 23:56:30[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea84e01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a4930cf)
DEBUG 24-01-14 23:56:30[main] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-14 23:56:30[main] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-14 23:56:30[main] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-14 23:56:30[main] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:56:30[main] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@63c84d31
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3d1c933`
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:56:30[main] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-14 23:56:30[main] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a54638b]
INFO  24-01-14 23:56:30[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:56:31[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-14 23:56:31[main] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c3d22f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
TRACE 24-01-14 23:56:31[main] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
INFO  24-01-14 23:56:31[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:56:31[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:56:32[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:56:32[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:56:32[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.681 seconds (process running for 3.975)
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [MenuController:33] - here1
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [MenuController:34] - title : test menu
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:56:45[http-nio-8080-exec-2] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:56:45[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1135448837<open>)] for JPA transaction
DEBUG 24-01-14 23:56:45[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:56:45[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f7d1b8f]
DEBUG 24-01-14 23:56:45[http-nio-8080-exec-2] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:56:45[http-nio-8080-exec-2] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1135448837<open>)]
DEBUG 24-01-14 23:56:45[http-nio-8080-exec-2] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:56:45[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Unable to generate sequence] with root cause
java.sql.SQLException: Column Index out of range, 0 < 1.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:504)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:879)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:36)
	at com.footbolic.api.common.generator.CustomSequenceGenrator.generate(CustomSequenceGenrator.java:15)
	at org.hibernate.id.IdentifierGenerator.generate(IdentifierGenerator.java:147)
	at org.hibernate.event.internal.AbstractSaveEventListener.generateId(AbstractSaveEventListener.java:153)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:766)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:750)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:22)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:57:32[http-nio-8080-exec-4] [MenuController:33] - here1
INFO  24-01-14 23:57:32[http-nio-8080-exec-4] [MenuController:34] - title : test menu
INFO  24-01-14 23:57:32[http-nio-8080-exec-4] [MenuController:35] - path : /test/menu
INFO  24-01-14 23:57:32[http-nio-8080-exec-4] [MenuController:36] - createMemberId : 202401141129570000000000000012
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1239598308<open>)] for JPA transaction
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@472533a8]
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [SQL:135] - 
    select
        me1_0.id,
        me1_0.create_member_id,
        me1_0.created_at,
        me1_0.icon_code_id,
        me1_0.parent_id,
        me1_0.path,
        me1_0.title,
        me1_0.update_member_id,
        me1_0.updated_at 
    from
        menu me1_0 
    where
        me1_0.id=?
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [JpaTransactionManager:892] - Initiating transaction rollback
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [JpaTransactionManager:582] - Rolling back JPA transaction on EntityManager [SessionImpl(1239598308<open>)]
DEBUG 24-01-14 23:57:32[http-nio-8080-exec-4] [JpaTransactionManager:656] - Not closing pre-bound JPA EntityManager after transaction
ERROR 24-01-14 23:57:32[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: No default constructor for entity 'com.footbolic.api.menu.entity.MenuEntity'] with root cause
org.hibernate.InstantiationException: No default constructor for entity 'com.footbolic.api.menu.entity.MenuEntity'
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:93)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:4508)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1475)
	at org.hibernate.event.internal.DefaultMergeEventListener.copyEntity(DefaultMergeEventListener.java:271)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:226)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:347)
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:150)
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:143)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:127)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:81)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:859)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:845)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy131.merge(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy131.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:621)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy141.save(Unknown Source)
	at com.footbolic.api.menu.service.MenuServiceImpl.createMenu(MenuServiceImpl.java:22)
	at com.footbolic.api.menu.controller.MenuController.createMenu(MenuController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
INFO  24-01-14 23:59:40[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-14 23:59:40[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6dbdbb69] for TypeConfiguration
DEBUG 24-01-14 23:59:40[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45987589] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6dbdbb69]
INFO  24-01-14 23:59:40[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:59:40[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:59:42[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24092 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:59:42[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:59:43[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:59:43[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:59:43[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:59:43[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:59:43[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:59:43[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:59:43[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:59:43[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 958 ms
INFO  24-01-14 23:59:43[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:59:43[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:59:43[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
INFO  24-01-14 23:59:44[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:59:44[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:59:44[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bbf20d1
INFO  24-01-14 23:59:44[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:44[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-01-14 23:59:44[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:59:45[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:59:45[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:59:45[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:59:45[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.305 seconds (process running for 3.531)
INFO  24-01-14 23:59:51[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-01-14 23:59:51[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-14 23:59:51[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-14 23:59:53[main] [FootbolicApplication:50] - Starting FootbolicApplication using Java 20.0.2.1 with PID 24096 (/Users/test/Desktop/git/footbolic/footbolic-BE/footbolic/build/classes/java/main started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-14 23:59:53[main] [FootbolicApplication:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-14 23:59:53[main] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-14 23:59:53[main] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interface.
INFO  24-01-14 23:59:54[main] [TomcatWebServer:108] - Tomcat initialized with port 8080 (http)
INFO  24-01-14 23:59:54[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:59:54[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-01-14 23:59:54[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.16]
INFO  24-01-14 23:59:54[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-01-14 23:59:54[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 945 ms
INFO  24-01-14 23:59:54[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-14 23:59:54[main] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-14 23:59:54[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
INFO  24-01-14 23:59:54[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-14 23:59:54[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-14 23:59:54[main] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bbf20d1
INFO  24-01-14 23:59:54[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.PostRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.authorization.entity.AuthorizationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.member.entity.MemberEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.post.entity.PostEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.board.entity.BoardEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.common_code.entity.CommonCodeEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.banner.entity.BannerEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.notification.entity.NotificationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.role.entity.RoleEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.reply.entity.ReplyEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.comment.entity.CommentEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.menu.entity.MenuEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.CommentRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [EntityInstantiatorPojoStandard:53] - HHH000182: No default (no-argument) constructor for class: com.footbolic.api.recommendation.entity.ReplyRecommendationEntity (class must be instantiated by Interceptor)
INFO  24-01-14 23:59:55[main] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-01-14 23:59:55[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-14 23:59:55[main] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-14 23:59:56[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-01-14 23:59:56[main] [TomcatWebServer:221] - Tomcat started on port 8080 (http) with context path ''
INFO  24-01-14 23:59:56[main] [FootbolicApplication:56] - Started FootbolicApplication in 3.298 seconds (process running for 3.518)
