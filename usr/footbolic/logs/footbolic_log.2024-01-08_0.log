INFO  24-01-08 02:13:52[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13111 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:13:52[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:13:53[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:13:53[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:13:53[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:13:53[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:13:53[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@7185e611
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7185e611
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7493d937
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5dc7841c
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d67d5a4
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@600bbf9e
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@18d30e7
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@72b40f87
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2475fba3
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 02:13:53[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@71dd4624
INFO  24-01-08 02:13:54[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:13:54[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:13:54[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1686ed85
INFO  24-01-08 02:13:54[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f237ae7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42edde25)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fe5da76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d95e5a)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33e8e146)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18463720)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34)
DEBUG 24-01-08 02:13:54[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 02:13:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:13:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:13:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:13:54[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:13:54[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1f75fd1d
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7493d937`
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:13:54[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:13:54[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ae958b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c682e26]
ERROR 24-01-08 02:13:54[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
WARN  24-01-08 02:13:54[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
INFO  24-01-08 02:13:54[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:13:54[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:13:54[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:13:54[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 02:13:54[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@124ff64d]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7e9a836 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 02:15:18[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13135 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:15:18[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:15:19[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:15:19[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:15:19[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:15:19[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:15:19[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a5e2525
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a5e2525
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3a5e2525
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6546371
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6546371
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b458cd6
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b458cd6
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4c2c44e8
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4c2c44e8
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@5c9e8a67
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5c9e8a67
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@56e5c8fb
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@45cd8607
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@9e33a6a
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7493d937
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5dc7841c
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4d67d5a4
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a3b858f
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@600bbf9e
DEBUG 24-01-08 02:15:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18d30e7
INFO  24-01-08 02:15:19[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:15:19[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:15:19[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38e7860c
INFO  24-01-08 02:15:19[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45311a99) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7037a680)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@492c8137) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@420b55ed)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f237ae7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42edde25)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6fe5da76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77d95e5a)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f8900b0)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33e8e146)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18463720)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 02:15:20[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 02:15:20[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:15:20[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:15:20[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:15:20[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:15:20[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5c60c08
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@56e5c8fb`
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:15:20[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:15:20[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ec7ad61] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2833c093]
ERROR 24-01-08 02:15:20[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
WARN  24-01-08 02:15:20[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
INFO  24-01-08 02:15:20[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:15:20[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:15:20[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:15:20[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 02:15:20[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@5018b56b]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@a6fc1bc testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 02:15:41[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13146 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:15:41[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:15:42[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:15:42[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:15:42[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:15:42[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:15:42[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@4d67d5a4
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4d67d5a4
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@507049f2
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4e94669c
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@41bb1f09
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@b3fc6d8
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@12e5d3e1
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5a4c98d7
INFO  24-01-08 02:15:42[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:15:42[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:15:42[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@498e41a4
INFO  24-01-08 02:15:42[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f525e13) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d404a3c)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f44d033)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6644bdf5)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 02:15:42[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 02:15:42[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:15:42[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:15:42[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:15:42[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:15:42[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7b4619a3
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@507049f2`
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:15:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:15:42[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a99fa07] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45b8bbbf]
ERROR 24-01-08 02:15:42[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
WARN  24-01-08 02:15:42[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
INFO  24-01-08 02:15:42[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:15:42[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:15:42[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:15:43[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 02:15:43[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@7323c38c]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@56da8847 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Entity 'com.footbolic.api.common_code.entity.CommonCodeEntity' has no identifier (every '@Entity' class must declare or inherit at least one '@Id' or '@EmbeddedId' property)
	at org.hibernate.boot.model.internal.InheritanceState.determineDefaultAccessType(InheritanceState.java:279)
	at org.hibernate.boot.model.internal.InheritanceState.getElementsToProcess(InheritanceState.java:215)
	at org.hibernate.boot.model.internal.InheritanceState.postProcess(InheritanceState.java:160)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:296)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 02:28:03[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13322 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:28:03[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:28:04[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:28:04[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:28:04[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:28:04[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:28:04[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@3b8507df
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b8507df
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@600bbf9e
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@18d30e7
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72b40f87
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71dd4624
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2347b7af
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2864f887
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b07cad0
DEBUG 24-01-08 02:28:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@507049f2
INFO  24-01-08 02:28:05[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:28:05[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:28:05[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@192f5f39
INFO  24-01-08 02:28:05[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33e8e146)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18463720)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb)
DEBUG 24-01-08 02:28:05[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7)
DEBUG 24-01-08 02:28:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:28:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:28:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:28:05[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:28:05[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@49cceb19
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@600bbf9e`
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:28:05[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:28:05[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34a33343] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@98722ef]
ERROR 24-01-08 02:28:05[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
WARN  24-01-08 02:28:05[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
INFO  24-01-08 02:28:05[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:28:05[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:28:05[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:28:05[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
ERROR 24-01-08 02:28:05[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@24f3fb87]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7b423f90 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
INFO  24-01-08 02:31:58[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13417 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:31:58[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:31:58[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:31:58[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:31:59[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:31:59[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:31:59[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@384472bf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@384472bf
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@4d67d5a4
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a3b858f
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@600bbf9e
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@72b40f87
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2475fba3
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@71dd4624
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2347b7af
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2864f887
INFO  24-01-08 02:31:59[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:31:59[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:31:59[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4fc3529
INFO  24-01-08 02:31:59[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fe5da76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d95e5a)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33e8e146)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18463720)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 02:31:59[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb)
DEBUG 24-01-08 02:31:59[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:31:59[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:31:59[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:31:59[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:31:59[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@638d2ce3
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4d67d5a4`
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:31:59[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:31:59[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ff074a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@340fc1aa]
ERROR 24-01-08 02:31:59[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
WARN  24-01-08 02:31:59[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
INFO  24-01-08 02:31:59[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:31:59[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:31:59[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:31:59[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
ERROR 24-01-08 02:31:59[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@7b423f90]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@64ef2719 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
INFO  24-01-08 02:32:13[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13424 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:32:13[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:32:13[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:32:13[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:32:14[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:32:14[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:32:14[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@600bbf9e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@600bbf9e
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@41bb1f09
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@349f0ca4
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12e5d3e1
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2026fbff
INFO  24-01-08 02:32:14[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:32:14[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:32:14[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f5d7fd5
INFO  24-01-08 02:32:14[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6644bdf5)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 02:32:14[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 02:32:14[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:32:14[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:32:14[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:32:14[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:32:14[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1c411474
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@41bb1f09`
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:32:14[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:32:14[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1df06ecd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57927bc9]
ERROR 24-01-08 02:32:14[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
WARN  24-01-08 02:32:14[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
INFO  24-01-08 02:32:14[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:32:14[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:32:14[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:32:14[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
ERROR 24-01-08 02:32:14[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@7b5c9412]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@684a802a testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
INFO  24-01-08 02:38:57[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13506 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:38:57[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:38:57[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:38:57[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:38:58[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:38:58[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:38:58[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@18d30e7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@18d30e7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@349f0ca4
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@b3fc6d8
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2026fbff
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@baa227e
INFO  24-01-08 02:38:58[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:38:58[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:38:58[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@cf08c97
INFO  24-01-08 02:38:58[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6644bdf5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@319b1c77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51d88c38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e)
DEBUG 24-01-08 02:38:58[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b33c29) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@615ef20)
DEBUG 24-01-08 02:38:58[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:38:58[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:38:58[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:38:58[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:38:58[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5e681097
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@349f0ca4`
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:38:58[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:38:58[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57927bc9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@323efafe]
ERROR 24-01-08 02:38:58[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
WARN  24-01-08 02:38:58[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
INFO  24-01-08 02:38:58[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:38:58[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 02:38:58[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 02:38:59[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
ERROR 24-01-08 02:38:59[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@69d902f9]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7b5c9412 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
Caused by: org.hibernate.MappingException: Could not instantiate id generator [entity-name=com.footbolic.api.member.entity.MemberEntity]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:230)
	at org.hibernate.id.factory.internal.IdentifierGeneratorUtil.createLegacyIdentifierGenerator(IdentifierGeneratorUtil.java:126)
	at org.hibernate.mapping.SimpleValue.createGenerator(SimpleValue.java:415)
	at org.hibernate.internal.SessionFactoryImpl.lambda$createGenerators$1(SessionFactoryImpl.java:416)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.HashMap$ValueSpliterator.forEachRemaining(HashMap.java:1787)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.hibernate.internal.SessionFactoryImpl.createGenerators(SessionFactoryImpl.java:415)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:251)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 109 common frames omitted
Caused by: org.hibernate.MappingException: Could not interpret id generator strategy [com.footbolic.api.common.generator.CustomSequenceGenerator]
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.generatorClassForName(StandardIdentifierGeneratorFactory.java:271)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.getIdentifierGeneratorClass(StandardIdentifierGeneratorFactory.java:254)
	at org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory.createIdentifierGenerator(StandardIdentifierGeneratorFactory.java:210)
	... 128 common frames omitted
INFO  24-01-08 02:41:36[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 13577 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 02:41:36[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 02:41:37[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 02:41:37[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 02:41:37[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 02:41:37[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 02:41:37[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@600bbf9e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@600bbf9e
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@41bb1f09
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@349f0ca4
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12e5d3e1
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 02:41:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2026fbff
INFO  24-01-08 02:41:37[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 02:41:37[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 02:41:38[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f5d7fd5
INFO  24-01-08 02:41:38[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6644bdf5)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 02:41:38[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 02:41:38[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 02:41:38[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 02:41:38[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 02:41:38[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:41:38[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1c411474
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@41bb1f09`
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:41:38[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 02:41:38[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1df06ecd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57927bc9]
INFO  24-01-08 02:41:38[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-08 02:41:38[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1df06ecd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6a6a3fc4]
DEBUG 24-01-08 02:41:38[Test worker] [SQL:135] - 
    create table common_code (
        id varchar(255) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(255) not null,
        updated_member_id varchar(255),
        title varchar(255),
        value varchar(255),
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-08 02:41:38[Test worker] [SQL:135] - 
    create table member (
        id varchar(255) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        full_name varchar(255),
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-08 02:41:38[Test worker] [SQL:135] - 
    create table test_entity (
        id varchar(255) not null,
        val1 varchar(255),
        val2 varchar(255),
        primary key (id)
    ) engine=InnoDB
TRACE 24-01-08 02:41:38[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6a6a3fc4] for TypeConfiguration
INFO  24-01-08 02:41:38[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-08 02:41:38[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-08 02:41:39[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.203 seconds (process running for 4.117)
INFO  24-01-08 02:41:40[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-08 02:41:40[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6a6a3fc4] for TypeConfiguration
DEBUG 24-01-08 02:41:40[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1a4dc822] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6a6a3fc4]
INFO  24-01-08 02:41:40[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 02:41:40[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 22:54:05[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14293 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 22:54:05[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 22:54:05[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 22:54:05[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 22:54:06[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 22:54:06[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 22:54:06[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-08 22:54:06[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 22:54:06[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 22:54:06[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-08 22:54:06[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 22:54:06[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 22:54:06[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 22:54:06[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 22:54:06[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 22:54:06[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:54:06[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:54:06[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:54:06[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
ERROR 24-01-08 22:54:06[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 22:54:06[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 22:54:06[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 22:54:06[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 22:54:06[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 22:54:06[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 22:54:06[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@31204303]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@37e64e37 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 22:54:19[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14297 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 22:54:19[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 22:54:20[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 22:54:20[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 22:54:20[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 22:54:20[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 22:54:20[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@c497a55
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@c497a55
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2347b7af
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2864f887
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4b07cad0
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4e94669c
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@41bb1f09
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@349f0ca4
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@b3fc6d8
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@12e5d3e1
INFO  24-01-08 22:54:21[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 22:54:21[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 22:54:21[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35ceec81
INFO  24-01-08 22:54:21[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10f8e2d2)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f525e13)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a)
DEBUG 24-01-08 22:54:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9)
DEBUG 24-01-08 22:54:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 22:54:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 22:54:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 22:54:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:54:21[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@43d6262c
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2347b7af`
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:54:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:54:21[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@275902e1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c788d08]
ERROR 24-01-08 22:54:21[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 22:54:21[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 22:54:21[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 22:54:21[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 22:54:21[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 22:54:21[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 22:54:21[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@3458dab6]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@1b732dd testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 22:58:44[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14339 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 22:58:44[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 22:58:45[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 22:58:45[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 22:58:45[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 22:58:45[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 22:58:45[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-08 22:58:45[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 22:58:45[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 22:58:45[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-08 22:58:45[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 22:58:45[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 22:58:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 22:58:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 22:58:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 22:58:45[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:58:45[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:58:45[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:58:45[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
ERROR 24-01-08 22:58:46[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Property 'com.footbolic.api.member.entity.MemberEntity.role' is not a collection and may not be a '@OneToMany', '@ManyToMany', or '@ElementCollection'
WARN  24-01-08 22:58:46[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Property 'com.footbolic.api.member.entity.MemberEntity.role' is not a collection and may not be a '@OneToMany', '@ManyToMany', or '@ElementCollection'
INFO  24-01-08 22:58:46[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 22:58:46[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 22:58:46[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 22:58:46[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Property 'com.footbolic.api.member.entity.MemberEntity.role' is not a collection and may not be a '@OneToMany', '@ManyToMany', or '@ElementCollection'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Property 'com.footbolic.api.member.entity.MemberEntity.role' is not a collection and may not be a '@OneToMany', '@ManyToMany', or '@ElementCollection'
	at org.hibernate.boot.model.internal.CollectionBinder.determineSemanticJavaType(CollectionBinder.java:1107)
	at org.hibernate.boot.model.internal.CollectionBinder.determineCollectionClassification(CollectionBinder.java:999)
	at org.hibernate.boot.model.internal.CollectionBinder.createBinderAutomatically(CollectionBinder.java:841)
	at org.hibernate.boot.model.internal.CollectionBinder.getCollectionBinder(CollectionBinder.java:834)
	at org.hibernate.boot.model.internal.CollectionBinder.bindCollection(CollectionBinder.java:276)
	at org.hibernate.boot.model.internal.PropertyBinder.bindProperty(PropertyBinder.java:874)
	at org.hibernate.boot.model.internal.PropertyBinder.buildProperty(PropertyBinder.java:788)
	at org.hibernate.boot.model.internal.PropertyBinder.processElementAnnotations(PropertyBinder.java:709)
	at org.hibernate.boot.model.internal.EntityBinder.processIdPropertiesIfNotAlready(EntityBinder.java:977)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:305)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 22:58:46[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@5bdb9c69]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@44d84313 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Property 'com.footbolic.api.member.entity.MemberEntity.role' is not a collection and may not be a '@OneToMany', '@ManyToMany', or '@ElementCollection'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Property 'com.footbolic.api.member.entity.MemberEntity.role' is not a collection and may not be a '@OneToMany', '@ManyToMany', or '@ElementCollection'
	at org.hibernate.boot.model.internal.CollectionBinder.determineSemanticJavaType(CollectionBinder.java:1107)
	at org.hibernate.boot.model.internal.CollectionBinder.determineCollectionClassification(CollectionBinder.java:999)
	at org.hibernate.boot.model.internal.CollectionBinder.createBinderAutomatically(CollectionBinder.java:841)
	at org.hibernate.boot.model.internal.CollectionBinder.getCollectionBinder(CollectionBinder.java:834)
	at org.hibernate.boot.model.internal.CollectionBinder.bindCollection(CollectionBinder.java:276)
	at org.hibernate.boot.model.internal.PropertyBinder.bindProperty(PropertyBinder.java:874)
	at org.hibernate.boot.model.internal.PropertyBinder.buildProperty(PropertyBinder.java:788)
	at org.hibernate.boot.model.internal.PropertyBinder.processElementAnnotations(PropertyBinder.java:709)
	at org.hibernate.boot.model.internal.EntityBinder.processIdPropertiesIfNotAlready(EntityBinder.java:977)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:305)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:231)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 22:59:29[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14357 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 22:59:29[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 22:59:30[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 22:59:30[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 22:59:30[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 22:59:30[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 22:59:30[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 22:59:30[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-08 22:59:31[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 22:59:31[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 22:59:31[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-08 22:59:31[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 22:59:31[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 22:59:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 22:59:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 22:59:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 22:59:31[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:59:31[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:59:31[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 22:59:31[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
ERROR 24-01-08 22:59:31[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 22:59:31[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 22:59:31[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 22:59:31[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 22:59:31[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 22:59:31[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 22:59:31[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@4f563f96]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@6d6712b7 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:05:35[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14407 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:05:35[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:05:36[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:05:36[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:05:36[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:05:36[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:05:36[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7103745
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@227a933d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@25de8898
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:05:36[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@7185e611
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7185e611
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7493d937
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5dc7841c
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d67d5a4
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@600bbf9e
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@18d30e7
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@72b40f87
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2475fba3
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@71dd4624
INFO  24-01-08 23:05:37[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:05:37[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:05:37[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1686ed85
INFO  24-01-08 23:05:37[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f237ae7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42edde25)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fe5da76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d95e5a)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33e8e146)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18463720)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34)
DEBUG 24-01-08 23:05:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 23:05:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:05:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:05:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:05:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:05:37[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1f75fd1d
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7493d937`
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:05:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:05:37[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ae958b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c682e26]
ERROR 24-01-08 23:05:37[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:05:37[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:05:37[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:05:37[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:05:37[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:05:37[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:05:37[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@44d84313]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@56f61d74 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:06:35[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14430 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:06:35[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:06:36[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:06:36[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:06:36[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:06:36[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:06:36[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@bfb93cf
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@656ec00d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@656ec00d
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@a3b858f
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@600bbf9e
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@18d30e7
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2475fba3
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71dd4624
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2347b7af
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2864f887
DEBUG 24-01-08 23:06:36[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4b07cad0
INFO  24-01-08 23:06:37[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:06:37[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:06:37[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38e46765
INFO  24-01-08 23:06:37[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d95e5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e7e455d)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33e8e146) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f4d38f9)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18463720) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048ac4)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d404a3c)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48692405)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a58e0e9)
DEBUG 24-01-08 23:06:37[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f44d033)
DEBUG 24-01-08 23:06:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:06:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:06:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:06:37[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:06:37[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@79617c3d
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@a3b858f`
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:06:37[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:06:37[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@340fc1aa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34a33343]
ERROR 24-01-08 23:06:37[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:06:37[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:06:37[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:06:37[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:06:40[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14435 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:06:40[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:06:41[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:06:41[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:06:41[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:06:41[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:06:41[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@4b07cad0
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4b07cad0
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@668a32a4
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2026fbff
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@e2b3026
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@38bc5ac0
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6ef037e4
INFO  24-01-08 23:06:41[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:06:41[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:06:41[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b9f7edc
INFO  24-01-08 23:06:41[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@319b1c77)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 23:06:41[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60ab895f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@295f2d1b)
DEBUG 24-01-08 23:06:41[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:06:41[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:06:41[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:06:41[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:06:41[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@7c47e077
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@668a32a4`
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:06:41[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:06:41[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7791ff50] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46de118b]
ERROR 24-01-08 23:06:41[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:06:41[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:06:41[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:06:42[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:06:42[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:06:42[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:06:42[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@4acc27fd]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@3eadad14 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:07:03[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14445 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:07:03[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:07:03[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:07:03[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:07:04[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:07:04[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:07:04[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-08 23:07:04[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:07:04[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:07:04[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-08 23:07:04[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 23:07:04[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 23:07:04[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:07:04[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:07:04[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:07:04[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:07:04[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:07:04[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:07:04[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
ERROR 24-01-08 23:07:04[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:07:04[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:07:04[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:07:04[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:07:04[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:07:04[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:07:04[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@4f563f96]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@6d6712b7 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:08:18[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14462 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:08:18[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:08:19[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:08:19[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:08:19[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:08:19[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:08:19[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@600bbf9e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@600bbf9e
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@41bb1f09
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@349f0ca4
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12e5d3e1
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2fb082ff
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2026fbff
INFO  24-01-08 23:08:19[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:08:19[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:08:19[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f5d7fd5
INFO  24-01-08 23:08:19[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6644bdf5)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c9ea1d0)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 23:08:19[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 23:08:19[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:08:19[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:08:19[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:08:19[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:08:19[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@1c411474
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@41bb1f09`
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:08:19[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:08:19[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1df06ecd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57927bc9]
ERROR 24-01-08 23:08:20[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:08:20[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:08:20[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:08:20[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:08:20[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:08:20[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:08:20[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@24955144]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@de0c402 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:09:06[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14482 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:09:06[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:09:07[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:09:07[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:09:07[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:09:07[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:09:08[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@b3fc6d8
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@b3fc6d8
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@4fbb1144
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e2b3026
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38bc5ac0
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@79d63a4f
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e2b9f53
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@749baa0c
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b3bec6c
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@53f7a906
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2154652c
INFO  24-01-08 23:09:08[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:09:08[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:09:08[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@eb1d475
INFO  24-01-08 23:09:08[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51d88c38)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b33c29)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13390a96)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60ab895f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@295f2d1b)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65015a49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44e08a7a)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78bd02c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28dacf31)
DEBUG 24-01-08 23:09:08[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47e60b71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@795faad)
DEBUG 24-01-08 23:09:08[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:09:08[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:09:08[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:09:08[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:09:08[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@57b130f6
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4fbb1144`
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:09:08[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:09:08[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5b23c1f6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f4964f2]
ERROR 24-01-08 23:09:08[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:09:08[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:09:08[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:09:08[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:09:08[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:09:08[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:09:08[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@416d90f0]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@639948a2 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:11:14[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14507 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:11:14[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:11:14[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:11:14[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:11:15[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:11:15[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:11:15[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@3b8507df
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b8507df
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@600bbf9e
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@18d30e7
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72b40f87
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71dd4624
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2347b7af
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2864f887
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b07cad0
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@507049f2
INFO  24-01-08 23:11:15[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:11:15[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:11:15[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@192f5f39
INFO  24-01-08 23:11:15[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33e8e146)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18463720)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb)
DEBUG 24-01-08 23:11:15[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7)
DEBUG 24-01-08 23:11:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:11:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:11:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:11:15[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:11:15[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@49cceb19
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@600bbf9e`
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:11:15[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:11:15[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34a33343] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@98722ef]
ERROR 24-01-08 23:11:15[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:11:15[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:11:15[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:11:15[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:11:15[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:11:15[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:11:15[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@c6244e7]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7ef9c8a5 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:12:41[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14527 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:12:41[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:12:42[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:12:42[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:12:42[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:12:42[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:12:42[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 23:12:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-08 23:12:42[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:12:42[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:12:43[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-08 23:12:43[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 23:12:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 23:12:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:12:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:12:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:12:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:12:43[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:12:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:12:43[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
ERROR 24-01-08 23:12:43[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
WARN  24-01-08 23:12:43[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
INFO  24-01-08 23:12:43[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:12:43[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:12:43[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:12:43[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:12:43[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@35555145]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@97b84a4 testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.DuplicateMappingException: Entity classes [com.footbolic.api.authorization.entity.AuthorizationEntity] and [com.footbolic.api.role.entity.RoleEntity] share the entity name 'RoleEntity' (entity names must be distinct)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:339)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:241)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:422)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:16:20[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14568 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:16:20[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:16:20[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:16:20[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:16:20[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:16:21[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:16:21[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@dd737ea
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7bc2ae16
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a0963be
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d3bf8db
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49e7e8f1
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27bb4dc5
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464ede1f
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@64910b2d
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@3b8507df
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3b8507df
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@600bbf9e
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@18d30e7
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@72b40f87
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19bf47fc
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71dd4624
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2347b7af
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2864f887
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b07cad0
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@507049f2
INFO  24-01-08 23:16:21[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:16:21[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:16:21[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@192f5f39
INFO  24-01-08 23:16:21[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6339e604) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e7e455d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33e8e146)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f4d38f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18463720)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64eeddd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@151659dd)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb)
DEBUG 24-01-08 23:16:21[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7)
DEBUG 24-01-08 23:16:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:16:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:16:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:16:21[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:16:21[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@49cceb19
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@600bbf9e`
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:16:21[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:16:21[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34a33343] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@98722ef]
INFO  24-01-08 23:16:22[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-08 23:16:22[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34a33343] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72d7afff]
DEBUG 24-01-08 23:16:22[Test worker] [SQL:135] - 
    create table authorization (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(255) not null,
        updated_member_id varchar(255),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-08 23:16:22[Test worker] [SQL:135] - 
    alter table member 
       add column nickname varchar(20) not null
DEBUG 24-01-08 23:16:22[Test worker] [SQL:135] - 
    alter table member 
       add column refresh_token varchar(100)
DEBUG 24-01-08 23:16:22[Test worker] [SQL:135] - 
    alter table member 
       add column role_id varchar(30) not null
DEBUG 24-01-08 23:16:22[Test worker] [SQL:135] - 
    create table role (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(255) not null,
        updated_member_id varchar(255),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
TRACE 24-01-08 23:16:22[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72d7afff] for TypeConfiguration
INFO  24-01-08 23:16:22[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-08 23:16:22[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-08 23:16:22[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.154 seconds (process running for 3.896)
INFO  24-01-08 23:16:23[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-08 23:16:23[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72d7afff] for TypeConfiguration
DEBUG 24-01-08 23:16:23[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@22c3cd7c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72d7afff]
INFO  24-01-08 23:16:23[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:16:23[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:23:41[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14655 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:23:41[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:23:42[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:23:42[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:23:42[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:23:42[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:23:42[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@38732372
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@639cb788
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2fee69a1
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d25f816
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6c6c2a73
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6a4af081
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36b53f08
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@54329480
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@b3fc6d8
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@b3fc6d8
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@4fbb1144
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e2b3026
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38bc5ac0
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@79d63a4f
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2e2b9f53
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@749baa0c
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b3bec6c
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@53f7a906
DEBUG 24-01-08 23:23:42[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2154652c
INFO  24-01-08 23:23:43[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:23:43[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:23:43[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@eb1d475
INFO  24-01-08 23:23:43[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51d88c38)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b33c29)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13390a96)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60ab895f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@295f2d1b)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65015a49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44e08a7a)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78bd02c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28dacf31)
DEBUG 24-01-08 23:23:43[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47e60b71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@795faad)
DEBUG 24-01-08 23:23:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:23:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:23:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:23:43[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:23:43[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@57b130f6
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4fbb1144`
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:23:43[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:23:43[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5b23c1f6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f4964f2]
ERROR 24-01-08 23:23:43[Test worker] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Collection 'com.footbolic.api.role.entity.RoleEntity.authorizations' is 'mappedBy' a property named 'role_id' which does not exist in the target entity 'com.footbolic.api.authorization.entity.AuthorizationEntity'
WARN  24-01-08 23:23:43[Test worker] [GenericWebApplicationContext:624] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.role.entity.RoleEntity.authorizations' is 'mappedBy' a property named 'role_id' which does not exist in the target entity 'com.footbolic.api.authorization.entity.AuthorizationEntity'
INFO  24-01-08 23:23:43[Test worker] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:23:43[Test worker] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:23:43[Test worker] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 24-01-08 23:23:43[Test worker] [SpringApplication:839] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.role.entity.RoleEntity.authorizations' is 'mappedBy' a property named 'role_id' which does not exist in the target entity 'com.footbolic.api.authorization.entity.AuthorizationEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.role.entity.RoleEntity.authorizations' is 'mappedBy' a property named 'role_id' which does not exist in the target entity 'com.footbolic.api.authorization.entity.AuthorizationEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
ERROR 24-01-08 23:23:43[Test worker] [TestContextManager:251] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.footbolic.api.FootbolicApplicationTests@16a499d1]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@15f11bfb testClass = com.footbolic.api.FootbolicApplicationTests, locations = [], classes = [com.footbolic.api.FootbolicApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7b94089b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@561868a0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@21a21c64, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6995bf68, org.springframework.boot.test.context.SpringBootTestAnnotation@842f4968], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.footbolic.api.role.entity.RoleEntity.authorizations' is 'mappedBy' a property named 'role_id' which does not exist in the target entity 'com.footbolic.api.authorization.entity.AuthorizationEntity'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 84 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.footbolic.api.role.entity.RoleEntity.authorizations' is 'mappedBy' a property named 'role_id' which does not exist in the target entity 'com.footbolic.api.authorization.entity.AuthorizationEntity'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1611)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1625)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1586)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1577)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1815)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1774)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:331)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 105 common frames omitted
INFO  24-01-08 23:24:51[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14677 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:24:51[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:24:52[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:24:52[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:24:52[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:24:52[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:24:52[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1247c72e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6fef75c6
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f61e002
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@334540a0
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1f179f51
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@b428830
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5b7308aa
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@42aa1324
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6164e137
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@5dc7841c
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dc7841c
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@4b07cad0
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@507049f2
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4e94669c
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@349f0ca4
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@66f2ec1c
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@b3fc6d8
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@12e5d3e1
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5ed31735
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2fb082ff
INFO  24-01-08 23:24:52[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:24:52[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:24:52[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c8df667
INFO  24-01-08 23:24:52[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66048ac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f525e13)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d404a3c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@af9dd34)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48692405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a58e0e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e8c84eb)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f44d033) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283bb8b7)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fa8297b)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13cf5f8a)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9)
DEBUG 24-01-08 23:24:52[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@319b1c77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1)
DEBUG 24-01-08 23:24:52[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:24:52[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:24:52[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:24:52[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:24:52[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@38cf4497
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4b07cad0`
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:24:52[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:24:52[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2adc1e84] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a99fa07]
INFO  24-01-08 23:24:53[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-08 23:24:53[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2adc1e84] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@42db3ff]
DEBUG 24-01-08 23:24:53[Test worker] [SQL:135] - 
    alter table authorization 
       add column role_id varchar(30) not null
DEBUG 24-01-08 23:24:53[Test worker] [SQL:135] - 
    alter table authorization 
       add constraint FKppy54ofvqhdhnntwp700flik7 
       foreign key (id) 
       references role (id)
DEBUG 24-01-08 23:24:53[Test worker] [SQL:135] - 
    alter table member 
       add constraint FKdvt2ayjr1vl5vhxy7veqs8m8m 
       foreign key (id) 
       references role (id)
TRACE 24-01-08 23:24:53[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@42db3ff] for TypeConfiguration
INFO  24-01-08 23:24:53[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-08 23:24:53[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-08 23:24:54[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.178 seconds (process running for 3.962)
INFO  24-01-08 23:24:54[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-08 23:24:54[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@42db3ff] for TypeConfiguration
DEBUG 24-01-08 23:24:54[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6fc6f7a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@42db3ff]
INFO  24-01-08 23:24:54[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:24:54[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  24-01-08 23:54:32[Test worker] [FootbolicApplicationTests:50] - Starting FootbolicApplicationTests using Java 20.0.2.1 with PID 14882 (started by test in /Users/test/Desktop/git/footbolic/footbolic-BE/footbolic)
INFO  24-01-08 23:54:32[Test worker] [FootbolicApplicationTests:653] - No active profile set, falling back to 1 default profile: "default"
INFO  24-01-08 23:54:32[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-01-08 23:54:32[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 15 ms. Found 0 JPA repository interfaces.
INFO  24-01-08 23:54:33[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-01-08 23:54:33[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.3.1.Final
INFO  24-01-08 23:54:33[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ef8e623
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d8d970e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fac80a8
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6987a133
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50778bde
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1934339
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4af12a63
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration image -> org.hibernate.type.BasicTypeReference@1eab8437
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72eed547
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@69ffdaa8
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a1e57c6
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@68d6f48e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration int -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c96403e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7babed9e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2353354a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c7ed72a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22b7ef2b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d421fe
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c17bd0b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36dafa24
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b098563
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c758a2d
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d0b814d
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6ce15112
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration text -> org.hibernate.type.BasicTypeReference@ba4f370
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba024cb
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7af0d91b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c7f6e96
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ec211a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ac0cdb0
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6684f7f2
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1682e6a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@505d2bac
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cecc15a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d969452
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d4df0f4
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74f4a2ba
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5e385b6f
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67b560fe
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45dde6ac
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14ed7ddf
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@892af0e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@446c8c72
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e2eead5
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11d2714a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ca546a1
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c8a445b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@356b6b5d
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37b1149b
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1187dc82
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd1ea75
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18e4551
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ea48c37
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11e834ad
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@710ae6a7
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d911a
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18026052
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@489f62a3
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e068ac9
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d0352
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bb6f3f7
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@388f1258
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62058742
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@aca2fc3
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration url -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36df4c26
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@76828577
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2347b7af
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@2fb082ff
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a4c98d7
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@668a32a4
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@baa227e
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351e89fc
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b682e9
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@15586843
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fbb1144
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:410] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e2b3026
INFO  24-01-08 23:54:33[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
INFO  24-01-08 23:54:33[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  24-01-08 23:54:33[Test worker] [HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42b43a6
INFO  24-01-08 23:54:33[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e95af1)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa8297b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6644bdf5)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13cf5f8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c9ea1d0)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72f3acc9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@319b1c77)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@584136c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51d88c38)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ea2f72e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b33c29)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615ef20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13390a96)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a8b9458) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7497a554)
DEBUG 24-01-08 23:54:33[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd23809) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@664f49f)
DEBUG 24-01-08 23:54:33[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-01-08 23:54:33[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-01-08 23:54:33[Test worker] [JdbcTypeRegistry:58] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-01-08 23:54:33[Test worker] [JdbcTypeRegistry:58] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:54:33[Test worker] [JdbcTypeRegistry:66] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration null -> org.hibernate.type.NullType@5a2035e1
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:389] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2fb082ff`
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:54:33[Test worker] [BasicTypeRegistry:385] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-01-08 23:54:33[Test worker] [TypeConfiguration$Scope:192] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4182a651]
INFO  24-01-08 23:54:34[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-01-08 23:54:34[Test worker] [TypeConfiguration$Scope:204] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2de7c84a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@11896af6]
DEBUG 24-01-08 23:54:34[Test worker] [SQL:135] - 
    alter table authorization 
       add column menu_id varchar(30) not null
DEBUG 24-01-08 23:54:34[Test worker] [SQL:135] - 
    create table menu (
        id varchar(30) not null,
        created_at datetime(6) not null,
        updated_at datetime(6),
        created_member_id varchar(30) not null,
        updated_member_id varchar(30),
        parent_id varchar(30),
        path varchar(100),
        title varchar(20) not null,
        primary key (id)
    ) engine=InnoDB
DEBUG 24-01-08 23:54:34[Test worker] [SQL:135] - 
    alter table authorization 
       add constraint FKe5kqkwximclgvr9ieb4hh5l2y 
       foreign key (id) 
       references member (id)
DEBUG 24-01-08 23:54:34[Test worker] [SQL:135] - 
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)
WARN  24-01-08 23:54:34[Test worker] [ExceptionHandlerLoggedImpl:27] - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table menu 
       add constraint FKqbwlfk2b602vs4adhwkthqcvd 
       foreign key (id) 
       references menu (id)" via JDBC [Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1173)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:936)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1442)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Failed to add the foreign key constraint. Missing index for constraint 'FKqbwlfk2b602vs4adhwkthqcvd' in the referenced table 'menu'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 126 common frames omitted
TRACE 24-01-08 23:54:34[Test worker] [TypeConfiguration$Scope:268] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@11896af6] for TypeConfiguration
INFO  24-01-08 23:54:34[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-01-08 23:54:34[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-01-08 23:54:35[Test worker] [FootbolicApplicationTests:56] - Started FootbolicApplicationTests in 3.213 seconds (process running for 4.001)
INFO  24-01-08 23:54:35[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-01-08 23:54:35[SpringApplicationShutdownHook] [TypeConfiguration$Scope:274] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@11896af6] for TypeConfiguration
DEBUG 24-01-08 23:54:35[SpringApplicationShutdownHook] [TypeConfiguration$Scope:553] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2b0eca7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@11896af6]
INFO  24-01-08 23:54:35[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  24-01-08 23:54:35[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
